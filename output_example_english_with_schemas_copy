eval_err_num:1
extra pred: SELECT s.name FROM storm s JOIN affected_region ar ON s.storm_id = ar.storm_id GROUP BY s.name HAVING COUNT(DISTINCT ar.region_id) >= 2 AND SUM(ar.number_city_affected) >= 10
extra gold: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10 

eval_err_num:2
hard pred: SELECT name FROM instructor WHERE department_name = "Statistics" ORDER BY salary ASC LIMIT 1
hard gold: SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1 

eval_err_num:3
hard pred: SELECT DISTINCT customer_name FROM customers INNER JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE order_status_code = 'Pending' ORDER BY customers.customer_id
hard gold: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  "Pending" ORDER BY T2.customer_id 

hard pred: SELECT date FROM perpetrator JOIN people ON perpetrator.people_id = people.people_id WHERE height = (SELECT MAX(height) FROM people)
hard gold: SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1 

hard pred: SELECT DISTINCT publisher FROM book_club WHERE year = 1989 AND publisher IN ( SELECT publisher FROM book_club WHERE year = 1990 )
hard gold: SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990 

eval_err_num:4
easy pred: SELECT first_name FROM student WHERE major = 600
easy gold: SELECT Fname FROM Student WHERE Major  =  600 

eval_err_num:5
hard pred: SELECT level, count(*) as num_people FROM member GROUP BY level ORDER BY num_people DESC LIMIT 1
hard gold: SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1 

eval_err_num:6
extra pred: SELECT count(*) FROM routes JOIN airports AS source ON routes.source_airport_id = source.airport_id JOIN airports AS destination ON routes.destination_airport_id = destination.airport_id WHERE source.country = 'United States' AND destination.country = 'Canada'
extra gold: SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States') 

eval_err_num:7
hard pred: SELECT MAX(resolution), MIN(resolution) FROM song WHERE duration = '3 minutes'
hard gold: SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE "3:%" 

eval_err_num:8
extra pred: SELECT apartment_number FROM apartments WHERE apartment_id IN ( SELECT apartment_id FROM apartment_bookings WHERE booking_status_code = 'Provisional' ) AND apartment_id IN ( SELECT apartment_id FROM apartment_bookings WHERE booking_status_code = 'Confirmed' )
extra gold: SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  "Confirmed" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  "Provisional" 

eval_err_num:9
medium pred: SELECT booking_status_code FROM apartment_bookings AS AB JOIN apartments AS A ON AB.apartment_id = A.apartment_id WHERE A.apartment_number = "Suite 634"
medium gold: SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  "Suite 634" 

eval_err_num:10
medium pred: SELECT shop_details FROM shops WHERE location_id IN ( SELECT location_id FROM locations WHERE other_details CONTAINS "can be reached by walk" )
medium gold: SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  "walk" 

eval_err_num:11
medium pred: SELECT room_name FROM rooms ORDER BY max_occupancy DESC LIMIT 1
medium gold: SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1; 

eval_err_num:12
hard pred: SELECT department_name FROM department ORDER BY total_credits DESC LIMIT 1
hard gold: SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1 

eval_err_num:13
medium pred: SELECT r.role_description, r.role_code, COUNT(e.employee_id) AS number_of_employees FROM roles r LEFT JOIN employees e ON r.role_code = e.role_code GROUP BY r.role_description, r.role_code
medium gold: SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code; 

extra pred: SELECT problem_id, problem_log_id FROM problem_log WHERE assigned_to_staff_id = (SELECT staff_id FROM staff WHERE staff_first_name = 'Rylan' AND staff_last_name = 'Homenick')
extra gold: SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = "Rylan" AND T1.staff_last_name = "Homenick" 

eval_err_num:14
medium pred: SELECT MIN(product_price) AS min_price, MAX(product_price) AS max_price, AVG(product_price) AS avg_price FROM products
medium gold: SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products 

eval_err_num:15
hard pred: SELECT location FROM shop WHERE open_year > 2012 AND open_year < 2008 GROUP BY location HAVING COUNT(DISTINCT CASE WHEN open_year > 2012 THEN shop_id END) > 0 AND COUNT(DISTINCT CASE WHEN open_year < 2008 THEN shop_id END) > 0
hard gold: SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008 

eval_err_num:16
extra pred: SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products GROUP BY product_type_code ORDER BY product_type_code;
extra gold: SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code 

hard pred: SELECT stuid FROM student ORDER BY age DESC LIMIT 1
hard gold: SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student) 

medium pred: SELECT founded FROM university WHERE enrollment = (SELECT MAX(enrollment) FROM university)
medium gold: SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1 

eval_err_num:17
medium pred: SELECT document_type_code, document_type_name, document_type_description FROM reference_document_types
medium gold: SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types 

hard pred: SELECT nominee FROM musical WHERE award = "Tony Award" AND nominee IN (SELECT nominee FROM musical WHERE award = "Drama Desk Award")
hard gold: SELECT Nominee FROM musical WHERE Award  =  "Tony Award" INTERSECT SELECT Nominee FROM musical WHERE Award  =  "Drama Desk Award" 

hard pred: SELECT artist_name, country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.rating IN (SELECT DISTINCT rating FROM song ORDER BY rating DESC LIMIT 3)
hard gold: SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3 

eval_err_num:18
extra pred: SELECT sport_name, COUNT(*) as num_students_on_scholarship FROM sports_info WHERE on_scholarship = 'Yes' GROUP BY sport_name ORDER BY num_students_on_scholarship DESC LIMIT 1
extra gold: SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1 

hard pred: SELECT DISTINCT hometown FROM people WHERE people_id NOT IN (SELECT gymnast_id FROM gymnast)
hard gold: SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID 

eval_err_num:19
medium pred: SELECT how_to_get_there, COUNT(DISTINCT tourist_attraction_id) AS number_of_attractions FROM tourist_attractions GROUP BY how_to_get_there
medium gold: SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There 

extra pred: SELECT title, film_id, description FROM film WHERE film_id = ( SELECT film_id FROM film_actor GROUP BY film_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:20
easy pred: SELECT count(DISTINCT sport_name) FROM sports_info
easy gold: SELECT count(DISTINCT sportname) FROM Sportsinfo 

hard pred: SELECT * FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_policies)
hard gold: SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id 

medium pred: SELECT model_name, ram_mib FROM chip_model WHERE ram_mib = ( SELECT MIN(ram_mib) FROM chip_model )
medium gold: SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1; 

eval_err_num:21
medium pred: SELECT count(*) FROM voting_record WHERE city_code = 'NYC' AND election_cycle = 'spring' AND class_senator_vote IS NOT NULL
medium gold: SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  "NYC" AND T2.Election_Cycle  =  "Spring" 

eval_err_num:22
extra pred: SELECT AVG(longitude) FROM station WHERE id NOT IN (SELECT station_id FROM status WHERE bikes_available > 10)
extra gold: SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10) 

eval_err_num:23
medium pred: SELECT affiliation, COUNT(*) AS num_universities FROM university WHERE enrollment > 20000 GROUP BY affiliation
medium gold: SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation 

extra pred: SELECT railway_id, builder FROM railway WHERE railway_id = ( SELECT railway_id FROM train GROUP BY railway_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:24
extra pred: SELECT S.name FROM student S JOIN takes_classes T ON S.id = T.id JOIN prerequisite P ON T.course_id = P.course_id JOIN course C ON P.prerequisite_id = C.course_id WHERE C.title = 'International Finance'
extra gold: SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance') 

eval_err_num:25
extra pred: SELECT e.name, e.salary FROM employee e JOIN certificate c ON e.employee_id = c.employee_id JOIN aircraft a ON c.airline_id = a.airline_id WHERE a.distance > 5000 GROUP BY e.name, e.salary HAVING count(c.airline_id) = (SELECT max(cert_count) FROM (SELECT count(c.airline_id) as cert_count FROM certificate c JOIN aircraft a ON c.airline_id = a.airline_id WHERE a.distance > 5000 GROUP BY c.employee_id) AS temp)
extra gold: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1 

eval_err_num:26
medium pred: SELECT DISTINCT forename FROM drivers WHERE driver_id IN (SELECT driver_id FROM driver_standings WHERE position = 1 AND wins > 0)
medium gold: SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 

eval_err_num:27
medium pred: SELECT COUNT(*) FROM reservations WHERE (adults + kids) = (SELECT max_occupancy FROM rooms WHERE room_id = reservations.room) AND (adults + kids) = max_occupancy
medium gold: SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids; 

medium pred: SELECT software_platform, count(*) FROM device GROUP BY software_platform ORDER BY count(*) DESC
medium gold: SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC 

eval_err_num:28
easy pred: SELECT DISTINCT college_name FROM tryout ORDER BY college_name ASC
easy gold: SELECT DISTINCT cName FROM tryout ORDER BY cName 

hard pred: SELECT DISTINCT customer_name FROM customers WHERE customer_id IN (SELECT customer_id FROM customer_orders WHERE order_status_code = "Pending") ORDER BY customer_id
hard gold: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  "Pending" ORDER BY T2.customer_id 

eval_err_num:29
hard pred: SELECT name FROM instructor WHERE salary > (SELECT MAX(salary) FROM instructor WHERE department_name = 'Biology')
hard gold: SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology') 

eval_err_num:30
medium pred: SELECT first_name || ' ' || last_name AS full_name, age FROM student WHERE sex = 'F'
medium gold: SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F' 

eval_err_num:31
extra pred: SELECT T1.department_name FROM department AS T1 JOIN professor AS T2 ON T1.department_code = T2.department_code WHERE T2.professor_high_degree = 'Ph.D.' GROUP BY T1.department_name ORDER BY COUNT(T2.employee_number) DESC LIMIT 1
extra gold: SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:32
extra pred: SELECT student_first_name FROM student WHERE student_last_name LIKE 'S%' AND student_class = 'ACCT-211'
extra gold: SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%' 

eval_err_num:33
medium pred: SELECT date, max_temperature_f AS average_temperature, mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3
medium gold: SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3 

eval_err_num:34
hard pred: SELECT DISTINCT city FROM city WHERE city NOT IN ( SELECT DISTINCT city FROM branch JOIN membership_register_branch ON branch.branch_id = membership_register_branch.branch_id GROUP BY branch.branch_id, city HAVING COUNT(membership_register_branch.member_id) > 100 )
hard gold: SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100 

eval_err_num:35
medium pred: SELECT COUNT(*) AS problem_count, product_id FROM problems GROUP BY product_id HAVING COUNT(*) > 0
medium gold: SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id 

eval_err_num:36
easy pred: SELECT grade FROM list WHERE class_room = 105
easy gold: SELECT DISTINCT grade FROM list WHERE classroom  =  105 

eval_err_num:37
medium pred: SELECT COUNT(*) FROM course WHERE department_code = 'CIS'
medium gold: SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  "Computer Info. Systems" 

medium pred: SELECT city, COUNT(name) FROM station GROUP BY city HAVING COUNT(name) >= 15
medium gold: SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15 

medium pred: SELECT customer_first_name, customer_last_name, customer_phone FROM customers WHERE customer_id IN (SELECT customer_id FROM customers_cards WHERE card_number = '4560596484842')
medium gold: SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  "4560596484842" 

medium pred: SELECT name FROM playlists WHERE id IN (SELECT playlist_id FROM playlist_tracks GROUP BY playlist_id HAVING COUNT(track_id) > 100)
medium gold: SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100; 

extra pred: SELECT DISTINCT owner FROM program WHERE program_id IN ( SELECT program_id FROM broadcast WHERE time_of_day = 'morning' ) AND program_id IN ( SELECT program_id FROM broadcast WHERE time_of_day = 'night' )
extra gold: SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  "Morning" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  "Night" 

extra pred: SELECT T1.name FROM tourist_attractions AS T1 JOIN visits AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id WHERE T2.tourist_id = 'Alison' AND T1.tourist_attraction_id NOT IN (SELECT T3.tourist_attraction_id FROM visits AS T3 WHERE T3.tourist_id = 'Rosalind')
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Alison" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Rosalind" 

eval_err_num:38
extra pred: SELECT professor_first_name FROM professor WHERE employee_number IN ( SELECT professor_employee_number FROM class WHERE course_code IN ('CIS-220', 'QM-261') GROUP BY professor_employee_number HAVING COUNT(*) = 2 )
extra gold: SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261' 

medium pred: SELECT DISTINCT department_id FROM employees WHERE manager_id IN (SELECT manager_id FROM employees GROUP BY manager_id HAVING COUNT(employee_id) >= 4)
medium gold: SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4 

extra pred: SELECT organisation_id, organisation_type, organisation_details FROM organisations WHERE organisation_id = (SELECT employer_organisation_id FROM research_staff GROUP BY employer_organisation_id ORDER BY count(*) DESC LIMIT 1)
extra gold: SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT channel_code FROM customer_contact_channels WHERE customer_id IN ( SELECT customer_id FROM customers WHERE customer_name = "Tillman Ernser" )
medium gold: SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Tillman Ernser" 

easy pred: SELECT DISTINCT investor FROM entrepreneur GROUP BY investor HAVING COUNT(DISTINCT entrepreneur_id) >= 2
easy gold: SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2 

hard pred: SELECT DISTINCT publisher FROM publication WHERE price > 10000000 AND price < 5000000
hard gold: SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000 

medium pred: SELECT start_station_name, end_station_name FROM trip WHERE id IN (SELECT id FROM trip ORDER BY id ASC LIMIT 3)
medium gold: SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3 

eval_err_num:39
extra pred: SELECT COUNT(*) AS problem_count, product_name FROM product JOIN problems ON product.product_id = problems.product_id GROUP BY product_name ORDER BY problem_count DESC LIMIT 1
extra gold: SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1 

eval_err_num:40
extra pred: SELECT COUNT(*) FROM rooms WHERE room_id NOT IN (SELECT room FROM reservations)
extra gold: SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations) 

hard pred: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester LIKE '%Spring%')
hard gold: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring') 

medium pred: SELECT time FROM climber WHERE mountain_id IN (SELECT mountain_id FROM mountain WHERE country = 'Uganda')
medium gold: SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  "Uganda" 

eval_err_num:41
medium pred: SELECT s.name, count(ts.train_id) FROM station s LEFT JOIN train_station ts ON s.station_id = ts.station_id GROUP BY s.name
medium gold: SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id 

eval_err_num:42
hard pred: SELECT T1.Country, COUNT(*) AS Number_of_Invoices FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id GROUP BY T1.Country ORDER BY Number_of_Invoices DESC LIMIT 5
hard gold: SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5; 

eval_err_num:43
medium pred: SELECT unit_of_measure, product_category_code FROM reference_product_categories AS RPC JOIN products AS P ON RPC.product_category_code = P.product_category_code WHERE P.product_name = 'chervil'
medium gold: SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  "chervil" 

medium pred: SELECT category FROM book_club WHERE year > 1989 GROUP BY category HAVING COUNT(DISTINCT book_title) >= 2
medium gold: SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2 

eval_err_num:44
hard pred: SELECT count(*) FROM routes AS R JOIN airports AS D ON R.destination_airport_id = D.airport_id JOIN airlines AS A ON R.airline_id = A.airline_id WHERE D.country = 'Italy' AND A.name = 'American Airlines'
hard gold: SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines' 

eval_err_num:45
hard pred: SELECT policy_type_code, count(*) as record_count FROM available_policies GROUP BY policy_type_code ORDER BY record_count DESC LIMIT 1
hard gold: SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:46
hard pred: SELECT MIN(membership_amount), MAX(membership_amount) FROM branch WHERE (open_year = '2011' OR city = 'London')
hard gold: SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London' 

eval_err_num:47
extra pred: SELECT c.email_address FROM customers c JOIN complaints cm ON c.customer_id = cm.customer_id WHERE cm.product_id = ( SELECT product_id FROM complaints GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1 

eval_err_num:48
hard pred: SELECT DISTINCT c1.country FROM competition c1 JOIN competition c2 ON c1.country = c2.country WHERE c1.competition_type = 'Friendly' AND c2.competition_type = 'Tournament'
hard gold: SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament' 

medium pred: SELECT problem_description FROM problems WHERE reported_by_staff_id IN (SELECT staff_id FROM staff WHERE staff_first_name = "Christop")
medium gold: SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop" 

hard pred: SELECT customer_name FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_orders)
hard gold: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id 

eval_err_num:49
medium pred: SELECT player_position, MIN(training_hours) FROM tryout GROUP BY player_position
medium gold: SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos 

eval_err_num:50
extra pred: SELECT organisation_type FROM organisation_types WHERE organisation_id = ( SELECT employer_organisation_id FROM research_staff GROUP BY employer_organisation_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1 

extra pred: SELECT district_name FROM district JOIN store_district ON district.district_id = store_district.district_id JOIN store ON store.store_id = store_district.store_id WHERE store.type = 'flagship' GROUP BY district_name ORDER BY COUNT(store.store_id) DESC LIMIT 1;
extra gold: SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT DISTINCT name, nationality FROM architect WHERE id IN (SELECT architect_id FROM mill)
medium gold: SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id 

eval_err_num:51
medium pred: SELECT first_name || ' ' || last_name AS full_name FROM employee WHERE city = 'Calgary'
medium gold: SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  "Calgary" 

eval_err_num:52
medium pred: SELECT accounts.name, SUM(savings.balance) as total_savings FROM accounts JOIN savings ON accounts.customer_id = savings.customer_id GROUP BY accounts.name
medium gold: SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name 

eval_err_num:53
extra pred: SELECT song_name FROM song WHERE duration = '4 minutes' OR languages LIKE '%English%'
extra gold: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE "4:%" UNION SELECT song_name FROM song WHERE languages  =  "english" 

eval_err_num:54
medium pred: SELECT address FROM store WHERE store_id = 1
medium gold: SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1 

eval_err_num:55
easy pred: SELECT SUM(games_played) FROM sports_info
easy gold: SELECT sum(gamesplayed) FROM Sportsinfo 

eval_err_num:56
medium pred: SELECT owner, SUM(rating_in_percent) AS total_rating FROM channel GROUP BY owner
medium gold: SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER 

hard pred: SELECT count(DISTINCT product_id) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = "hot"
hard gold: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  "hot" 

eval_err_num:57
medium pred: SELECT star_rating_description FROM ref_hotel_star_ratings WHERE hotel_id IN ( SELECT hotel_id FROM hotels WHERE price_range > 10000 )
medium gold: SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000 

easy pred: SELECT position FROM player GROUP BY position HAVING AVG(points) > 20
easy gold: SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20 

eval_err_num:58
hard pred: SELECT document_id FROM documents_with_expenses WHERE document_name LIKE '%s%'
hard gold: SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%' 

hard pred: SELECT yearid FROM hall_of_fame ORDER BY votes ASC LIMIT 1
hard gold: SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1; 

eval_err_num:59
hard pred: SELECT customer_id, COUNT(account_id) AS num_accounts FROM accounts GROUP BY customer_id ORDER BY num_accounts DESC LIMIT 1
hard gold: SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:60
medium pred: SELECT DISTINCT age FROM student WHERE student_id IN (SELECT student_id FROM voting_record WHERE election_cycle = "fall" AND secretary_vote IS NOT NULL)
medium gold: SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  "Fall" 

eval_err_num:61
extra pred: SELECT p1.name, p1.age FROM person p1 JOIN person_friend pf1 ON p1.name = pf1.friend JOIN person_friend pf2 ON p1.name = pf2.friend JOIN person p2 ON p2.name = pf1.name WHERE p2.name = 'Dan' AND p2.name = 'Alice'
extra gold: SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice' 

eval_err_num:62
extra pred: SELECT gs.location, gs.representative_name FROM gas_station gs JOIN station_company sc ON gs.station_id = sc.station_id JOIN company c ON sc.company_id = c.company_id ORDER BY c.assets_billion DESC LIMIT 3
extra gold: SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3 

medium pred: SELECT E.company, E.investor, P.name FROM entrepreneur AS E JOIN people AS P ON E.people_id = P.people_id
medium gold: SELECT Company ,  Investor FROM entrepreneur 

eval_err_num:63
easy pred: SELECT DISTINCT detention_type_code FROM reference_detention_type
easy gold: SELECT DISTINCT detention_type_code FROM Detention 

eval_err_num:64
extra pred: SELECT amenity_name FROM dorm_amenity JOIN has_amenity ON dorm_amenity.amenity_id = has_amenity.amenity_id JOIN lives_in ON has_amenity.dorm_id = lives_in.dorm_id JOIN student ON lives_in.student_id = student.student_id WHERE student.last_name = 'Smith'
extra gold: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith' 

eval_err_num:65
extra pred: SELECT detention_type_code, detention_type_description FROM reference_detention_type ORDER BY (SELECT COUNT(*) FROM detention WHERE detention.detention_type_code = reference_detention_type.detention_type_code) ASC LIMIT 1
extra gold: SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1 

medium pred: SELECT document_id FROM documents_with_expenses WHERE budget_type_code = 'Government'
medium gold: SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  "Government" 

eval_err_num:66
hard pred: SELECT name, gender FROM candidate c JOIN people p ON c.people_id = p.people_id WHERE support_rate = (SELECT MAX(support_rate) FROM candidate)
hard gold: SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1 

eval_err_num:67
hard pred: SELECT e.name, e.age, j.theme FROM editor e JOIN journal_committee jc ON e.editor_id = jc.editor_id JOIN journal j ON jc.journal_id = j.journal_id ORDER BY j.theme ASC
hard gold: SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC 

eval_err_num:68
hard pred: SELECT total_points FROM gymnast WHERE age = (SELECT MIN(age) FROM gymnast)
hard gold: SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1 

eval_err_num:69
medium pred: SELECT title, credits, department_name FROM course WHERE course_id IN (SELECT course_id FROM prerequisite GROUP BY course_id HAVING COUNT(prerequisite_id) > 1)
medium gold: SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1 

eval_err_num:70
extra pred: SELECT course_id FROM section WHERE (semester = 'Fall' AND year = 2009) AND course_id IN (SELECT course_id FROM section WHERE semester = 'Spring' AND year = 2010)
extra gold: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010 

eval_err_num:71
medium pred: SELECT student_id, middle_name FROM students WHERE student_id IN ( SELECT student_id FROM (SELECT student_id, COUNT(*) as num_enrollments FROM student_course_enrolment GROUP BY student_id) as enrolments WHERE num_enrollments <= 2 )
medium gold: SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2 

eval_err_num:72
extra pred: SELECT first_name, last_name FROM student WHERE stuid NOT IN (SELECT stuid FROM has_allergy WHERE allergy_type = 'Food')
extra gold: SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  "food") 

medium pred: SELECT location FROM cinema GROUP BY location HAVING COUNT(*) >= 2 AND MIN(capacity) > 300
medium gold: SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2 

eval_err_num:73
easy pred: SELECT department_phone FROM department WHERE room = '268'
easy gold: SELECT DPhone FROM DEPARTMENT WHERE Room  =  268 

eval_err_num:74
medium pred: SELECT class_room, grade FROM list GROUP BY class_room, grade
medium gold: SELECT DISTINCT classroom ,  grade FROM list 

eval_err_num:75
easy pred: SELECT name FROM wrestler WHERE CAST(days_held AS INTEGER) < 100
easy gold: SELECT Name FROM wrestler WHERE Days_held  <  100 

eval_err_num:76
extra pred: SELECT fault_log_entry_id, fault_description, fault_log_entry_datetime FROM fault_log WHERE fault_log_entry_id IN ( SELECT fault_log_entry_id FROM fault_log_parts GROUP BY fault_log_entry_id HAVING COUNT(*) = ( SELECT MAX(part_count) FROM ( SELECT fault_log_entry_id, COUNT(*) AS part_count FROM fault_log_parts GROUP BY fault_log_entry_id ) AS T ) )
extra gold: SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:77
easy pred: SELECT product_category_description FROM reference_product_categories JOIN products ON reference_product_categories.product_category_code = products.product_category_code WHERE product_name = "flax"
easy gold: SELECT product_category_code FROM products WHERE product_name  =  "flax" 

eval_err_num:78
extra pred: SELECT name, opening_hours FROM tourist_attractions WHERE how_to_get_there IN ('bus', 'walk')
extra gold: SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  "bus" OR How_to_Get_There  =  "walk" 

eval_err_num:79
extra pred: SELECT m.name, m.trade_name FROM medicine AS m LEFT JOIN medicine_enzyme_interaction AS mei ON m.id = mei.medicine_id LEFT JOIN enzyme AS e ON mei.enzyme_id = e.id WHERE e.product != 'Heme' OR e.product IS NULL
extra gold: SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX' 

eval_err_num:80
hard pred: SELECT building, COUNT(*) as faculty_count FROM faculty GROUP BY building ORDER BY faculty_count DESC LIMIT 1
hard gold: SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT COUNT(*) FROM financial_transactions WHERE account_id = 337
medium gold: SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  "337" 

eval_err_num:81
hard pred: SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections_images)
hard gold: SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id 

eval_err_num:82
medium pred: SELECT last_name FROM list WHERE grade = 3 AND last_name NOT IN (SELECT last_name FROM teachers WHERE first_name = "COVIN" AND last_name = "JEROME")
medium gold: SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != "COVIN" AND T2.lastname != "JEROME" 

eval_err_num:83
medium pred: SELECT department_code, count(*) as student_count FROM student GROUP BY department_code
medium gold: SELECT count(*) ,  dept_code FROM student GROUP BY dept_code 

eval_err_num:84
easy pred: SELECT last_name FROM authors ORDER BY last_name ASC
easy gold: SELECT lname FROM authors ORDER BY lname 

eval_err_num:85
medium pred: SELECT AVG(fastest_lap_speed) FROM results JOIN races ON results.race_id = races.race_id WHERE races.name = 'Monaco Grand Prix' AND races.year = 2008
medium gold: SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = "Monaco Grand Prix" 

eval_err_num:86
medium pred: SELECT first_name, last_name FROM faculty
medium gold: SELECT fname ,  lname FROM Faculty WHERE Rank  =  "Instructor" 

eval_err_num:87
extra pred: SELECT last_name FROM authors WHERE author_id IN ( SELECT author_id FROM authorship_count GROUP BY author_id HAVING COUNT(paper_id) = ( SELECT MAX(paper_count) FROM ( SELECT author_id, COUNT(paper_id) as paper_count FROM authorship_count GROUP BY author_id ) AS subquery ) )
extra gold: SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT duration FROM actor ORDER BY age ASC LIMIT 1
medium gold: SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1 

eval_err_num:88
hard pred: SELECT c.building, c.room_number, s.semester, s.year FROM course AS c JOIN section AS s ON c.course_id = s.course_id WHERE c.department_name = 'Psychology' ORDER BY c.title ASC
hard gold: SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title 

eval_err_num:89
medium pred: SELECT aircraft FROM match GROUP BY aircraft HAVING COUNT(*) >= 2
medium gold: SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2 

hard pred: SELECT last_name FROM staff WHERE staff_id = (SELECT staff_id FROM complaints WHERE date_complaint_raised = (SELECT MIN(date_complaint_raised) FROM complaints))
hard gold: SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1 

eval_err_num:90
extra pred: SELECT apartment_type_code, COUNT(apartment_type_code) AS count FROM apartments WHERE bathroom_count > 1 GROUP BY apartment_type_code ORDER BY count DESC LIMIT 1
extra gold: SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT count(*) FROM vocals WHERE type = 'lead'
medium gold: SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  "lead" 

eval_err_num:91
medium pred: SELECT apartment_number FROM apartments WHERE bedroom_count = (SELECT MAX(bedroom_count) FROM apartments)
medium gold: SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1 

eval_err_num:92
easy pred: SELECT employee_id FROM documents_to_be_destroyed WHERE destroyed_by_employee_id IS NOT NULL
easy gold: SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed 

extra pred: SELECT title, credits FROM course WHERE course_id = ( SELECT course_id FROM section WHERE building = ( SELECT building FROM classroom WHERE capacity = ( SELECT MAX(capacity) FROM classroom ) ) )
extra gold: SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom) 

eval_err_num:93
hard pred: SELECT competition_type, COUNT(*) as frequency FROM competition GROUP BY competition_type ORDER BY frequency DESC LIMIT 1
hard gold: SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:94
hard pred: SELECT name FROM tourist_attractions WHERE how_to_get_there = 'by bus' OR address = '254 Ottilie Junction'
hard gold: SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  "254 Ottilie Junction" OR T2.How_to_Get_There  =  "bus" 

eval_err_num:95
hard pred: SELECT document_type_code FROM reference_document_types GROUP BY document_type_code ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:96
medium pred: SELECT day_number, calendar_date FROM reference_calendar JOIN all_documents ON reference_calendar.calendar_date = all_documents.date_stored
medium gold: SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date 

eval_err_num:97
hard pred: SELECT p.title FROM papers AS p JOIN authorship_count AS ac ON p.paper_id = ac.paper_id JOIN institution AS i ON ac.institution_id = i.institution_id WHERE i.name = "Indiana University"
hard gold: SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  "Indiana University" 

eval_err_num:98
hard pred: SELECT SUM(total_points) FROM gymnast WHERE age = (SELECT MIN(age) FROM gymnast)
hard gold: SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1 

eval_err_num:99
medium pred: SELECT unit_of_measure FROM reference_product_categories JOIN products ON reference_product_categories.product_category_code = products.product_category_code WHERE product_name = 'cumin'
medium gold: SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  "cumin" 

eval_err_num:100
extra pred: SELECT department_name FROM department WHERE department_code IN ( SELECT department_code FROM professor WHERE professor_high_degree = 'Ph.D.' GROUP BY department_code HAVING count(*) = ( SELECT max(phd_count) FROM ( SELECT department_code, count(*) as phd_count FROM professor WHERE professor_high_degree = 'Ph.D.' GROUP BY department_code ) AS temp ) )
extra gold: SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:101
hard pred: SELECT reviewer_id FROM rating WHERE rating_stars != 4
hard gold: SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4 

medium pred: SELECT SUM(room_count) FROM apartments WHERE building_id IN (SELECT building_id FROM apartment_buildings WHERE building_short_name = "Columbus Square")
medium gold: SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  "Columbus Square" 

extra pred: SELECT document_id FROM documents WHERE document_status_code = "done" AND document_type_code = "Paper" AND shipping_agent_code != "USPS"
extra gold: SELECT document_id FROM Documents WHERE document_status_code  =  "done" AND document_type_code = "Paper" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS"; 

medium pred: SELECT company_name FROM culture_company WHERE book_club_id IN ( SELECT book_club_id FROM book_club WHERE author_or_editor = 'Alyson' )
medium gold: SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson' 

eval_err_num:102
extra pred: SELECT incident_type_code, incident_type_description FROM reference_incident_type WHERE incident_type_code = ( SELECT incident_type_code FROM behavior_incident GROUP BY incident_type_code ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:103
medium pred: SELECT AVG(training_hours) FROM player WHERE player_id IN (SELECT player_id FROM tryout WHERE decision = 'rejected')
medium gold: SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no' 

eval_err_num:104
extra pred: SELECT first_name FROM faculty JOIN faculty_participates_in ON faculty.faculty_id = faculty_participates_in.faculty_id JOIN activity ON activity.activity_id = faculty_participates_in.activity_id WHERE activity.activity_name IN ('Canoeing', 'Kayaking')
extra gold: SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking' 

medium pred: SELECT product_name, product_category_code FROM products WHERE product_price = (SELECT MAX(product_price) FROM products)
medium gold: SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1 

hard pred: SELECT investor, COUNT(entrepreneur_id) FROM entrepreneur GROUP BY investor ORDER BY COUNT(entrepreneur_id) DESC LIMIT 1
hard gold: SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:105
easy pred: SELECT * FROM employees WHERE department_id IS NULL
easy gold: SELECT * FROM employees WHERE department_id  =  "null" 

eval_err_num:106
hard pred: SELECT title FROM movie WHERE movie_id NOT IN (SELECT movie_id FROM rating WHERE reviewer_id = (SELECT reviewer_id FROM reviewer WHERE name = 'Chris Jackson'))
hard gold: SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson' 

eval_err_num:107
extra pred: SELECT student_first_name, student_gpa FROM student WHERE student_gpa < (SELECT AVG(student_gpa) FROM student)
extra gold: SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student) 

medium pred: SELECT DISTINCT name FROM wine WHERE grape IN (SELECT grape FROM grapes WHERE color = "red")
medium gold: SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  "Red" 

hard pred: SELECT type FROM ship WHERE tonnage > 6000 AND type IN (SELECT type FROM ship WHERE tonnage < 4000)
hard gold: SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000 

hard pred: SELECT customer_name FROM customers WHERE payment_method_code = "Credit Card" AND customer_id IN ( SELECT customer_id FROM customer_orders GROUP BY customer_id HAVING COUNT(*) > 2 )
hard gold: SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2 

medium pred: SELECT publisher, COUNT(book_title) FROM book_club GROUP BY publisher
medium gold: SELECT publisher ,  count(*) FROM book_club GROUP BY publisher 

hard pred: SELECT DISTINCT personal_name FROM course_authors_and_tutors WHERE personal_name IN (SELECT personal_name FROM students)
hard gold: SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students 

easy pred: SELECT enrollment, school FROM school WHERE denomination != "Catholic"
easy gold: SELECT Enrollment FROM school WHERE Denomination != "Catholic" 

eval_err_num:108
extra pred: SELECT school_name, ihsaa_football_class, mascot FROM school WHERE budgeted > 6000 OR year < 2003 ORDER BY total_budget_percent_invested + total_budget_percent_budgeted DESC ;
extra gold: SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted 

eval_err_num:109
medium pred: SELECT name FROM department WHERE departmentid IN (SELECT department FROM affiliated_with WHERE primary_affiliation = true)
medium gold: SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1 

medium pred: SELECT SUM(degrees) FROM degrees JOIN campuses ON degrees.campus = campuses.id WHERE campuses.campus = "San Francisco State University" AND degrees.year = 2004
medium gold: SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  "San Francisco State University" 

extra pred: SELECT first_name, last_name FROM employees WHERE reports_to = (SELECT id FROM employees WHERE last_name = "Edwards" AND first_name = "Nancy")
extra gold: SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = "Nancy" AND T1.last_name = "Edwards"; 

eval_err_num:110
medium pred: SELECT c.company, count(gs.station_id) as number_of_gas_stations FROM company as c INNER JOIN station_company as sc ON c.company_id = sc.company_id INNER JOIN gas_station as gs ON gs.station_id = sc.station_id GROUP BY c.company
medium gold: SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id 

eval_err_num:111
medium pred: SELECT first_name, last_name FROM list
medium gold: SELECT DISTINCT firstname ,  lastname FROM list 

hard pred: SELECT start_date FROM customer_policies JOIN claims ON customer_policies.policy_id = claims.policy_id WHERE amount_claimed <= (SELECT AVG(amount_claimed) FROM claims)
hard gold: SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims ) 

eval_err_num:112
easy pred: SELECT first_name FROM student ORDER BY age DESC
easy gold: SELECT Fname FROM STUDENT ORDER BY Age DESC 

easy pred: SELECT * FROM activity
easy gold: SELECT activity_name FROM Activity 

eval_err_num:113
medium pred: SELECT customer_name, credit_score FROM customer WHERE customer_id IN (SELECT customer_id FROM loan)
medium gold: SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id 

eval_err_num:114
easy pred: SELECT DISTINCT allergy_type FROM allergy_type
easy gold: SELECT DISTINCT allergytype FROM Allergy_type 

eval_err_num:115
medium pred: SELECT student_name FROM tryout ORDER BY student_name ASC
medium gold: SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName 

eval_err_num:116
hard pred: SELECT faculty_id FROM faculty WHERE faculty_id NOT IN (SELECT advisor FROM student)
hard gold: SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student 

eval_err_num:117
extra pred: SELECT investor_id, AVG(share_count) AS average_share_count FROM transactions GROUP BY investor_id ORDER BY average_share_count;
extra gold: SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count) 

hard pred: SELECT COUNT(*) FROM customers WHERE customer_type_code = ( SELECT customer_type_code FROM customers GROUP BY customer_type_code ORDER BY COUNT(*) DESC LIMIT 1 )
hard gold: SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:118
extra pred: SELECT organisation_id, COUNT(*) AS num_outcomes FROM project_outcomes GROUP BY organisation_id ORDER BY num_outcomes DESC LIMIT 1
extra gold: SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT issue_date FROM volume WHERE artist_id IN (SELECT artist_id FROM artist WHERE age <= 23)
medium gold: SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23 

hard pred: SELECT customer_name FROM clients WHERE client_id NOT IN (SELECT DISTINCT customer_id FROM bookings)
hard gold: SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID 

eval_err_num:119
medium pred: SELECT invoice_number, COUNT(transaction_id) AS transaction_count FROM financial_transactions GROUP BY invoice_number;
medium gold: SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number 

eval_err_num:120
medium pred: SELECT appelation, AVG(price) AS average_price, AVG(score) AS average_score FROM wine GROUP BY appelation
medium gold: SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation 

eval_err_num:121
hard pred: SELECT class_room, COUNT(*) AS student_count FROM list GROUP BY class_room ORDER BY student_count DESC LIMIT 1
hard gold: SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1 

eval_err_num:122
medium pred: SELECT room_name FROM rooms WHERE room_id IN (SELECT room FROM reservations GROUP BY room HAVING COUNT(*) > 60)
medium gold: SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60 

eval_err_num:123
medium pred: SELECT address FROM staff WHERE first_name = 'Elsa'
medium gold: SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa' 

eval_err_num:124
hard pred: SELECT staff_id, staff_name FROM staff_department_assignments WHERE date_assigned_to IS NULL ORDER BY date_assigned_from ASC LIMIT 1
hard gold: SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1 

eval_err_num:125
medium pred: SELECT department_name, COUNT(*) FROM student GROUP BY department_name
medium gold: SELECT count(*) ,  dept_name FROM student GROUP BY dept_name 

extra pred: SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%' OR last_name LIKE '%T%')
extra gold: SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' ) 

extra pred: SELECT start_station_name, start_station_id FROM trip WHERE start_date >= 'August' GROUP BY start_station_name, start_station_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE "8/%" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:126
medium pred: SELECT A.name, C.balance AS checking_balance, S.balance AS savings_balance FROM accounts A LEFT JOIN checking C ON A.customer_id = C.customer_id LEFT JOIN savings S ON A.customer_id = S.customer_id
medium gold: SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid 

eval_err_num:127
hard pred: SELECT college_name FROM college WHERE enrollment > (SELECT MAX(enrollment) FROM college WHERE state = 'FL')
hard gold: SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL') 

easy pred: SELECT role_code FROM roles GROUP BY role_code HAVING COUNT(*) >= 3
easy gold: SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3 

eval_err_num:128
medium pred: SELECT employee_last_name, employee_hire_date FROM employee JOIN professor ON professor.employee_number = employee.employee_number WHERE professor.professor_office = 'DRE 102'
medium gold: SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102' 

eval_err_num:129
extra pred: SELECT COUNT(*) AS number_of_problems, product_name FROM problems JOIN product ON problems.product_id = product.product_id GROUP BY product_name ORDER BY number_of_problems DESC LIMIT 1;
extra gold: SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1 

eval_err_num:130
extra pred: SELECT DISTINCT T1.aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.aircraft_id = T2.aircraft_id JOIN airport AS T3 ON T2.airport_id = T3.airport_id WHERE T3.airport_name IN ('London Heathrow', 'Gatwick') GROUP BY T1.aircraft HAVING COUNT(DISTINCT T3.airport_id) = 2
extra gold: SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Heathrow" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Gatwick" 

eval_err_num:131
extra pred: SELECT DISTINCT p.project_details FROM projects p JOIN project_outcomes po ON p.project_id = po.project_id JOIN research_outcomes ro ON po.outcome_code = ro.outcome_code WHERE ro.outcome_description LIKE '%Published%'
extra gold: SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%' 

eval_err_num:132
medium pred: SELECT customer_name, credit_score FROM customer WHERE customer_id IN (SELECT DISTINCT customer_id FROM loan)
medium gold: SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id 

eval_err_num:133
hard pred: SELECT rank, COUNT(*) AS count FROM faculty GROUP BY rank ORDER BY count ASC LIMIT 1
hard gold: SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1 

extra pred: SELECT id, name, gender FROM architect WHERE id IN ( SELECT architect_id FROM bridge GROUP BY architect_id HAVING COUNT(*) >= 2 ) OR id IN ( SELECT architect_id FROM mill GROUP BY architect_id HAVING COUNT(*) >= 1 )
extra gold: SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1 

hard pred: SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f < 70
hard gold: SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70 

medium pred: SELECT jan FROM temperature WHERE city_id = (SELECT city_id FROM city WHERE city = 'Shanghai')
medium gold: SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = "Shanghai" 

eval_err_num:134
hard pred: SELECT c.club_name FROM club c WHERE EXISTS ( SELECT * FROM member_of_club mc JOIN student s ON s.student_id = mc.student_id WHERE s.city_code = "BAL" AND mc.club_id = c.club_id )
hard gold: SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  "BAL" 

medium pred: SELECT name, tourist_attraction_id FROM tourist_attractions WHERE tourist_attraction_id IN (SELECT tourist_attraction_id FROM visits GROUP BY tourist_attraction_id HAVING COUNT(*) = 1)
medium gold: SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1 

extra pred: SELECT location, COUNT(station_id) FROM gas_station GROUP BY location ORDER BY COUNT(station_id) ASC
extra gold: SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*) 

eval_err_num:135
hard pred: SELECT transportation_method FROM ( SELECT transportation_method, COUNT(*) AS num_people FROM visits GROUP BY transportation_method ORDER BY num_people DESC LIMIT 1 ) AS T;
hard gold: SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:136
hard pred: SELECT AVG(age) FROM student JOIN member_of_club ON student.student_id = member_of_club.student_id JOIN club ON member_of_club.club_id = club.club_id WHERE club.club_name = "Hopkins Student Enterprises"
hard gold: SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  "Hopkins Student Enterprises" 

eval_err_num:137
hard pred: SELECT p.location, h.name FROM party p JOIN party_host ph ON p.party_id = ph.party_id JOIN host h ON ph.host_id = h.host_id ORDER BY h.age ASC
hard gold: SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age 

eval_err_num:138
easy pred: SELECT count(*) FROM reference_locations
easy gold: SELECT count(*) FROM Ref_locations 

medium pred: SELECT policy_type_code FROM policies WHERE customer_id = (SELECT customer_id FROM customers WHERE customer_details = 'Dayana Robel')
medium gold: SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  "Dayana Robel" 

eval_err_num:139
extra pred: SELECT allergy, allergy_type FROM has_allergy AS ha JOIN allergy_type AS at ON ha.allergy = at.allergy_name JOIN student AS s ON ha.stuid = s.stuid WHERE s.first_name = "Lisa" AND s.sex = "girl" ORDER BY allergy ASC
extra gold: SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  "Lisa" ORDER BY T1.Allergy 

eval_err_num:140
medium pred: SELECT first_name FROM student WHERE first_name LIKE '%a%'
medium gold: SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%' 

medium pred: SELECT * FROM locations WHERE location_name LIKE '%film%'
medium gold: SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE "%film%" 

medium pred: SELECT account_id, account_name, other_account_details FROM accounts WHERE customer_id IN (SELECT customer_id FROM customers WHERE customer_first_name = 'Meaghan')
medium gold: SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan' 

eval_err_num:141
medium pred: SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM customers c JOIN customers_cards cc ON c.customer_id = cc.customer_id GROUP BY c.customer_id HAVING COUNT(cc.card_id) >= 2
medium gold: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 

extra pred: SELECT staff_first_name, staff_last_name FROM staff WHERE staff_id IN ( SELECT reported_by_staff_id FROM problems WHERE product_id = ( SELECT product_id FROM product WHERE product_name = 'rem' ) ) AND staff_id NOT IN ( SELECT reported_by_staff_id FROM problems WHERE product_id = ( SELECT product_id FROM product WHERE product_name = 'aut' ) )
extra gold: SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "rem" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut" 

hard pred: SELECT artist_name FROM song WHERE country = 'UK' AND languages = 'English'
hard gold: SELECT artist_name FROM artist WHERE country  =  "UK" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "english" 

eval_err_num:142
medium pred: SELECT first_name, employee_id FROM employee WHERE employee_id IN ( SELECT support_representative_id FROM customer GROUP BY support_representative_id HAVING COUNT(DISTINCT customer_id) >= 10 )
medium gold: SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10 

eval_err_num:143
medium pred: SELECT director, count(*) as num_reviews FROM movie JOIN rating ON movie.movie_id = rating.movie_id JOIN reviewer ON rating.reviewer_id = reviewer.reviewer_id GROUP BY director
medium gold: SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director 

eval_err_num:144
easy pred: SELECT school_code FROM department WHERE department_name = "Accounting"
easy gold: SELECT school_code FROM department WHERE dept_name  =  "Accounting" 

eval_err_num:145
extra pred: SELECT c.first_name, c.last_name, SUM(il.unit_price * il.quantity) as total_gross_sales FROM customers as c JOIN invoices as i ON c.id = i.customer_id JOIN invoice_lines as il ON i.id = il.invoice_id GROUP BY c.id ORDER BY total_gross_sales DESC LIMIT 10
extra gold: SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10; 

eval_err_num:146
medium pred: SELECT friend FROM person_friend WHERE name = 'Alice' AND friend IN ( SELECT name FROM person WHERE gender = 'male' AND job = 'doctor' )
medium gold: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor' 

eval_err_num:147
hard pred: SELECT T1.name FROM airports AS T1 JOIN ( SELECT country, COUNT(DISTINCT airline_id) AS home_airlines FROM airports GROUP BY country ORDER BY home_airlines DESC LIMIT 1 ) AS T2 ON T1.country = T2.country
hard gold: SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1 

eval_err_num:148
medium pred: SELECT bed_type, COUNT(*) FROM rooms GROUP BY bed_type
medium gold: SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType; 

eval_err_num:149
medium pred: SELECT first_name, last_name FROM student JOIN voting_record ON student.student_id = voting_record.student_id WHERE age = 18 AND vice_president_vote IS NOT NULL
medium gold: SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18 

eval_err_num:150
extra pred: SELECT song_name FROM files WHERE formats = 'mp3' AND resolution < 1000
extra gold: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  "mp3" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000 

medium pred: SELECT investor_id FROM transactions GROUP BY investor_id HAVING COUNT(*) >= 2
medium gold: SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2 

eval_err_num:151
medium pred: SELECT customer_name FROM customer ORDER BY credit_score ASC LIMIT 1
medium gold: SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1 

eval_err_num:152
hard pred: SELECT name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM assigned_to WHERE project = (SELECT code FROM projects ORDER BY hours DESC LIMIT 1))
hard gold: SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects) 

eval_err_num:153
medium pred: SELECT name FROM instructor WHERE department_name = 'Comp. Sci.' AND salary > 80000
medium gold: SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000 

eval_err_num:154
hard pred: SELECT customer_name FROM customer WHERE account_type = 'saving' AND customer_id IN (SELECT customer_id FROM customer WHERE account_type = 'checking')
hard gold: SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking' 

eval_err_num:155
easy pred: SELECT department_address FROM department WHERE department_name = "history"
easy gold: SELECT dept_address FROM department WHERE dept_name  =  'History' 

eval_err_num:156
hard pred: SELECT institution.name FROM authors JOIN institution ON authors.institution_id = institution.institution_id WHERE authors.first_name = "Katsuhiro" AND authors.last_name = "Ueno"
hard gold: SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  "Katsuhiro" AND t1.lname  =  "Ueno" 

eval_err_num:157
medium pred: SELECT location, COUNT(*) AS num_performances FROM performance GROUP BY location
medium gold: SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION 

eval_err_num:158
hard pred: SELECT name, salary FROM instructor WHERE id IN (SELECT instructor_id FROM advisor WHERE student_id IN (SELECT id FROM student WHERE department_name = 'History'))
hard gold: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History' 

eval_err_num:159
medium pred: SELECT DISTINCT driver_id, nationality FROM lap_times WHERE milliseconds > 100000
medium gold: SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000 

eval_err_num:160
hard pred: SELECT id FROM player WHERE height >= 180 AND overall_rating > 85
hard gold: SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85 

eval_err_num:161
extra pred: SELECT count(*) FROM student WHERE age > 18 AND stuid NOT IN (SELECT stuid FROM has_allergy WHERE allergy_type IN ('food type', 'animal type'))
extra gold: SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  "food" OR T2.allergytype  =  "animal") 

medium pred: SELECT date_order_placed FROM orders WHERE customer_id = (SELECT customer_id FROM customers WHERE customer_name = 'Jeramie')
medium gold: SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = "Jeramie" 

eval_err_num:162
medium pred: SELECT AVG(latitude), AVG(longitude) FROM station WHERE city = 'San Jose'
medium gold: SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  "San Jose" 

eval_err_num:163
extra pred: SELECT room_name, rate, check_in, check_out FROM reservations WHERE rate = (SELECT MAX(rate) FROM reservations)
extra gold: SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1; 

eval_err_num:164
extra pred: SELECT title FROM movie WHERE year > 2000 OR movie_id IN (SELECT movie_id FROM rating WHERE reviewer_id = (SELECT reviewer_id FROM reviewer WHERE name = 'Brittany Harris'))
extra gold: SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000 

eval_err_num:165
medium pred: SELECT cmi_cross_reference_id, master_customer_id, COUNT(*) AS n FROM business_rates GROUP BY cmi_cross_reference_id, master_customer_id
medium gold: SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id 

eval_err_num:166
easy pred: SELECT COUNT(*) FROM (SELECT city, COUNT(*) as num_airports FROM airports GROUP BY city HAVING COUNT(*) > 3) AS T1
easy gold: SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3) 

eval_err_num:167
hard pred: SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM certificate WHERE airline_id = (SELECT airline_id FROM aircraft WHERE name = 'Boeing 737-800'))
hard gold: SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Boeing 737-800" 

eval_err_num:168
medium pred: SELECT student_id FROM student WHERE advisor IN (SELECT faculty_id FROM faculty WHERE rank = 'professor')
medium gold: SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  "Professor" 

eval_err_num:169
extra pred: SELECT m.name, m.trade_name FROM medicine AS m LEFT JOIN medicine_enzyme_interaction AS mei ON m.id = mei.medicine_id LEFT JOIN enzyme AS e ON mei.enzyme_id = e.id WHERE e.product != 'Heme' OR e.id IS NULL;
extra gold: SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX' 

eval_err_num:170
medium pred: SELECT booking_start_date, booking_end_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apartment_id = apartments.apartment_id WHERE apartment_type_code = "Duplex"
medium gold: SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  "Duplex" 

eval_err_num:171
hard pred: SELECT C.club_name FROM club AS C JOIN member_of_club AS M ON C.club_id = M.club_id JOIN student AS S ON M.student_id = S.student_id WHERE S.first_name = "Davis" AND S.last_name = "Steven"
hard gold: SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  "Davis" AND t3.lname  =  "Steven" 

eval_err_num:172
medium pred: SELECT name FROM technician WHERE age IN (36, 37)
medium gold: SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37 

eval_err_num:173
medium pred: SELECT major, COUNT(*) AS number_of_students FROM student GROUP BY major HAVING COUNT(*) BETWEEN 2 AND 30
medium gold: SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30; 

eval_err_num:174
medium pred: SELECT department_name FROM department ORDER BY budget ASC LIMIT 1
medium gold: SELECT dept_name FROM department ORDER BY budget LIMIT 1 

eval_err_num:175
medium pred: SELECT song FROM music_festival WHERE result = "nominated"
medium gold: SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  "Nominated" 

extra pred: SELECT claim_id, count(*) FROM settlements WHERE date_claim_settled = (SELECT max(date_claim_settled) FROM settlements) GROUP BY claim_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1 

extra pred: SELECT individuals.individual_last_name FROM individuals JOIN organization_contact_individuals ON individuals.individual_id = organization_contact_individuals.individual_id JOIN organizations ON organization_contact_individuals.organization_id = organizations.organization_id WHERE organizations.uk_vat_number = (SELECT MAX(uk_vat_number) FROM organizations) ORDER BY organization_contact_individuals.date_contact_from ASC LIMIT 1
extra gold: SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1 

eval_err_num:176
medium pred: SELECT DISTINCT employee_first_name, course_code FROM employee JOIN professor ON employee.employee_number = professor.employee_number JOIN class ON professor.employee_number = class.professor_employee_number JOIN course ON class.course_code = course.course_code;
medium gold: SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num 

medium pred: SELECT problem_id FROM problems WHERE product_id = (SELECT product_id FROM product WHERE product_name = "voluptatem") AND date_problem_reported > '1995-12-31'
medium gold: SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = "voluptatem" AND T1.date_problem_reported > "1995" 

medium pred: SELECT member_name FROM member WHERE party_id != (SELECT party_id FROM party WHERE party_name = "Progress Party")
medium gold: SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != "Progress Party" 

eval_err_num:177
medium pred: SELECT first_name, last_name FROM student JOIN voting_record ON student.student_id = voting_record.student_id WHERE sex = 'female' AND president_vote IS NOT NULL
medium gold: SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  "F" 

eval_err_num:178
medium pred: SELECT name FROM swimmer WHERE result = "win"
medium gold: SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' 

eval_err_num:179
hard pred: SELECT COUNT(*) FROM lives_in JOIN dorm ON lives_in.dorm_id = dorm.dorm_id WHERE dorm.gender = 'M'
hard gold: SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M' 

eval_err_num:180
extra pred: SELECT driver_id, surname FROM drivers WHERE driver_id = ( SELECT driver_id FROM driver_standings GROUP BY driver_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1 

eval_err_num:181
medium pred: SELECT CONCAT(s.first_name, ' ', s.last_name) AS full_name, gc.grade_point FROM enrolled_in AS e JOIN student AS s ON e.student_id = s.student_id JOIN grade_conversion AS gc ON e.grade = gc.letter_grade
medium gold: SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID 

hard pred: SELECT name FROM member WHERE member_id NOT IN (SELECT DISTINCT member_id FROM member_attendance)
hard gold: SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance) 

eval_err_num:182
hard pred: SELECT s.name FROM station s WHERE s.city = 'Palo Alto' AND s.id NOT IN (SELECT t.end_station_id FROM trip t)
hard gold: SELECT name FROM station WHERE city  =  "Palo Alto" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100 

medium pred: SELECT AVG(weeks_on_top) FROM volume WHERE artist_id IN ( SELECT artist_id FROM artist WHERE age <= 25 )
medium gold: SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25 

eval_err_num:183
easy pred: SELECT club_description FROM club WHERE club_name = "Tennis Club"
easy gold: SELECT clubdesc FROM club WHERE clubname  =  "Tennis Club" 

eval_err_num:184
extra pred: SELECT name, distance FROM aircraft WHERE distance > 5000 AND airline_id IN (SELECT airline_id FROM certificate GROUP BY airline_id HAVING COUNT(employee_id) >= 5)
extra gold: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5 

eval_err_num:185
medium pred: SELECT room_name, room_id FROM rooms ORDER BY base_price DESC LIMIT 3
medium gold: SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3; 

eval_err_num:186
easy pred: SELECT injured, COUNT(*) AS num_injuries FROM perpetrator GROUP BY injured ORDER BY num_injuries ASC
easy gold: SELECT Injured FROM perpetrator ORDER BY Injured ASC 

medium pred: SELECT minister FROM party WHERE left_office = (SELECT MAX(left_office) FROM party)
medium gold: SELECT minister FROM party ORDER BY left_office DESC LIMIT 1 

eval_err_num:187
medium pred: SELECT DISTINCT director FROM movie WHERE year IN (1999, 2000)
medium gold: SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000 

eval_err_num:188
extra pred: SELECT circuit_id, location FROM circuits WHERE country IN ('France', 'Belgium')
extra gold: SELECT circuitid ,  LOCATION FROM circuits WHERE country = "France" OR country = "Belgium" 

eval_err_num:189
hard pred: SELECT COUNT(*) FROM csu_fees WHERE campus_fee > (SELECT AVG(campus_fee) FROM csu_fees)
hard gold: SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees) 

eval_err_num:190
hard pred: SELECT forename, surname FROM drivers WHERE driver_id = ( SELECT driver_id FROM lap_times WHERE milliseconds = ( SELECT MIN(milliseconds) FROM lap_times ) )
hard gold: SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1 

eval_err_num:191
hard pred: SELECT DISTINCT first_name FROM student JOIN enrolled_in ON student.student_id = enrolled_in.student_id JOIN grade_conversion ON enrolled_in.grade = grade_conversion.letter_grade WHERE grade_conversion.grade_point >= 3.8
hard gold: SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8 

eval_err_num:192
hard pred: SELECT title, year FROM movie WHERE movie_id IN ( SELECT movie_id FROM rating ORDER BY rating_stars DESC LIMIT 3 )
hard gold: SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3 

easy pred: SELECT AVG(average_attendance) FROM stadium WHERE capacity_percentage > 100
easy gold: SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100 

eval_err_num:193
hard pred: SELECT s.student_first_name, s.student_last_name, c.course_description FROM student s JOIN enroll e ON s.student_num = e.student_number JOIN class cl ON e.class_code = cl.class_code JOIN course c ON cl.course_code = c.course_code
hard gold: SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code 

eval_err_num:194
extra pred: SELECT DISTINCT p3.name FROM person_friend AS p1 JOIN person_friend AS p2 ON p1.friend = p2.name JOIN person AS p3 ON p2.friend = p3.name WHERE p1.name = "Alice"
extra gold: SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice' 

eval_err_num:195
medium pred: SELECT bname, SUM(amount) as total_loan_amount FROM bank JOIN loan ON bank.branch_id = loan.branch_id GROUP BY bname
medium gold: SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname 

eval_err_num:196
medium pred: SELECT city, name, revenue FROM ( SELECT city, name, revenue, RANK() OVER(PARTITION BY city ORDER BY revenue DESC) AS rank FROM manufacturers ) AS ranked WHERE rank = 1
medium gold: SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter 

eval_err_num:197
medium pred: SELECT branch_id, SUM(amount) as total_loan_amount FROM loan GROUP BY branch_id
medium gold: SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname 

medium pred: SELECT card_number FROM member WHERE hometown = 'Kentucky'
medium gold: SELECT card_number FROM member WHERE Hometown LIKE "%Kentucky%" 

eval_err_num:198
extra pred: SELECT s.balance FROM savings s JOIN checking c ON s.customer_id = c.customer_id WHERE c.balance = (SELECT MAX(balance) FROM checking)
extra gold: SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1 

eval_err_num:199
hard pred: SELECT faculty_id FROM faculty_participates_in JOIN student ON faculty_participates_in.activity_id = student.advisor
hard gold: SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student 

eval_err_num:200
medium pred: SELECT AVG(age) AS average_age, MIN(age) AS minimum_age FROM artist WHERE country = 'United States'
medium gold: SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States' 

eval_err_num:201
hard pred: SELECT advisor, count(*) AS student_count FROM student GROUP BY advisor ORDER BY student_count DESC LIMIT 1
hard gold: SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1 

eval_err_num:202
medium pred: SELECT DISTINCT state FROM college JOIN tryout ON college.college_name = tryout.college_name WHERE tryout.player_position = 'striker'
medium gold: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker' 

eval_err_num:203
medium pred: SELECT state, account_type, credit_score FROM customer WHERE number_of_loans = 0
medium gold: SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0 

eval_err_num:204
medium pred: SELECT name, latitude, city FROM station WHERE latitude = (SELECT MIN(latitude) FROM station)
medium gold: SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1 

eval_err_num:205
medium pred: SELECT first_name, last_name FROM teachers
medium gold: SELECT DISTINCT firstname ,  lastname FROM teachers 

eval_err_num:206
easy pred: SELECT department_name FROM departments WHERE department_id IN (SELECT department_id FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id HAVING COUNT(*) > 10)
easy gold: SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10 

eval_err_num:207
hard pred: SELECT card_type_code, COUNT(*) AS num_cards FROM customers_cards GROUP BY card_type_code ORDER BY num_cards DESC LIMIT 1
hard gold: SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:208
medium pred: SELECT day_number, calendar_date FROM reference_calendar
medium gold: SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date 

hard pred: SELECT product_name FROM products WHERE product_id NOT IN (SELECT DISTINCT product_id FROM products_in_events)
hard gold: SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) 

eval_err_num:209
extra pred: SELECT count(*) as settlement_count, claim_id FROM settlements WHERE date_claim_settled = (SELECT max(date_claim_settled) FROM settlements) GROUP BY claim_id
extra gold: SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1 

eval_err_num:210
medium pred: SELECT name FROM wine WHERE price > 50 AND grape_color = 'Red'
medium gold: SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  "Red" AND T2.price  >  50 

eval_err_num:211
easy pred: SELECT flight_number FROM flight WHERE distance > 2000
easy gold: SELECT flno FROM Flight WHERE distance  >  2000 

extra pred: SELECT COUNT(*) FROM visitors WHERE tourist_id NOT IN (SELECT DISTINCT tourist_id FROM visits)
extra gold: SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ) 

eval_err_num:212
hard pred: SELECT label, COUNT(*) AS album_count FROM albums GROUP BY label ORDER BY album_count DESC LIMIT 1
hard gold: SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1 

eval_err_num:213
extra pred: SELECT DISTINCT professor.employee_first_name, professor.professor_office, course.course_description, department.department_name FROM professor JOIN class ON professor.employee_number = class.professor_employee_number JOIN course ON class.course_code = course.course_code JOIN department ON course.department_code = department.department_code
extra gold: SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code 

eval_err_num:214
extra pred: SELECT DISTINCT c.name FROM channel c JOIN broadcast b1 ON c.channel_id = b1.channel_id JOIN broadcast b2 ON c.channel_id = b2.channel_id WHERE b1.time_of_day = 'morning' AND b2.time_of_day = 'night'
extra gold: SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night' 

medium pred: SELECT customer_first_name, customer_last_name, customer_phone FROM customers WHERE customer_id = (SELECT customer_id FROM accounts WHERE account_name = '162')
medium gold: SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  "162" 

eval_err_num:215
hard pred: SELECT SUM(access_count) FROM documents WHERE document_type_code = (SELECT document_type_code FROM documents GROUP BY document_type_code HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) AS count FROM documents GROUP BY document_type_code) AS T))
hard gold: SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:216
easy pred: SELECT first_name FROM student WHERE major = 600
easy gold: SELECT Fname FROM Student WHERE Major  =  600 

eval_err_num:217
hard pred: SELECT appelation FROM wines WHERE year > 2008 AND area != 'Central Coast'
hard gold: SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  "Central Coast" 

medium pred: SELECT state_province_county FROM addresses WHERE address_id IN ( SELECT staff_address_id FROM staff GROUP BY staff_address_id HAVING COUNT(*) >= 2 AND COUNT(*) <= 4 )
medium gold: SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4; 

eval_err_num:218
extra pred: SELECT last_name FROM student WHERE (sex = 'F' AND city_code = 'BAL') OR (sex = 'M' AND age < 20)
extra gold: SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20 

eval_err_num:219
extra pred: SELECT country, COUNT(*) AS number_of_airlines FROM airlines GROUP BY country ORDER BY number_of_airlines DESC;
extra gold: SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC 

medium pred: SELECT city.gdp, city.regional_population FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city GROUP BY city.city_id HAVING COUNT(hosting_city.year) > 1
medium gold: SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1 

eval_err_num:220
medium pred: SELECT customer_id, COUNT(*) as card_count FROM customers_cards GROUP BY customer_id
medium gold: SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id 

eval_err_num:221
hard pred: SELECT p.product_name FROM products AS p JOIN reference_colors AS c ON p.color_code = c.color_code JOIN reference_product_categories AS pc ON p.product_category_code = pc.product_category_code WHERE c.color_description = 'white' AND pc.unit_of_measure != 'Handful'
hard gold: SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  "white" AND t2.unit_of_measure != "Handful" 

eval_err_num:222
medium pred: SELECT max(grade_point), min(grade_point) FROM grade_conversion
medium gold: SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION 

eval_err_num:223
hard pred: SELECT team, COUNT(*) AS num_technicians FROM technician GROUP BY team ORDER BY num_technicians DESC LIMIT 1
hard gold: SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1 

easy pred: SELECT state FROM park GROUP BY state HAVING COUNT(park_id) > 2
easy gold: SELECT state FROM park GROUP BY state HAVING count(*)  >  2; 

medium pred: SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1
medium gold: SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1 

eval_err_num:224
hard pred: SELECT professor_first_name, professor_last_name FROM professor WHERE department_code = 'BIO'
hard gold: SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  "Biology" 

eval_err_num:225
extra pred: SELECT circuit_id, location FROM circuits WHERE country = 'France' OR country = 'Belgium'
extra gold: SELECT circuitid ,  LOCATION FROM circuits WHERE country = "France" OR country = "Belgium" 

eval_err_num:226
easy pred: SELECT user_id, count(follower_id) as num_followers FROM follows GROUP BY user_id
easy gold: SELECT count(*) FROM follows GROUP BY f1 

eval_err_num:227
extra pred: SELECT E.employee_first_name, P.professor_office, D.department_name, C.course_description FROM employee AS E JOIN professor AS P ON E.employee_number = P.employee_number JOIN department AS D ON P.department_code = D.department_code JOIN class AS Cl ON P.employee_number = Cl.professor_employee_number JOIN course AS C ON Cl.course_code = C.course_code
extra gold: SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code 

*** evaluating for english ***
