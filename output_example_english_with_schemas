eval_err_num:1
extra pred: SELECT s.name FROM storm s JOIN affected_region ar ON s.storm_id = ar.storm_id GROUP BY s.name HAVING COUNT(DISTINCT ar.region_id) >= 2 AND SUM(ar.number_city_affected) >= 10
extra gold: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10 

eval_err_num:2
hard pred: SELECT name FROM instructor WHERE department_name = "Statistics" ORDER BY salary ASC LIMIT 1
hard gold: SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1 

eval_err_num:3
hard pred: SELECT DISTINCT customer_name FROM customers INNER JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE order_status_code = 'Pending' ORDER BY customers.customer_id
hard gold: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  "Pending" ORDER BY T2.customer_id 

hard pred: SELECT date FROM perpetrator JOIN people ON perpetrator.people_id = people.people_id WHERE height = (SELECT MAX(height) FROM people)
hard gold: SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1 

hard pred: SELECT DISTINCT publisher FROM book_club WHERE year = 1989 AND publisher IN ( SELECT publisher FROM book_club WHERE year = 1990 )
hard gold: SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990 

eval_err_num:4
easy pred: SELECT first_name FROM student WHERE major = 600
easy gold: SELECT Fname FROM Student WHERE Major  =  600 

eval_err_num:5
hard pred: SELECT level, count(*) as num_people FROM member GROUP BY level ORDER BY num_people DESC LIMIT 1
hard gold: SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1 

eval_err_num:6
extra pred: SELECT count(*) FROM routes JOIN airports AS source ON routes.source_airport_id = source.airport_id JOIN airports AS destination ON routes.destination_airport_id = destination.airport_id WHERE source.country = 'United States' AND destination.country = 'Canada'
extra gold: SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States') 

eval_err_num:7
hard pred: SELECT MAX(resolution), MIN(resolution) FROM song WHERE duration = '3 minutes'
hard gold: SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE "3:%" 

eval_err_num:8
extra pred: SELECT apartment_number FROM apartments WHERE apartment_id IN ( SELECT apartment_id FROM apartment_bookings WHERE booking_status_code = 'Provisional' ) AND apartment_id IN ( SELECT apartment_id FROM apartment_bookings WHERE booking_status_code = 'Confirmed' )
extra gold: SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  "Confirmed" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  "Provisional" 

eval_err_num:9
medium pred: SELECT booking_status_code FROM apartment_bookings AS AB JOIN apartments AS A ON AB.apartment_id = A.apartment_id WHERE A.apartment_number = "Suite 634"
medium gold: SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  "Suite 634" 

eval_err_num:10
medium pred: SELECT shop_details FROM shops WHERE location_id IN ( SELECT location_id FROM locations WHERE other_details CONTAINS "can be reached by walk" )
medium gold: SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  "walk" 

eval_err_num:11
medium pred: SELECT room_name FROM rooms ORDER BY max_occupancy DESC LIMIT 1
medium gold: SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1; 

eval_err_num:12
hard pred: SELECT department_name FROM department ORDER BY total_credits DESC LIMIT 1
hard gold: SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1 

eval_err_num:13
medium pred: SELECT r.role_description, r.role_code, COUNT(e.employee_id) AS number_of_employees FROM roles r LEFT JOIN employees e ON r.role_code = e.role_code GROUP BY r.role_description, r.role_code
medium gold: SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code; 

extra pred: SELECT problem_id, problem_log_id FROM problem_log WHERE assigned_to_staff_id = (SELECT staff_id FROM staff WHERE staff_first_name = 'Rylan' AND staff_last_name = 'Homenick')
extra gold: SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = "Rylan" AND T1.staff_last_name = "Homenick" 

eval_err_num:14
medium pred: SELECT MIN(product_price) AS min_price, MAX(product_price) AS max_price, AVG(product_price) AS avg_price FROM products
medium gold: SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products 

eval_err_num:15
hard pred: SELECT location FROM shop WHERE open_year > 2012 AND open_year < 2008 GROUP BY location HAVING COUNT(DISTINCT CASE WHEN open_year > 2012 THEN shop_id END) > 0 AND COUNT(DISTINCT CASE WHEN open_year < 2008 THEN shop_id END) > 0
hard gold: SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008 

eval_err_num:16
extra pred: SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products GROUP BY product_type_code ORDER BY product_type_code;
extra gold: SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code 

hard pred: SELECT stuid FROM student ORDER BY age DESC LIMIT 1
hard gold: SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student) 

medium pred: SELECT founded FROM university WHERE enrollment = (SELECT MAX(enrollment) FROM university)
medium gold: SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1 

eval_err_num:17
medium pred: SELECT document_type_code, document_type_name, document_type_description FROM reference_document_types
medium gold: SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types 

hard pred: SELECT nominee FROM musical WHERE award = "Tony Award" AND nominee IN (SELECT nominee FROM musical WHERE award = "Drama Desk Award")
hard gold: SELECT Nominee FROM musical WHERE Award  =  "Tony Award" INTERSECT SELECT Nominee FROM musical WHERE Award  =  "Drama Desk Award" 

hard pred: SELECT artist_name, country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.rating IN (SELECT DISTINCT rating FROM song ORDER BY rating DESC LIMIT 3)
hard gold: SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3 

eval_err_num:18
extra pred: SELECT sport_name, COUNT(*) as num_students_on_scholarship FROM sports_info WHERE on_scholarship = 'Yes' GROUP BY sport_name ORDER BY num_students_on_scholarship DESC LIMIT 1
extra gold: SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1 

hard pred: SELECT DISTINCT hometown FROM people WHERE people_id NOT IN (SELECT gymnast_id FROM gymnast)
hard gold: SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID 

eval_err_num:19
medium pred: SELECT how_to_get_there, COUNT(DISTINCT tourist_attraction_id) AS number_of_attractions FROM tourist_attractions GROUP BY how_to_get_there
medium gold: SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There 

extra pred: SELECT title, film_id, description FROM film WHERE film_id = ( SELECT film_id FROM film_actor GROUP BY film_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:20
easy pred: SELECT count(DISTINCT sport_name) FROM sports_info
easy gold: SELECT count(DISTINCT sportname) FROM Sportsinfo 

hard pred: SELECT * FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_policies)
hard gold: SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id 

medium pred: SELECT model_name, ram_mib FROM chip_model WHERE ram_mib = ( SELECT MIN(ram_mib) FROM chip_model )
medium gold: SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1; 

eval_err_num:21
medium pred: SELECT count(*) FROM voting_record WHERE city_code = 'NYC' AND election_cycle = 'spring' AND class_senator_vote IS NOT NULL
medium gold: SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  "NYC" AND T2.Election_Cycle  =  "Spring" 

eval_err_num:22
extra pred: SELECT AVG(longitude) FROM station WHERE id NOT IN (SELECT station_id FROM status WHERE bikes_available > 10)
extra gold: SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10) 

eval_err_num:23
medium pred: SELECT affiliation, COUNT(*) AS num_universities FROM university WHERE enrollment > 20000 GROUP BY affiliation
medium gold: SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation 

extra pred: SELECT railway_id, builder FROM railway WHERE railway_id = ( SELECT railway_id FROM train GROUP BY railway_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:24
extra pred: SELECT S.name FROM student S JOIN takes_classes T ON S.id = T.id JOIN prerequisite P ON T.course_id = P.course_id JOIN course C ON P.prerequisite_id = C.course_id WHERE C.title = 'International Finance'
extra gold: SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance') 

eval_err_num:25
extra pred: SELECT e.name, e.salary FROM employee e JOIN certificate c ON e.employee_id = c.employee_id JOIN aircraft a ON c.airline_id = a.airline_id WHERE a.distance > 5000 GROUP BY e.name, e.salary HAVING count(c.airline_id) = (SELECT max(cert_count) FROM (SELECT count(c.airline_id) as cert_count FROM certificate c JOIN aircraft a ON c.airline_id = a.airline_id WHERE a.distance > 5000 GROUP BY c.employee_id) AS temp)
extra gold: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1 

eval_err_num:26
medium pred: SELECT DISTINCT forename FROM drivers WHERE driver_id IN (SELECT driver_id FROM driver_standings WHERE position = 1 AND wins > 0)
medium gold: SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 

eval_err_num:27
medium pred: SELECT COUNT(*) FROM reservations WHERE (adults + kids) = (SELECT max_occupancy FROM rooms WHERE room_id = reservations.room) AND (adults + kids) = max_occupancy
medium gold: SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids; 

medium pred: SELECT software_platform, count(*) FROM device GROUP BY software_platform ORDER BY count(*) DESC
medium gold: SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC 

eval_err_num:28
easy pred: SELECT DISTINCT college_name FROM tryout ORDER BY college_name ASC
easy gold: SELECT DISTINCT cName FROM tryout ORDER BY cName 

hard pred: SELECT DISTINCT customer_name FROM customers WHERE customer_id IN (SELECT customer_id FROM customer_orders WHERE order_status_code = "Pending") ORDER BY customer_id
hard gold: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  "Pending" ORDER BY T2.customer_id 

eval_err_num:29
hard pred: SELECT name FROM instructor WHERE salary > (SELECT MAX(salary) FROM instructor WHERE department_name = 'Biology')
hard gold: SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology') 

eval_err_num:30
medium pred: SELECT first_name || ' ' || last_name AS full_name, age FROM student WHERE sex = 'F'
medium gold: SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F' 

eval_err_num:31
extra pred: SELECT T1.department_name FROM department AS T1 JOIN professor AS T2 ON T1.department_code = T2.department_code WHERE T2.professor_high_degree = 'Ph.D.' GROUP BY T1.department_name ORDER BY COUNT(T2.employee_number) DESC LIMIT 1
extra gold: SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:32
extra pred: SELECT student_first_name FROM student WHERE student_last_name LIKE 'S%' AND student_class = 'ACCT-211'
extra gold: SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%' 

eval_err_num:33
medium pred: SELECT date, max_temperature_f AS average_temperature, mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3
medium gold: SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3 

eval_err_num:34
hard pred: SELECT DISTINCT city FROM city WHERE city NOT IN ( SELECT DISTINCT city FROM branch JOIN membership_register_branch ON branch.branch_id = membership_register_branch.branch_id GROUP BY branch.branch_id, city HAVING COUNT(membership_register_branch.member_id) > 100 )
hard gold: SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100 

eval_err_num:35
medium pred: SELECT COUNT(*) AS problem_count, product_id FROM problems GROUP BY product_id HAVING COUNT(*) > 0
medium gold: SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id 

eval_err_num:36
easy pred: SELECT grade FROM list WHERE class_room = 105
easy gold: SELECT DISTINCT grade FROM list WHERE classroom  =  105 

eval_err_num:37
medium pred: SELECT COUNT(*) FROM course WHERE department_code = 'CIS'
medium gold: SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  "Computer Info. Systems" 

medium pred: SELECT city, COUNT(name) FROM station GROUP BY city HAVING COUNT(name) >= 15
medium gold: SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15 

medium pred: SELECT customer_first_name, customer_last_name, customer_phone FROM customers WHERE customer_id IN (SELECT customer_id FROM customers_cards WHERE card_number = '4560596484842')
medium gold: SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  "4560596484842" 

medium pred: SELECT name FROM playlists WHERE id IN (SELECT playlist_id FROM playlist_tracks GROUP BY playlist_id HAVING COUNT(track_id) > 100)
medium gold: SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100; 

extra pred: SELECT DISTINCT owner FROM program WHERE program_id IN ( SELECT program_id FROM broadcast WHERE time_of_day = 'morning' ) AND program_id IN ( SELECT program_id FROM broadcast WHERE time_of_day = 'night' )
extra gold: SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  "Morning" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  "Night" 

extra pred: SELECT T1.name FROM tourist_attractions AS T1 JOIN visits AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id WHERE T2.tourist_id = 'Alison' AND T1.tourist_attraction_id NOT IN (SELECT T3.tourist_attraction_id FROM visits AS T3 WHERE T3.tourist_id = 'Rosalind')
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Alison" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Rosalind" 

eval_err_num:38
extra pred: SELECT professor_first_name FROM professor WHERE employee_number IN ( SELECT professor_employee_number FROM class WHERE course_code IN ('CIS-220', 'QM-261') GROUP BY professor_employee_number HAVING COUNT(*) = 2 )
extra gold: SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261' 

medium pred: SELECT DISTINCT department_id FROM employees WHERE manager_id IN (SELECT manager_id FROM employees GROUP BY manager_id HAVING COUNT(employee_id) >= 4)
medium gold: SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4 

extra pred: SELECT organisation_id, organisation_type, organisation_details FROM organisations WHERE organisation_id = (SELECT employer_organisation_id FROM research_staff GROUP BY employer_organisation_id ORDER BY count(*) DESC LIMIT 1)
extra gold: SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT channel_code FROM customer_contact_channels WHERE customer_id IN ( SELECT customer_id FROM customers WHERE customer_name = "Tillman Ernser" )
medium gold: SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Tillman Ernser" 

easy pred: SELECT DISTINCT investor FROM entrepreneur GROUP BY investor HAVING COUNT(DISTINCT entrepreneur_id) >= 2
easy gold: SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2 

hard pred: SELECT DISTINCT publisher FROM publication WHERE price > 10000000 AND price < 5000000
hard gold: SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000 

medium pred: SELECT start_station_name, end_station_name FROM trip WHERE id IN (SELECT id FROM trip ORDER BY id ASC LIMIT 3)
medium gold: SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3 

eval_err_num:39
extra pred: SELECT COUNT(*) AS problem_count, product_name FROM product JOIN problems ON product.product_id = problems.product_id GROUP BY product_name ORDER BY problem_count DESC LIMIT 1
extra gold: SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1 

eval_err_num:40
extra pred: SELECT COUNT(*) FROM rooms WHERE room_id NOT IN (SELECT room FROM reservations)
extra gold: SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations) 

hard pred: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester LIKE '%Spring%')
hard gold: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring') 

medium pred: SELECT time FROM climber WHERE mountain_id IN (SELECT mountain_id FROM mountain WHERE country = 'Uganda')
medium gold: SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  "Uganda" 

eval_err_num:41
medium pred: SELECT s.name, count(ts.train_id) FROM station s LEFT JOIN train_station ts ON s.station_id = ts.station_id GROUP BY s.name
medium gold: SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id 

eval_err_num:42
hard pred: SELECT T1.Country, COUNT(*) AS Number_of_Invoices FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id GROUP BY T1.Country ORDER BY Number_of_Invoices DESC LIMIT 5
hard gold: SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5; 

eval_err_num:43
medium pred: SELECT unit_of_measure, product_category_code FROM reference_product_categories AS RPC JOIN products AS P ON RPC.product_category_code = P.product_category_code WHERE P.product_name = 'chervil'
medium gold: SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  "chervil" 

medium pred: SELECT category FROM book_club WHERE year > 1989 GROUP BY category HAVING COUNT(DISTINCT book_title) >= 2
medium gold: SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2 

eval_err_num:44
hard pred: SELECT count(*) FROM routes AS R JOIN airports AS D ON R.destination_airport_id = D.airport_id JOIN airlines AS A ON R.airline_id = A.airline_id WHERE D.country = 'Italy' AND A.name = 'American Airlines'
hard gold: SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines' 

eval_err_num:45
hard pred: SELECT policy_type_code, count(*) as record_count FROM available_policies GROUP BY policy_type_code ORDER BY record_count DESC LIMIT 1
hard gold: SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:46
hard pred: SELECT MIN(membership_amount), MAX(membership_amount) FROM branch WHERE (open_year = '2011' OR city = 'London')
hard gold: SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London' 

eval_err_num:47
extra pred: SELECT c.email_address FROM customers c JOIN complaints cm ON c.customer_id = cm.customer_id WHERE cm.product_id = ( SELECT product_id FROM complaints GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1 

eval_err_num:48
hard pred: SELECT DISTINCT c1.country FROM competition c1 JOIN competition c2 ON c1.country = c2.country WHERE c1.competition_type = 'Friendly' AND c2.competition_type = 'Tournament'
hard gold: SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament' 

medium pred: SELECT problem_description FROM problems WHERE reported_by_staff_id IN (SELECT staff_id FROM staff WHERE staff_first_name = "Christop")
medium gold: SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop" 

hard pred: SELECT customer_name FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_orders)
hard gold: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id 

eval_err_num:49
medium pred: SELECT player_position, MIN(training_hours) FROM tryout GROUP BY player_position
medium gold: SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos 

eval_err_num:50
extra pred: SELECT organisation_type FROM organisation_types WHERE organisation_id = ( SELECT employer_organisation_id FROM research_staff GROUP BY employer_organisation_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1 

extra pred: SELECT district_name FROM district JOIN store_district ON district.district_id = store_district.district_id JOIN store ON store.store_id = store_district.store_id WHERE store.type = 'flagship' GROUP BY district_name ORDER BY COUNT(store.store_id) DESC LIMIT 1;
extra gold: SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT DISTINCT name, nationality FROM architect WHERE id IN (SELECT architect_id FROM mill)
medium gold: SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id 

eval_err_num:51
medium pred: SELECT first_name || ' ' || last_name AS full_name FROM employee WHERE city = 'Calgary'
medium gold: SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  "Calgary" 

eval_err_num:52
medium pred: SELECT accounts.name, SUM(savings.balance) as total_savings FROM accounts JOIN savings ON accounts.customer_id = savings.customer_id GROUP BY accounts.name
medium gold: SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name 

eval_err_num:53
extra pred: SELECT song_name FROM song WHERE duration = '4 minutes' OR languages LIKE '%English%'
extra gold: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE "4:%" UNION SELECT song_name FROM song WHERE languages  =  "english" 

eval_err_num:54
medium pred: SELECT address FROM store WHERE store_id = 1
medium gold: SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1 

eval_err_num:55
easy pred: SELECT SUM(games_played) FROM sports_info
easy gold: SELECT sum(gamesplayed) FROM Sportsinfo 

eval_err_num:56
medium pred: SELECT owner, SUM(rating_in_percent) AS total_rating FROM channel GROUP BY owner
medium gold: SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER 

hard pred: SELECT count(DISTINCT product_id) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = "hot"
hard gold: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  "hot" 

eval_err_num:57
medium pred: SELECT star_rating_description FROM ref_hotel_star_ratings WHERE hotel_id IN ( SELECT hotel_id FROM hotels WHERE price_range > 10000 )
medium gold: SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000 

easy pred: SELECT position FROM player GROUP BY position HAVING AVG(points) > 20
easy gold: SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20 

eval_err_num:58
hard pred: SELECT document_id FROM documents_with_expenses WHERE document_name LIKE '%s%'
hard gold: SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%' 

hard pred: SELECT yearid FROM hall_of_fame ORDER BY votes ASC LIMIT 1
hard gold: SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1; 

eval_err_num:59
hard pred: SELECT customer_id, COUNT(account_id) AS num_accounts FROM accounts GROUP BY customer_id ORDER BY num_accounts DESC LIMIT 1
hard gold: SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:60
medium pred: SELECT DISTINCT age FROM student WHERE student_id IN (SELECT student_id FROM voting_record WHERE election_cycle = "fall" AND secretary_vote IS NOT NULL)
medium gold: SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  "Fall" 

eval_err_num:61
extra pred: SELECT p1.name, p1.age FROM person p1 JOIN person_friend pf1 ON p1.name = pf1.friend JOIN person_friend pf2 ON p1.name = pf2.friend JOIN person p2 ON p2.name = pf1.name WHERE p2.name = 'Dan' AND p2.name = 'Alice'
extra gold: SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice' 

eval_err_num:62
extra pred: SELECT gs.location, gs.representative_name FROM gas_station gs JOIN station_company sc ON gs.station_id = sc.station_id JOIN company c ON sc.company_id = c.company_id ORDER BY c.assets_billion DESC LIMIT 3
extra gold: SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3 

medium pred: SELECT E.company, E.investor, P.name FROM entrepreneur AS E JOIN people AS P ON E.people_id = P.people_id
medium gold: SELECT Company ,  Investor FROM entrepreneur 

eval_err_num:63
easy pred: SELECT DISTINCT detention_type_code FROM reference_detention_type
easy gold: SELECT DISTINCT detention_type_code FROM Detention 

eval_err_num:64
extra pred: SELECT amenity_name FROM dorm_amenity JOIN has_amenity ON dorm_amenity.amenity_id = has_amenity.amenity_id JOIN lives_in ON has_amenity.dorm_id = lives_in.dorm_id JOIN student ON lives_in.student_id = student.student_id WHERE student.last_name = 'Smith'
extra gold: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith' 

eval_err_num:65
extra pred: SELECT detention_type_code, detention_type_description FROM reference_detention_type ORDER BY (SELECT COUNT(*) FROM detention WHERE detention.detention_type_code = reference_detention_type.detention_type_code) ASC LIMIT 1
extra gold: SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1 

medium pred: SELECT document_id FROM documents_with_expenses WHERE budget_type_code = 'Government'
medium gold: SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  "Government" 

eval_err_num:66
hard pred: SELECT name, gender FROM candidate c JOIN people p ON c.people_id = p.people_id WHERE support_rate = (SELECT MAX(support_rate) FROM candidate)
hard gold: SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1 

eval_err_num:67
hard pred: SELECT e.name, e.age, j.theme FROM editor e JOIN journal_committee jc ON e.editor_id = jc.editor_id JOIN journal j ON jc.journal_id = j.journal_id ORDER BY j.theme ASC
hard gold: SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC 

eval_err_num:68
hard pred: SELECT total_points FROM gymnast WHERE age = (SELECT MIN(age) FROM gymnast)
hard gold: SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1 

eval_err_num:69
medium pred: SELECT title, credits, department_name FROM course WHERE course_id IN (SELECT course_id FROM prerequisite GROUP BY course_id HAVING COUNT(prerequisite_id) > 1)
medium gold: SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1 

eval_err_num:70
extra pred: SELECT course_id FROM section WHERE (semester = 'Fall' AND year = 2009) AND course_id IN (SELECT course_id FROM section WHERE semester = 'Spring' AND year = 2010)
extra gold: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010 

eval_err_num:71
medium pred: SELECT student_id, middle_name FROM students WHERE student_id IN ( SELECT student_id FROM (SELECT student_id, COUNT(*) as num_enrollments FROM student_course_enrolment GROUP BY student_id) as enrolments WHERE num_enrollments <= 2 )
medium gold: SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2 

eval_err_num:72
extra pred: SELECT first_name, last_name FROM student WHERE stuid NOT IN (SELECT stuid FROM has_allergy WHERE allergy_type = 'Food')
extra gold: SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  "food") 

medium pred: SELECT location FROM cinema GROUP BY location HAVING COUNT(*) >= 2 AND MIN(capacity) > 300
medium gold: SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2 

eval_err_num:73
easy pred: SELECT department_phone FROM department WHERE room = '268'
easy gold: SELECT DPhone FROM DEPARTMENT WHERE Room  =  268 

eval_err_num:74
medium pred: SELECT class_room, grade FROM list GROUP BY class_room, grade
medium gold: SELECT DISTINCT classroom ,  grade FROM list 

eval_err_num:75
easy pred: SELECT name FROM wrestler WHERE CAST(days_held AS INTEGER) < 100
easy gold: SELECT Name FROM wrestler WHERE Days_held  <  100 

eval_err_num:76
extra pred: SELECT fault_log_entry_id, fault_description, fault_log_entry_datetime FROM fault_log WHERE fault_log_entry_id IN ( SELECT fault_log_entry_id FROM fault_log_parts GROUP BY fault_log_entry_id HAVING COUNT(*) = ( SELECT MAX(part_count) FROM ( SELECT fault_log_entry_id, COUNT(*) AS part_count FROM fault_log_parts GROUP BY fault_log_entry_id ) AS T ) )
extra gold: SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:77
easy pred: SELECT product_category_description FROM reference_product_categories JOIN products ON reference_product_categories.product_category_code = products.product_category_code WHERE product_name = "flax"
easy gold: SELECT product_category_code FROM products WHERE product_name  =  "flax" 

eval_err_num:78
extra pred: SELECT name, opening_hours FROM tourist_attractions WHERE how_to_get_there IN ('bus', 'walk')
extra gold: SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  "bus" OR How_to_Get_There  =  "walk" 

eval_err_num:79
extra pred: SELECT m.name, m.trade_name FROM medicine AS m LEFT JOIN medicine_enzyme_interaction AS mei ON m.id = mei.medicine_id LEFT JOIN enzyme AS e ON mei.enzyme_id = e.id WHERE e.product != 'Heme' OR e.product IS NULL
extra gold: SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX' 

eval_err_num:80
hard pred: SELECT building, COUNT(*) as faculty_count FROM faculty GROUP BY building ORDER BY faculty_count DESC LIMIT 1
hard gold: SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT COUNT(*) FROM financial_transactions WHERE account_id = 337
medium gold: SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  "337" 

eval_err_num:81
hard pred: SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections_images)
hard gold: SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id 

eval_err_num:82
medium pred: SELECT last_name FROM list WHERE grade = 3 AND last_name NOT IN (SELECT last_name FROM teachers WHERE first_name = "COVIN" AND last_name = "JEROME")
medium gold: SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != "COVIN" AND T2.lastname != "JEROME" 

eval_err_num:83
medium pred: SELECT department_code, count(*) as student_count FROM student GROUP BY department_code
medium gold: SELECT count(*) ,  dept_code FROM student GROUP BY dept_code 

eval_err_num:84
easy pred: SELECT last_name FROM authors ORDER BY last_name ASC
easy gold: SELECT lname FROM authors ORDER BY lname 

eval_err_num:85
medium pred: SELECT AVG(fastest_lap_speed) FROM results JOIN races ON results.race_id = races.race_id WHERE races.name = 'Monaco Grand Prix' AND races.year = 2008
medium gold: SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = "Monaco Grand Prix" 

eval_err_num:86
medium pred: SELECT first_name, last_name FROM faculty
medium gold: SELECT fname ,  lname FROM Faculty WHERE Rank  =  "Instructor" 

eval_err_num:87
extra pred: SELECT last_name FROM authors WHERE author_id IN ( SELECT author_id FROM authorship_count GROUP BY author_id HAVING COUNT(paper_id) = ( SELECT MAX(paper_count) FROM ( SELECT author_id, COUNT(paper_id) as paper_count FROM authorship_count GROUP BY author_id ) AS subquery ) )
extra gold: SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT duration FROM actor ORDER BY age ASC LIMIT 1
medium gold: SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1 

eval_err_num:88
hard pred: SELECT c.building, c.room_number, s.semester, s.year FROM course AS c JOIN section AS s ON c.course_id = s.course_id WHERE c.department_name = 'Psychology' ORDER BY c.title ASC
hard gold: SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title 

eval_err_num:89
medium pred: SELECT aircraft FROM match GROUP BY aircraft HAVING COUNT(*) >= 2
medium gold: SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2 

hard pred: SELECT last_name FROM staff WHERE staff_id = (SELECT staff_id FROM complaints WHERE date_complaint_raised = (SELECT MIN(date_complaint_raised) FROM complaints))
hard gold: SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1 

eval_err_num:90
extra pred: SELECT apartment_type_code, COUNT(apartment_type_code) AS count FROM apartments WHERE bathroom_count > 1 GROUP BY apartment_type_code ORDER BY count DESC LIMIT 1
extra gold: SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT count(*) FROM vocals WHERE type = 'lead'
medium gold: SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  "lead" 

eval_err_num:91
medium pred: SELECT apartment_number FROM apartments WHERE bedroom_count = (SELECT MAX(bedroom_count) FROM apartments)
medium gold: SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1 

eval_err_num:92
easy pred: SELECT employee_id FROM documents_to_be_destroyed WHERE destroyed_by_employee_id IS NOT NULL
easy gold: SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed 

extra pred: SELECT title, credits FROM course WHERE course_id = ( SELECT course_id FROM section WHERE building = ( SELECT building FROM classroom WHERE capacity = ( SELECT MAX(capacity) FROM classroom ) ) )
extra gold: SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom) 

eval_err_num:93
hard pred: SELECT competition_type, COUNT(*) as frequency FROM competition GROUP BY competition_type ORDER BY frequency DESC LIMIT 1
hard gold: SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:94
hard pred: SELECT name FROM tourist_attractions WHERE how_to_get_there = 'by bus' OR address = '254 Ottilie Junction'
hard gold: SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  "254 Ottilie Junction" OR T2.How_to_Get_There  =  "bus" 

eval_err_num:95
hard pred: SELECT document_type_code FROM reference_document_types GROUP BY document_type_code ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:96
medium pred: SELECT day_number, calendar_date FROM reference_calendar JOIN all_documents ON reference_calendar.calendar_date = all_documents.date_stored
medium gold: SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date 

eval_err_num:97
hard pred: SELECT p.title FROM papers AS p JOIN authorship_count AS ac ON p.paper_id = ac.paper_id JOIN institution AS i ON ac.institution_id = i.institution_id WHERE i.name = "Indiana University"
hard gold: SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  "Indiana University" 

eval_err_num:98
hard pred: SELECT SUM(total_points) FROM gymnast WHERE age = (SELECT MIN(age) FROM gymnast)
hard gold: SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1 

eval_err_num:99
medium pred: SELECT unit_of_measure FROM reference_product_categories JOIN products ON reference_product_categories.product_category_code = products.product_category_code WHERE product_name = 'cumin'
medium gold: SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  "cumin" 

eval_err_num:100
extra pred: SELECT department_name FROM department WHERE department_code IN ( SELECT department_code FROM professor WHERE professor_high_degree = 'Ph.D.' GROUP BY department_code HAVING count(*) = ( SELECT max(phd_count) FROM ( SELECT department_code, count(*) as phd_count FROM professor WHERE professor_high_degree = 'Ph.D.' GROUP BY department_code ) AS temp ) )
extra gold: SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:101
hard pred: SELECT reviewer_id FROM rating WHERE rating_stars != 4
hard gold: SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4 

medium pred: SELECT SUM(room_count) FROM apartments WHERE building_id IN (SELECT building_id FROM apartment_buildings WHERE building_short_name = "Columbus Square")
medium gold: SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  "Columbus Square" 

extra pred: SELECT document_id FROM documents WHERE document_status_code = "done" AND document_type_code = "Paper" AND shipping_agent_code != "USPS"
extra gold: SELECT document_id FROM Documents WHERE document_status_code  =  "done" AND document_type_code = "Paper" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS"; 

medium pred: SELECT company_name FROM culture_company WHERE book_club_id IN ( SELECT book_club_id FROM book_club WHERE author_or_editor = 'Alyson' )
medium gold: SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson' 

eval_err_num:102
extra pred: SELECT incident_type_code, incident_type_description FROM reference_incident_type WHERE incident_type_code = ( SELECT incident_type_code FROM behavior_incident GROUP BY incident_type_code ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:103
medium pred: SELECT AVG(training_hours) FROM player WHERE player_id IN (SELECT player_id FROM tryout WHERE decision = 'rejected')
medium gold: SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no' 

eval_err_num:104
extra pred: SELECT first_name FROM faculty JOIN faculty_participates_in ON faculty.faculty_id = faculty_participates_in.faculty_id JOIN activity ON activity.activity_id = faculty_participates_in.activity_id WHERE activity.activity_name IN ('Canoeing', 'Kayaking')
extra gold: SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking' 

medium pred: SELECT product_name, product_category_code FROM products WHERE product_price = (SELECT MAX(product_price) FROM products)
medium gold: SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1 

hard pred: SELECT investor, COUNT(entrepreneur_id) FROM entrepreneur GROUP BY investor ORDER BY COUNT(entrepreneur_id) DESC LIMIT 1
hard gold: SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:105
easy pred: SELECT * FROM employees WHERE department_id IS NULL
easy gold: SELECT * FROM employees WHERE department_id  =  "null" 

eval_err_num:106
hard pred: SELECT title FROM movie WHERE movie_id NOT IN (SELECT movie_id FROM rating WHERE reviewer_id = (SELECT reviewer_id FROM reviewer WHERE name = 'Chris Jackson'))
hard gold: SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson' 

eval_err_num:107
extra pred: SELECT student_first_name, student_gpa FROM student WHERE student_gpa < (SELECT AVG(student_gpa) FROM student)
extra gold: SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student) 

medium pred: SELECT DISTINCT name FROM wine WHERE grape IN (SELECT grape FROM grapes WHERE color = "red")
medium gold: SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  "Red" 

hard pred: SELECT type FROM ship WHERE tonnage > 6000 AND type IN (SELECT type FROM ship WHERE tonnage < 4000)
hard gold: SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000 

hard pred: SELECT customer_name FROM customers WHERE payment_method_code = "Credit Card" AND customer_id IN ( SELECT customer_id FROM customer_orders GROUP BY customer_id HAVING COUNT(*) > 2 )
hard gold: SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2 

medium pred: SELECT publisher, COUNT(book_title) FROM book_club GROUP BY publisher
medium gold: SELECT publisher ,  count(*) FROM book_club GROUP BY publisher 

hard pred: SELECT DISTINCT personal_name FROM course_authors_and_tutors WHERE personal_name IN (SELECT personal_name FROM students)
hard gold: SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students 

easy pred: SELECT enrollment, school FROM school WHERE denomination != "Catholic"
easy gold: SELECT Enrollment FROM school WHERE Denomination != "Catholic" 

eval_err_num:108
extra pred: SELECT school_name, ihsaa_football_class, mascot FROM school WHERE budgeted > 6000 OR year < 2003 ORDER BY total_budget_percent_invested + total_budget_percent_budgeted DESC ;
extra gold: SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted 

eval_err_num:109
medium pred: SELECT name FROM department WHERE departmentid IN (SELECT department FROM affiliated_with WHERE primary_affiliation = true)
medium gold: SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1 

medium pred: SELECT SUM(degrees) FROM degrees JOIN campuses ON degrees.campus = campuses.id WHERE campuses.campus = "San Francisco State University" AND degrees.year = 2004
medium gold: SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  "San Francisco State University" 

extra pred: SELECT first_name, last_name FROM employees WHERE reports_to = (SELECT id FROM employees WHERE last_name = "Edwards" AND first_name = "Nancy")
extra gold: SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = "Nancy" AND T1.last_name = "Edwards"; 

eval_err_num:110
medium pred: SELECT c.company, count(gs.station_id) as number_of_gas_stations FROM company as c INNER JOIN station_company as sc ON c.company_id = sc.company_id INNER JOIN gas_station as gs ON gs.station_id = sc.station_id GROUP BY c.company
medium gold: SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id 

eval_err_num:111
medium pred: SELECT first_name, last_name FROM list
medium gold: SELECT DISTINCT firstname ,  lastname FROM list 

hard pred: SELECT start_date FROM customer_policies JOIN claims ON customer_policies.policy_id = claims.policy_id WHERE amount_claimed <= (SELECT AVG(amount_claimed) FROM claims)
hard gold: SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims ) 

eval_err_num:112
easy pred: SELECT first_name FROM student ORDER BY age DESC
easy gold: SELECT Fname FROM STUDENT ORDER BY Age DESC 

easy pred: SELECT * FROM activity
easy gold: SELECT activity_name FROM Activity 

eval_err_num:113
medium pred: SELECT customer_name, credit_score FROM customer WHERE customer_id IN (SELECT customer_id FROM loan)
medium gold: SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id 

eval_err_num:114
easy pred: SELECT DISTINCT allergy_type FROM allergy_type
easy gold: SELECT DISTINCT allergytype FROM Allergy_type 

eval_err_num:115
medium pred: SELECT student_name FROM tryout ORDER BY student_name ASC
medium gold: SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName 

eval_err_num:116
hard pred: SELECT faculty_id FROM faculty WHERE faculty_id NOT IN (SELECT advisor FROM student)
hard gold: SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student 

eval_err_num:117
extra pred: SELECT investor_id, AVG(share_count) AS average_share_count FROM transactions GROUP BY investor_id ORDER BY average_share_count;
extra gold: SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count) 

hard pred: SELECT COUNT(*) FROM customers WHERE customer_type_code = ( SELECT customer_type_code FROM customers GROUP BY customer_type_code ORDER BY COUNT(*) DESC LIMIT 1 )
hard gold: SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:118
extra pred: SELECT organisation_id, COUNT(*) AS num_outcomes FROM project_outcomes GROUP BY organisation_id ORDER BY num_outcomes DESC LIMIT 1
extra gold: SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT issue_date FROM volume WHERE artist_id IN (SELECT artist_id FROM artist WHERE age <= 23)
medium gold: SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23 

hard pred: SELECT customer_name FROM clients WHERE client_id NOT IN (SELECT DISTINCT customer_id FROM bookings)
hard gold: SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID 

eval_err_num:119
medium pred: SELECT invoice_number, COUNT(transaction_id) AS transaction_count FROM financial_transactions GROUP BY invoice_number;
medium gold: SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number 

eval_err_num:120
medium pred: SELECT appelation, AVG(price) AS average_price, AVG(score) AS average_score FROM wine GROUP BY appelation
medium gold: SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation 

eval_err_num:121
hard pred: SELECT class_room, COUNT(*) AS student_count FROM list GROUP BY class_room ORDER BY student_count DESC LIMIT 1
hard gold: SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1 

eval_err_num:122
medium pred: SELECT room_name FROM rooms WHERE room_id IN (SELECT room FROM reservations GROUP BY room HAVING COUNT(*) > 60)
medium gold: SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60 

eval_err_num:123
medium pred: SELECT address FROM staff WHERE first_name = 'Elsa'
medium gold: SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa' 

eval_err_num:124
hard pred: SELECT staff_id, staff_name FROM staff_department_assignments WHERE date_assigned_to IS NULL ORDER BY date_assigned_from ASC LIMIT 1
hard gold: SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1 

eval_err_num:125
medium pred: SELECT department_name, COUNT(*) FROM student GROUP BY department_name
medium gold: SELECT count(*) ,  dept_name FROM student GROUP BY dept_name 

extra pred: SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%' OR last_name LIKE '%T%')
extra gold: SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' ) 

extra pred: SELECT start_station_name, start_station_id FROM trip WHERE start_date >= 'August' GROUP BY start_station_name, start_station_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE "8/%" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:126
medium pred: SELECT A.name, C.balance AS checking_balance, S.balance AS savings_balance FROM accounts A LEFT JOIN checking C ON A.customer_id = C.customer_id LEFT JOIN savings S ON A.customer_id = S.customer_id
medium gold: SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid 

eval_err_num:127
hard pred: SELECT college_name FROM college WHERE enrollment > (SELECT MAX(enrollment) FROM college WHERE state = 'FL')
hard gold: SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL') 

easy pred: SELECT role_code FROM roles GROUP BY role_code HAVING COUNT(*) >= 3
easy gold: SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3 

eval_err_num:128
medium pred: SELECT employee_last_name, employee_hire_date FROM employee JOIN professor ON professor.employee_number = employee.employee_number WHERE professor.professor_office = 'DRE 102'
medium gold: SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102' 

eval_err_num:129
extra pred: SELECT COUNT(*) AS number_of_problems, product_name FROM problems JOIN product ON problems.product_id = product.product_id GROUP BY product_name ORDER BY number_of_problems DESC LIMIT 1;
extra gold: SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1 

eval_err_num:130
extra pred: SELECT DISTINCT T1.aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.aircraft_id = T2.aircraft_id JOIN airport AS T3 ON T2.airport_id = T3.airport_id WHERE T3.airport_name IN ('London Heathrow', 'Gatwick') GROUP BY T1.aircraft HAVING COUNT(DISTINCT T3.airport_id) = 2
extra gold: SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Heathrow" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Gatwick" 

eval_err_num:131
extra pred: SELECT DISTINCT p.project_details FROM projects p JOIN project_outcomes po ON p.project_id = po.project_id JOIN research_outcomes ro ON po.outcome_code = ro.outcome_code WHERE ro.outcome_description LIKE '%Published%'
extra gold: SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%' 

eval_err_num:132
medium pred: SELECT customer_name, credit_score FROM customer WHERE customer_id IN (SELECT DISTINCT customer_id FROM loan)
medium gold: SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id 

eval_err_num:133
hard pred: SELECT rank, COUNT(*) AS count FROM faculty GROUP BY rank ORDER BY count ASC LIMIT 1
hard gold: SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1 

extra pred: SELECT id, name, gender FROM architect WHERE id IN ( SELECT architect_id FROM bridge GROUP BY architect_id HAVING COUNT(*) >= 2 ) OR id IN ( SELECT architect_id FROM mill GROUP BY architect_id HAVING COUNT(*) >= 1 )
extra gold: SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1 

hard pred: SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f < 70
hard gold: SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70 

medium pred: SELECT jan FROM temperature WHERE city_id = (SELECT city_id FROM city WHERE city = 'Shanghai')
medium gold: SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = "Shanghai" 

eval_err_num:134
hard pred: SELECT c.club_name FROM club c WHERE EXISTS ( SELECT * FROM member_of_club mc JOIN student s ON s.student_id = mc.student_id WHERE s.city_code = "BAL" AND mc.club_id = c.club_id )
hard gold: SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  "BAL" 

medium pred: SELECT name, tourist_attraction_id FROM tourist_attractions WHERE tourist_attraction_id IN (SELECT tourist_attraction_id FROM visits GROUP BY tourist_attraction_id HAVING COUNT(*) = 1)
medium gold: SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1 

extra pred: SELECT location, COUNT(station_id) FROM gas_station GROUP BY location ORDER BY COUNT(station_id) ASC
extra gold: SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*) 

eval_err_num:135
hard pred: SELECT transportation_method FROM ( SELECT transportation_method, COUNT(*) AS num_people FROM visits GROUP BY transportation_method ORDER BY num_people DESC LIMIT 1 ) AS T;
hard gold: SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:136
hard pred: SELECT AVG(age) FROM student JOIN member_of_club ON student.student_id = member_of_club.student_id JOIN club ON member_of_club.club_id = club.club_id WHERE club.club_name = "Hopkins Student Enterprises"
hard gold: SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  "Hopkins Student Enterprises" 

eval_err_num:137
hard pred: SELECT p.location, h.name FROM party p JOIN party_host ph ON p.party_id = ph.party_id JOIN host h ON ph.host_id = h.host_id ORDER BY h.age ASC
hard gold: SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age 

eval_err_num:138
easy pred: SELECT count(*) FROM reference_locations
easy gold: SELECT count(*) FROM Ref_locations 

medium pred: SELECT policy_type_code FROM policies WHERE customer_id = (SELECT customer_id FROM customers WHERE customer_details = 'Dayana Robel')
medium gold: SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  "Dayana Robel" 

eval_err_num:139
extra pred: SELECT allergy, allergy_type FROM has_allergy AS ha JOIN allergy_type AS at ON ha.allergy = at.allergy_name JOIN student AS s ON ha.stuid = s.stuid WHERE s.first_name = "Lisa" AND s.sex = "girl" ORDER BY allergy ASC
extra gold: SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  "Lisa" ORDER BY T1.Allergy 

eval_err_num:140
medium pred: SELECT first_name FROM student WHERE first_name LIKE '%a%'
medium gold: SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%' 

medium pred: SELECT * FROM locations WHERE location_name LIKE '%film%'
medium gold: SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE "%film%" 

medium pred: SELECT account_id, account_name, other_account_details FROM accounts WHERE customer_id IN (SELECT customer_id FROM customers WHERE customer_first_name = 'Meaghan')
medium gold: SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan' 

eval_err_num:141
medium pred: SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM customers c JOIN customers_cards cc ON c.customer_id = cc.customer_id GROUP BY c.customer_id HAVING COUNT(cc.card_id) >= 2
medium gold: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 

extra pred: SELECT staff_first_name, staff_last_name FROM staff WHERE staff_id IN ( SELECT reported_by_staff_id FROM problems WHERE product_id = ( SELECT product_id FROM product WHERE product_name = 'rem' ) ) AND staff_id NOT IN ( SELECT reported_by_staff_id FROM problems WHERE product_id = ( SELECT product_id FROM product WHERE product_name = 'aut' ) )
extra gold: SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "rem" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut" 

hard pred: SELECT artist_name FROM song WHERE country = 'UK' AND languages = 'English'
hard gold: SELECT artist_name FROM artist WHERE country  =  "UK" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "english" 

eval_err_num:142
medium pred: SELECT first_name, employee_id FROM employee WHERE employee_id IN ( SELECT support_representative_id FROM customer GROUP BY support_representative_id HAVING COUNT(DISTINCT customer_id) >= 10 )
medium gold: SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10 

eval_err_num:143
medium pred: SELECT director, count(*) as num_reviews FROM movie JOIN rating ON movie.movie_id = rating.movie_id JOIN reviewer ON rating.reviewer_id = reviewer.reviewer_id GROUP BY director
medium gold: SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director 

eval_err_num:144
easy pred: SELECT school_code FROM department WHERE department_name = "Accounting"
easy gold: SELECT school_code FROM department WHERE dept_name  =  "Accounting" 

eval_err_num:145
extra pred: SELECT c.first_name, c.last_name, SUM(il.unit_price * il.quantity) as total_gross_sales FROM customers as c JOIN invoices as i ON c.id = i.customer_id JOIN invoice_lines as il ON i.id = il.invoice_id GROUP BY c.id ORDER BY total_gross_sales DESC LIMIT 10
extra gold: SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10; 

eval_err_num:146
medium pred: SELECT friend FROM person_friend WHERE name = 'Alice' AND friend IN ( SELECT name FROM person WHERE gender = 'male' AND job = 'doctor' )
medium gold: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor' 

eval_err_num:147
hard pred: SELECT T1.name FROM airports AS T1 JOIN ( SELECT country, COUNT(DISTINCT airline_id) AS home_airlines FROM airports GROUP BY country ORDER BY home_airlines DESC LIMIT 1 ) AS T2 ON T1.country = T2.country
hard gold: SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1 

eval_err_num:148
medium pred: SELECT bed_type, COUNT(*) FROM rooms GROUP BY bed_type
medium gold: SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType; 

eval_err_num:149
medium pred: SELECT first_name, last_name FROM student JOIN voting_record ON student.student_id = voting_record.student_id WHERE age = 18 AND vice_president_vote IS NOT NULL
medium gold: SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18 

eval_err_num:150
extra pred: SELECT song_name FROM files WHERE formats = 'mp3' AND resolution < 1000
extra gold: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  "mp3" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000 

medium pred: SELECT investor_id FROM transactions GROUP BY investor_id HAVING COUNT(*) >= 2
medium gold: SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2 

eval_err_num:151
medium pred: SELECT customer_name FROM customer ORDER BY credit_score ASC LIMIT 1
medium gold: SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1 

eval_err_num:152
hard pred: SELECT name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM assigned_to WHERE project = (SELECT code FROM projects ORDER BY hours DESC LIMIT 1))
hard gold: SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects) 

eval_err_num:153
medium pred: SELECT name FROM instructor WHERE department_name = 'Comp. Sci.' AND salary > 80000
medium gold: SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000 

eval_err_num:154
hard pred: SELECT customer_name FROM customer WHERE account_type = 'saving' AND customer_id IN (SELECT customer_id FROM customer WHERE account_type = 'checking')
hard gold: SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking' 

eval_err_num:155
easy pred: SELECT department_address FROM department WHERE department_name = "history"
easy gold: SELECT dept_address FROM department WHERE dept_name  =  'History' 

eval_err_num:156
hard pred: SELECT institution.name FROM authors JOIN institution ON authors.institution_id = institution.institution_id WHERE authors.first_name = "Katsuhiro" AND authors.last_name = "Ueno"
hard gold: SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  "Katsuhiro" AND t1.lname  =  "Ueno" 

eval_err_num:157
medium pred: SELECT location, COUNT(*) AS num_performances FROM performance GROUP BY location
medium gold: SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION 

eval_err_num:158
hard pred: SELECT name, salary FROM instructor WHERE id IN (SELECT instructor_id FROM advisor WHERE student_id IN (SELECT id FROM student WHERE department_name = 'History'))
hard gold: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History' 

eval_err_num:159
medium pred: SELECT DISTINCT driver_id, nationality FROM lap_times WHERE milliseconds > 100000
medium gold: SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000 

eval_err_num:160
hard pred: SELECT id FROM player WHERE height >= 180 AND overall_rating > 85
hard gold: SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85 

eval_err_num:161
extra pred: SELECT count(*) FROM student WHERE age > 18 AND stuid NOT IN (SELECT stuid FROM has_allergy WHERE allergy_type IN ('food type', 'animal type'))
extra gold: SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  "food" OR T2.allergytype  =  "animal") 

medium pred: SELECT date_order_placed FROM orders WHERE customer_id = (SELECT customer_id FROM customers WHERE customer_name = 'Jeramie')
medium gold: SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = "Jeramie" 

eval_err_num:162
medium pred: SELECT AVG(latitude), AVG(longitude) FROM station WHERE city = 'San Jose'
medium gold: SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  "San Jose" 

eval_err_num:163
extra pred: SELECT room_name, rate, check_in, check_out FROM reservations WHERE rate = (SELECT MAX(rate) FROM reservations)
extra gold: SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1; 

eval_err_num:164
extra pred: SELECT title FROM movie WHERE year > 2000 OR movie_id IN (SELECT movie_id FROM rating WHERE reviewer_id = (SELECT reviewer_id FROM reviewer WHERE name = 'Brittany Harris'))
extra gold: SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000 

eval_err_num:165
medium pred: SELECT cmi_cross_reference_id, master_customer_id, COUNT(*) AS n FROM business_rates GROUP BY cmi_cross_reference_id, master_customer_id
medium gold: SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id 

eval_err_num:166
easy pred: SELECT COUNT(*) FROM (SELECT city, COUNT(*) as num_airports FROM airports GROUP BY city HAVING COUNT(*) > 3) AS T1
easy gold: SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3) 

eval_err_num:167
hard pred: SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM certificate WHERE airline_id = (SELECT airline_id FROM aircraft WHERE name = 'Boeing 737-800'))
hard gold: SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Boeing 737-800" 

eval_err_num:168
medium pred: SELECT student_id FROM student WHERE advisor IN (SELECT faculty_id FROM faculty WHERE rank = 'professor')
medium gold: SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  "Professor" 

eval_err_num:169
extra pred: SELECT m.name, m.trade_name FROM medicine AS m LEFT JOIN medicine_enzyme_interaction AS mei ON m.id = mei.medicine_id LEFT JOIN enzyme AS e ON mei.enzyme_id = e.id WHERE e.product != 'Heme' OR e.id IS NULL;
extra gold: SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX' 

eval_err_num:170
medium pred: SELECT booking_start_date, booking_end_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apartment_id = apartments.apartment_id WHERE apartment_type_code = "Duplex"
medium gold: SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  "Duplex" 

eval_err_num:171
hard pred: SELECT C.club_name FROM club AS C JOIN member_of_club AS M ON C.club_id = M.club_id JOIN student AS S ON M.student_id = S.student_id WHERE S.first_name = "Davis" AND S.last_name = "Steven"
hard gold: SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  "Davis" AND t3.lname  =  "Steven" 

eval_err_num:172
medium pred: SELECT name FROM technician WHERE age IN (36, 37)
medium gold: SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37 

eval_err_num:173
medium pred: SELECT major, COUNT(*) AS number_of_students FROM student GROUP BY major HAVING COUNT(*) BETWEEN 2 AND 30
medium gold: SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30; 

eval_err_num:174
medium pred: SELECT department_name FROM department ORDER BY budget ASC LIMIT 1
medium gold: SELECT dept_name FROM department ORDER BY budget LIMIT 1 

eval_err_num:175
medium pred: SELECT song FROM music_festival WHERE result = "nominated"
medium gold: SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  "Nominated" 

extra pred: SELECT claim_id, count(*) FROM settlements WHERE date_claim_settled = (SELECT max(date_claim_settled) FROM settlements) GROUP BY claim_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1 

extra pred: SELECT individuals.individual_last_name FROM individuals JOIN organization_contact_individuals ON individuals.individual_id = organization_contact_individuals.individual_id JOIN organizations ON organization_contact_individuals.organization_id = organizations.organization_id WHERE organizations.uk_vat_number = (SELECT MAX(uk_vat_number) FROM organizations) ORDER BY organization_contact_individuals.date_contact_from ASC LIMIT 1
extra gold: SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1 

eval_err_num:176
medium pred: SELECT DISTINCT employee_first_name, course_code FROM employee JOIN professor ON employee.employee_number = professor.employee_number JOIN class ON professor.employee_number = class.professor_employee_number JOIN course ON class.course_code = course.course_code;
medium gold: SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num 

medium pred: SELECT problem_id FROM problems WHERE product_id = (SELECT product_id FROM product WHERE product_name = "voluptatem") AND date_problem_reported > '1995-12-31'
medium gold: SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = "voluptatem" AND T1.date_problem_reported > "1995" 

medium pred: SELECT member_name FROM member WHERE party_id != (SELECT party_id FROM party WHERE party_name = "Progress Party")
medium gold: SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != "Progress Party" 

eval_err_num:177
medium pred: SELECT first_name, last_name FROM student JOIN voting_record ON student.student_id = voting_record.student_id WHERE sex = 'female' AND president_vote IS NOT NULL
medium gold: SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  "F" 

eval_err_num:178
medium pred: SELECT name FROM swimmer WHERE result = "win"
medium gold: SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' 

eval_err_num:179
hard pred: SELECT COUNT(*) FROM lives_in JOIN dorm ON lives_in.dorm_id = dorm.dorm_id WHERE dorm.gender = 'M'
hard gold: SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M' 

eval_err_num:180
extra pred: SELECT driver_id, surname FROM drivers WHERE driver_id = ( SELECT driver_id FROM driver_standings GROUP BY driver_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1 

eval_err_num:181
medium pred: SELECT CONCAT(s.first_name, ' ', s.last_name) AS full_name, gc.grade_point FROM enrolled_in AS e JOIN student AS s ON e.student_id = s.student_id JOIN grade_conversion AS gc ON e.grade = gc.letter_grade
medium gold: SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID 

hard pred: SELECT name FROM member WHERE member_id NOT IN (SELECT DISTINCT member_id FROM member_attendance)
hard gold: SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance) 

eval_err_num:182
hard pred: SELECT s.name FROM station s WHERE s.city = 'Palo Alto' AND s.id NOT IN (SELECT t.end_station_id FROM trip t)
hard gold: SELECT name FROM station WHERE city  =  "Palo Alto" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100 

medium pred: SELECT AVG(weeks_on_top) FROM volume WHERE artist_id IN ( SELECT artist_id FROM artist WHERE age <= 25 )
medium gold: SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25 

eval_err_num:183
easy pred: SELECT club_description FROM club WHERE club_name = "Tennis Club"
easy gold: SELECT clubdesc FROM club WHERE clubname  =  "Tennis Club" 

eval_err_num:184
extra pred: SELECT name, distance FROM aircraft WHERE distance > 5000 AND airline_id IN (SELECT airline_id FROM certificate GROUP BY airline_id HAVING COUNT(employee_id) >= 5)
extra gold: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5 

eval_err_num:185
medium pred: SELECT room_name, room_id FROM rooms ORDER BY base_price DESC LIMIT 3
medium gold: SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3; 

eval_err_num:186
easy pred: SELECT injured, COUNT(*) AS num_injuries FROM perpetrator GROUP BY injured ORDER BY num_injuries ASC
easy gold: SELECT Injured FROM perpetrator ORDER BY Injured ASC 

medium pred: SELECT minister FROM party WHERE left_office = (SELECT MAX(left_office) FROM party)
medium gold: SELECT minister FROM party ORDER BY left_office DESC LIMIT 1 

eval_err_num:187
medium pred: SELECT DISTINCT director FROM movie WHERE year IN (1999, 2000)
medium gold: SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000 

eval_err_num:188
extra pred: SELECT circuit_id, location FROM circuits WHERE country IN ('France', 'Belgium')
extra gold: SELECT circuitid ,  LOCATION FROM circuits WHERE country = "France" OR country = "Belgium" 

eval_err_num:189
hard pred: SELECT COUNT(*) FROM csu_fees WHERE campus_fee > (SELECT AVG(campus_fee) FROM csu_fees)
hard gold: SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees) 

eval_err_num:190
hard pred: SELECT forename, surname FROM drivers WHERE driver_id = ( SELECT driver_id FROM lap_times WHERE milliseconds = ( SELECT MIN(milliseconds) FROM lap_times ) )
hard gold: SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1 

eval_err_num:191
hard pred: SELECT DISTINCT first_name FROM student JOIN enrolled_in ON student.student_id = enrolled_in.student_id JOIN grade_conversion ON enrolled_in.grade = grade_conversion.letter_grade WHERE grade_conversion.grade_point >= 3.8
hard gold: SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8 

eval_err_num:192
hard pred: SELECT title, year FROM movie WHERE movie_id IN ( SELECT movie_id FROM rating ORDER BY rating_stars DESC LIMIT 3 )
hard gold: SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3 

easy pred: SELECT AVG(average_attendance) FROM stadium WHERE capacity_percentage > 100
easy gold: SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100 

eval_err_num:193
hard pred: SELECT s.student_first_name, s.student_last_name, c.course_description FROM student s JOIN enroll e ON s.student_num = e.student_number JOIN class cl ON e.class_code = cl.class_code JOIN course c ON cl.course_code = c.course_code
hard gold: SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code 

eval_err_num:194
extra pred: SELECT DISTINCT p3.name FROM person_friend AS p1 JOIN person_friend AS p2 ON p1.friend = p2.name JOIN person AS p3 ON p2.friend = p3.name WHERE p1.name = "Alice"
extra gold: SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice' 

eval_err_num:195
medium pred: SELECT bname, SUM(amount) as total_loan_amount FROM bank JOIN loan ON bank.branch_id = loan.branch_id GROUP BY bname
medium gold: SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname 

eval_err_num:196
medium pred: SELECT city, name, revenue FROM ( SELECT city, name, revenue, RANK() OVER(PARTITION BY city ORDER BY revenue DESC) AS rank FROM manufacturers ) AS ranked WHERE rank = 1
medium gold: SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter 

eval_err_num:197
medium pred: SELECT branch_id, SUM(amount) as total_loan_amount FROM loan GROUP BY branch_id
medium gold: SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname 

medium pred: SELECT card_number FROM member WHERE hometown = 'Kentucky'
medium gold: SELECT card_number FROM member WHERE Hometown LIKE "%Kentucky%" 

eval_err_num:198
extra pred: SELECT s.balance FROM savings s JOIN checking c ON s.customer_id = c.customer_id WHERE c.balance = (SELECT MAX(balance) FROM checking)
extra gold: SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1 

eval_err_num:199
hard pred: SELECT faculty_id FROM faculty_participates_in JOIN student ON faculty_participates_in.activity_id = student.advisor
hard gold: SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student 

eval_err_num:200
medium pred: SELECT AVG(age) AS average_age, MIN(age) AS minimum_age FROM artist WHERE country = 'United States'
medium gold: SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States' 

eval_err_num:201
hard pred: SELECT advisor, count(*) AS student_count FROM student GROUP BY advisor ORDER BY student_count DESC LIMIT 1
hard gold: SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1 

eval_err_num:202
medium pred: SELECT DISTINCT state FROM college JOIN tryout ON college.college_name = tryout.college_name WHERE tryout.player_position = 'striker'
medium gold: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker' 

eval_err_num:203
medium pred: SELECT state, account_type, credit_score FROM customer WHERE number_of_loans = 0
medium gold: SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0 

eval_err_num:204
medium pred: SELECT name, latitude, city FROM station WHERE latitude = (SELECT MIN(latitude) FROM station)
medium gold: SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1 

eval_err_num:205
medium pred: SELECT first_name, last_name FROM teachers
medium gold: SELECT DISTINCT firstname ,  lastname FROM teachers 

eval_err_num:206
easy pred: SELECT department_name FROM departments WHERE department_id IN (SELECT department_id FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id HAVING COUNT(*) > 10)
easy gold: SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10 

eval_err_num:207
hard pred: SELECT card_type_code, COUNT(*) AS num_cards FROM customers_cards GROUP BY card_type_code ORDER BY num_cards DESC LIMIT 1
hard gold: SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:208
medium pred: SELECT day_number, calendar_date FROM reference_calendar
medium gold: SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date 

hard pred: SELECT product_name FROM products WHERE product_id NOT IN (SELECT DISTINCT product_id FROM products_in_events)
hard gold: SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) 

eval_err_num:209
extra pred: SELECT count(*) as settlement_count, claim_id FROM settlements WHERE date_claim_settled = (SELECT max(date_claim_settled) FROM settlements) GROUP BY claim_id
extra gold: SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1 

eval_err_num:210
medium pred: SELECT name FROM wine WHERE price > 50 AND grape_color = 'Red'
medium gold: SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  "Red" AND T2.price  >  50 

eval_err_num:211
easy pred: SELECT flight_number FROM flight WHERE distance > 2000
easy gold: SELECT flno FROM Flight WHERE distance  >  2000 

extra pred: SELECT COUNT(*) FROM visitors WHERE tourist_id NOT IN (SELECT DISTINCT tourist_id FROM visits)
extra gold: SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ) 

eval_err_num:212
hard pred: SELECT label, COUNT(*) AS album_count FROM albums GROUP BY label ORDER BY album_count DESC LIMIT 1
hard gold: SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1 

eval_err_num:213
extra pred: SELECT DISTINCT professor.employee_first_name, professor.professor_office, course.course_description, department.department_name FROM professor JOIN class ON professor.employee_number = class.professor_employee_number JOIN course ON class.course_code = course.course_code JOIN department ON course.department_code = department.department_code
extra gold: SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code 

eval_err_num:214
extra pred: SELECT DISTINCT c.name FROM channel c JOIN broadcast b1 ON c.channel_id = b1.channel_id JOIN broadcast b2 ON c.channel_id = b2.channel_id WHERE b1.time_of_day = 'morning' AND b2.time_of_day = 'night'
extra gold: SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night' 

medium pred: SELECT customer_first_name, customer_last_name, customer_phone FROM customers WHERE customer_id = (SELECT customer_id FROM accounts WHERE account_name = '162')
medium gold: SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  "162" 

eval_err_num:215
hard pred: SELECT SUM(access_count) FROM documents WHERE document_type_code = (SELECT document_type_code FROM documents GROUP BY document_type_code HAVING COUNT(*) = (SELECT MAX(count) FROM (SELECT COUNT(*) AS count FROM documents GROUP BY document_type_code) AS T))
hard gold: SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:216
easy pred: SELECT first_name FROM student WHERE major = 600
easy gold: SELECT Fname FROM Student WHERE Major  =  600 

eval_err_num:217
hard pred: SELECT appelation FROM wines WHERE year > 2008 AND area != 'Central Coast'
hard gold: SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  "Central Coast" 

medium pred: SELECT state_province_county FROM addresses WHERE address_id IN ( SELECT staff_address_id FROM staff GROUP BY staff_address_id HAVING COUNT(*) >= 2 AND COUNT(*) <= 4 )
medium gold: SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4; 

eval_err_num:218
extra pred: SELECT last_name FROM student WHERE (sex = 'F' AND city_code = 'BAL') OR (sex = 'M' AND age < 20)
extra gold: SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20 

eval_err_num:219
extra pred: SELECT country, COUNT(*) AS number_of_airlines FROM airlines GROUP BY country ORDER BY number_of_airlines DESC;
extra gold: SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC 

medium pred: SELECT city.gdp, city.regional_population FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city GROUP BY city.city_id HAVING COUNT(hosting_city.year) > 1
medium gold: SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1 

eval_err_num:220
medium pred: SELECT customer_id, COUNT(*) as card_count FROM customers_cards GROUP BY customer_id
medium gold: SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id 

eval_err_num:221
hard pred: SELECT p.product_name FROM products AS p JOIN reference_colors AS c ON p.color_code = c.color_code JOIN reference_product_categories AS pc ON p.product_category_code = pc.product_category_code WHERE c.color_description = 'white' AND pc.unit_of_measure != 'Handful'
hard gold: SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  "white" AND t2.unit_of_measure != "Handful" 

eval_err_num:222
medium pred: SELECT max(grade_point), min(grade_point) FROM grade_conversion
medium gold: SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION 

eval_err_num:223
hard pred: SELECT team, COUNT(*) AS num_technicians FROM technician GROUP BY team ORDER BY num_technicians DESC LIMIT 1
hard gold: SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1 

easy pred: SELECT state FROM park GROUP BY state HAVING COUNT(park_id) > 2
easy gold: SELECT state FROM park GROUP BY state HAVING count(*)  >  2; 

medium pred: SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1
medium gold: SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1 

eval_err_num:224
hard pred: SELECT professor_first_name, professor_last_name FROM professor WHERE department_code = 'BIO'
hard gold: SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  "Biology" 

eval_err_num:225
extra pred: SELECT circuit_id, location FROM circuits WHERE country = 'France' OR country = 'Belgium'
extra gold: SELECT circuitid ,  LOCATION FROM circuits WHERE country = "France" OR country = "Belgium" 

eval_err_num:226
easy pred: SELECT user_id, count(follower_id) as num_followers FROM follows GROUP BY user_id
easy gold: SELECT count(*) FROM follows GROUP BY f1 

eval_err_num:227
extra pred: SELECT E.employee_first_name, P.professor_office, D.department_name, C.course_description FROM employee AS E JOIN professor AS P ON E.employee_number = P.employee_number JOIN department AS D ON P.department_code = D.department_code JOIN class AS Cl ON P.employee_number = Cl.professor_employee_number JOIN course AS C ON Cl.course_code = C.course_code
extra gold: SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code 

eval_err_num:228
extra pred: SELECT name FROM institution WHERE institution_id = ( SELECT institution_id FROM authorship_count GROUP BY institution_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1 

eval_err_num:229
medium pred: SELECT customer_name, SUM(account_balance) AS total_balance FROM customer WHERE state IN ('Utah', 'Texas') GROUP BY customer_name
medium gold: SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas' 

eval_err_num:230
extra pred: SELECT game_name FROM video_games JOIN plays_games ON video_games.game_id = plays_games.game_id GROUP BY game_name ORDER BY SUM(hours_played) DESC LIMIT 1
extra gold: SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1 

eval_err_num:231
medium pred: SELECT customer_id, COUNT(card_id) as num_cards FROM customers_cards GROUP BY customer_id
medium gold: SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id 

eval_err_num:232
medium pred: SELECT DISTINCT product_id FROM orders WHERE date_order_placed >= '1975-01-01' AND date_order_placed <= '1976-01-01'
medium gold: SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= "1975-01-01" AND T1.date_order_placed <= "1976-01-01" 

eval_err_num:233
hard pred: SELECT s.last_name FROM student AS s JOIN member_of_club AS m ON s.student_id = m.student_id JOIN club AS c ON m.club_id = c.club_id WHERE c.club_name = "Bootup Baltimore"
hard gold: SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  "Bootup Baltimore" 

eval_err_num:234
easy pred: SELECT location_code FROM reference_locations WHERE location_name = "Canada"
easy gold: SELECT location_code FROM Ref_locations WHERE location_name  =  "Canada" 

eval_err_num:235
extra pred: SELECT s.name FROM stadium s JOIN event e ON s.id = e.stadium_id JOIN record r ON e.id = r.event_id GROUP BY s.name HAVING COUNT(DISTINCT r.swimmer_id) = ( SELECT COUNT(DISTINCT r2.swimmer_id) FROM stadium s2 JOIN event e2 ON s2.id = e2.stadium_id JOIN record r2 ON e2.id = r2.event_id GROUP BY s2.name ORDER BY COUNT(DISTINCT r2.swimmer_id) DESC LIMIT 1 )
extra gold: SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:236
easy pred: SELECT first_name FROM student WHERE age > 20
easy gold: SELECT fname FROM student WHERE age  >  20 

eval_err_num:237
extra pred: SELECT driver_id, forename, surname FROM drivers WHERE driver_id IN ( SELECT driver_id FROM pit_stops GROUP BY driver_id HAVING COUNT(*) > 8 OR driver_id IN ( SELECT driver_id FROM races GROUP BY driver_id HAVING COUNT(*) > 5 ) )
extra gold: SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5 

eval_err_num:238
medium pred: SELECT AVG(price) FROM wine WHERE county = 'Sonoma County'
medium gold: SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  "Sonoma" 

eval_err_num:239
medium pred: SELECT name FROM circuits WHERE country IN ('UK', 'Malaysia')
medium gold: SELECT name FROM circuits WHERE country = "UK" OR country = "Malaysia" 

eval_err_num:240
hard pred: SELECT AVG(cost) FROM procedures JOIN trained_in ON procedures.code = trained_in.treatment JOIN physician ON trained_in.physician = physician.employee_id WHERE physician.name = 'John Wen'
hard gold: SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  "John Wen" 

eval_err_num:241
easy pred: SELECT first_name FROM list WHERE class_room = 108
easy gold: SELECT firstname FROM list WHERE classroom  =  108 

eval_err_num:242
hard pred: SELECT student_id FROM student WHERE sex = 'male' AND student_id NOT IN (SELECT student_id FROM sports_info WHERE sport_name = 'football')
hard gold: SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  "Football" 

eval_err_num:243
easy pred: SELECT club_name FROM club WHERE club_location = "AKW";
easy gold: SELECT clubname FROM club WHERE clublocation  =  "AKW" 

eval_err_num:244
extra pred: SELECT first_name, last_name FROM student WHERE student_id = ( SELECT student_id FROM participates_in GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1 

eval_err_num:245
extra pred: SELECT customer_id, CONCAT(customer_first_name, ' ', customer_last_name) AS full_name FROM customers WHERE customer_id = ( SELECT customer_id FROM accounts GROUP BY customer_id HAVING COUNT(*) = ( SELECT MIN(count_accounts) FROM ( SELECT customer_id, COUNT(*) as count_accounts FROM accounts GROUP BY customer_id ) AS subquery ) )
extra gold: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1 

easy pred: SELECT DISTINCT winery FROM wine WHERE price >= 50 AND price <= 100
easy gold: SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100 

eval_err_num:246
hard pred: SELECT budget_type_code, COUNT(*) AS num_documents FROM documents_with_expenses GROUP BY budget_type_code ORDER BY num_documents DESC LIMIT 1
hard gold: SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:247
medium pred: SELECT p.location FROM party AS p JOIN party_host AS ph ON p.party_id = ph.party_id GROUP BY p.party_id, p.location HAVING COUNT(ph.host_id) = (SELECT MAX(host_count) FROM (SELECT COUNT(host_id) AS host_count FROM party_host GROUP BY party_id) AS counts)
medium gold: SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1 

hard pred: SELECT headquarters FROM company WHERE main_industry = 'banking' AND company_id IN ( SELECT company_id FROM company WHERE main_industry = 'Oil and gas' )
hard gold: SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas' 

eval_err_num:248
hard pred: SELECT DISTINCT i.name FROM instructor i JOIN teaches t ON i.id = t.id JOIN course c ON t.course_id = c.course_id WHERE c.title = 'C Programming'
hard gold: SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming' 

eval_err_num:249
easy pred: SELECT AVG(room_count) FROM apartments WHERE apartment_type_code = 'Studio'
easy gold: SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  "Studio" 

eval_err_num:250
medium pred: SELECT semester, year, COUNT(DISTINCT course_id) AS num_courses FROM section GROUP BY semester, year
medium gold: SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR 

eval_err_num:251
hard pred: SELECT last_name, first_name FROM authors JOIN institution ON authors.institution_id = institution.institution_id WHERE institution.name = "Google"
hard gold: SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  "Google" 

eval_err_num:252
medium pred: SELECT first_name, last_name FROM candidates
medium gold: SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id 

medium pred: SELECT document_name, document_date FROM documents WHERE project_id = ( SELECT project_id FROM projects WHERE project_details = 'Graph Database project' )
medium gold: SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project' 

eval_err_num:253
medium pred: SELECT last_name FROM teachers WHERE class_room = 5
medium gold: SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5 

eval_err_num:254
hard pred: SELECT count(*) FROM papers JOIN authorship_count ON authorship_count.paper_id = papers.paper_id JOIN institution ON institution.institution_id = authorship_count.institution_id WHERE institution.name = "University of Pennsylvania"
hard gold: SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  "University of Pennsylvania" 

medium pred: SELECT P.name, E.investor FROM people AS P JOIN entrepreneur AS E ON P.people_id = E.people_id ORDER BY E.money_requested DESC
medium gold: SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested 

medium pred: SELECT MIN(payment_date) FROM payment
medium gold: SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1 

eval_err_num:255
hard pred: SELECT p.name FROM phone p JOIN phone_market pm ON p.phone_id = pm.phone_id JOIN market m ON pm.market_id = m.market_id WHERE m.num_of_shops > 50
hard gold: SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50 

eval_err_num:256
easy pred: SELECT count(*) FROM rating WHERE rating_stars > 3
easy gold: SELECT count(*) FROM Rating WHERE stars  >  3 

eval_err_num:257
extra pred: SELECT customer_first_name, customer_last_name, customer_id FROM customers WHERE customer_id = ( SELECT customer_id FROM accounts GROUP BY customer_id HAVING COUNT(account_id) = ( SELECT MIN(cnt) FROM ( SELECT COUNT(account_id) AS cnt FROM accounts GROUP BY customer_id ) AS subquery ) )
extra gold: SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1 

eval_err_num:258
hard pred: SELECT m.name, p.date FROM member_attendance ma JOIN member m ON ma.member_id = m.member_id JOIN performance p ON ma.performance_id = p.performance_id ORDER BY p.attendance DESC
hard gold: SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC 

hard pred: SELECT first_name, last_name FROM customers WHERE id IN (SELECT customer_id FROM invoices ORDER BY total LIMIT 10)
hard gold: SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10; 

easy pred: SELECT COUNT(DISTINCT claim_stage_id) FROM claims_processing_stages
easy gold: SELECT count(*) FROM claims_processing_stages 

eval_err_num:259
medium pred: SELECT investor_id, COUNT(DISTINCT transaction_id) AS num_transactions FROM transactions GROUP BY investor_id
medium gold: SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id 

eval_err_num:260
medium pred: SELECT time_of_day, COUNT(DISTINCT program_id) AS total_programs FROM broadcast GROUP BY time_of_day
medium gold: SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day 

medium pred: SELECT carrier FROM phone WHERE price = (SELECT MAX(price) FROM phone)
medium gold: SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1 

eval_err_num:261
hard pred: SELECT name, age FROM person WHERE name IN ( SELECT friend FROM person_friend WHERE name = 'Dan' OR name = 'Alice' )
hard gold: SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice' 

eval_err_num:262
easy pred: SELECT gymnast_id, sum(total_points) as total_points FROM gymnast GROUP BY gymnast_id ORDER BY floor_exercise_points DESC
easy gold: SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC 

eval_err_num:263
hard pred: SELECT p.name, d.name FROM physician AS p JOIN affiliated_with AS af ON p.employee_id = af.physician JOIN department AS d ON af.department = d.departmentid
hard gold: SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1 

eval_err_num:264
hard pred: SELECT checking.balance, savings.balance FROM checking JOIN savings ON checking.customer_id = savings.customer_id JOIN accounts ON checking.customer_id = accounts.customer_id WHERE accounts.name = 'Brown'
hard gold: SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown' 

eval_err_num:265
medium pred: SELECT count(*) FROM all_documents WHERE document_type_code IN ('CV', 'BK')
medium gold: SELECT count(*) FROM All_documents WHERE document_type_code  =  "CV" OR document_type_code  =  "BK" 

eval_err_num:266
medium pred: SELECT e.first_name, d.department_name FROM employees e JOIN departments d ON e.department_id = d.department_id
medium gold: SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id 

eval_err_num:267
medium pred: SELECT count(*) FROM teachers WHERE last_name = "NABOZNY" AND first_name = "CHRISSY"
medium gold: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  "CHRISSY" AND T1.lastname  =  "NABOZNY" 

eval_err_num:268
hard pred: SELECT p.title FROM papers p JOIN authorship_count ac ON ac.paper_id = p.paper_id JOIN authors a ON a.author_id = ac.author_id WHERE a.first_name = 'Aaron' AND a.last_name = 'Turon'
hard gold: SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  "Aaron" AND t1.lname  =  "Turon" 

eval_err_num:269
hard pred: SELECT country_name, COUNT(player_id) as player_count FROM player GROUP BY country_name ORDER BY player_count ASC LIMIT 3;
hard gold: SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3; 

eval_err_num:270
medium pred: SELECT p.name, COUNT(DISTINCT a.patient) AS num_patients FROM physician p JOIN appointment a ON p.employee_id = a.physician GROUP BY p.name
medium gold: SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid 

eval_err_num:271
hard pred: SELECT time FROM visits_restaurant WHERE student_id = (SELECT student_id FROM student WHERE last_name = 'Smith' AND first_name = 'Linda') AND restaurant_id = (SELECT restaurant_id FROM restaurant WHERE restaurant_name = 'Subway')
hard gold: SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = "Linda" AND Student.Lname = "Smith" AND Restaurant.ResName = "Subway"; 

medium pred: SELECT project_id, COUNT(document_id) FROM documents GROUP BY project_id
medium gold: SELECT project_id ,  count(*) FROM Documents GROUP BY project_id 

eval_err_num:272
medium pred: SELECT station.id, station.network_name, station.services, count(train.id) AS train_count FROM station LEFT JOIN route ON station.id = route.station_id LEFT JOIN train ON route.train_id = train.id GROUP BY station.id, station.network_name, station.services
medium gold: SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id 

eval_err_num:273
easy pred: SELECT AVG(room_count) FROM apartments WHERE apartment_type_code = 'Studio'
easy gold: SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  "Studio" 

extra pred: SELECT name FROM track WHERE track_id = ( SELECT track_id FROM race GROUP BY track_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1 

extra pred: SELECT Name_First, Name_Last FROM player WHERE player_id IN ( SELECT player_id FROM player_award WHERE year = 1960 INTERSECT SELECT player_id FROM player_award WHERE year = 1961 )
extra gold: SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961 

eval_err_num:274
medium pred: SELECT SUM(room_count) FROM apartments WHERE apartment_id IN ( SELECT apartment_id FROM apartment_facilities WHERE facility_code = "Gym" )
medium gold: SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  "Gym" 

eval_err_num:275
hard pred: SELECT formats, count(*) as file_count FROM files GROUP BY formats ORDER BY file_count DESC LIMIT 1
hard gold: SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1 

medium pred: SELECT time_of_day, count(program_id) FROM broadcast GROUP BY time_of_day
medium gold: SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day 

eval_err_num:276
hard pred: SELECT apartment_type_code, AVG(room_count) as avg_rooms FROM apartments GROUP BY apartment_type_code ORDER BY avg_rooms DESC LIMIT 3
hard gold: SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3 

eval_err_num:277
easy pred: SELECT DISTINCT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employee_id = T2.prep_nurse JOIN undergoes AS T3 ON T2.patient = T3.patient WHERE T2.physician = T3.physician
easy gold: SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID 

medium pred: SELECT sum(amount_payment) FROM customer_payments WHERE customer_id = (SELECT customer_id FROM customers WHERE first_name = 'Carole' AND last_name = 'Bernhard')
medium gold: SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Carole" AND T2.last_name = "Bernhard" 

extra pred: SELECT customer_id, customer_first_name FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customers_cards)
extra gold: SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  "Credit" 

eval_err_num:278
hard pred: SELECT COUNT(DISTINCT restaurant_id) FROM type_of_restaurant WHERE restaurant_type_id IN ( SELECT restaurant_type_id FROM restaurant_type WHERE restaurant_type_name = 'Sandwich' )
hard gold: SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich' 

medium pred: SELECT count(*) FROM accounts WHERE customer_id IN (SELECT customer_id FROM customers WHERE customer_first_name = 'Art' AND customer_last_name = 'Turcotte')
medium gold: SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  "Art" AND T2.customer_last_name  =  "Turcotte" 

extra pred: SELECT policy_type_code FROM available_policies WHERE policy_id IN ( SELECT policy_id FROM customers_policies WHERE customer_id = ( SELECT customer_id FROM customers_policies GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1 ) )
extra gold: SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1) 

eval_err_num:279
hard pred: SELECT campus, SUM(degrees) AS total_degrees FROM degrees JOIN campuses ON degrees.campus = campuses.id WHERE campuses.county = 'Orange' AND degrees.year > 2000 GROUP BY campus
hard gold: SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  "Orange" AND T2.year  >=  2000 GROUP BY T1.campus 

eval_err_num:280
medium pred: SELECT department_name FROM department_locations WHERE department_location = 'Houston'
medium gold: SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston' 

eval_err_num:281
extra pred: SELECT r.region_name FROM region r JOIN affected_region ar ON r.region_id = ar.region_id JOIN storm s ON ar.storm_id = s.storm_id WHERE s.number_deaths = (SELECT MAX(number_deaths) FROM storm)
extra gold: SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1 

medium pred: SELECT MAX(height) FROM people
medium gold: SELECT Age FROM people ORDER BY Height DESC LIMIT 1 

eval_err_num:282
hard pred: SELECT T2.location_name FROM all_documents AS T1 JOIN document_locations AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name = "Robin CV"
hard gold: SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  "Robin CV" 

eval_err_num:283
medium pred: SELECT COUNT(*) FROM instruments AS i JOIN band AS b ON i.bandmate_id = b.id WHERE b.last_name = "Heilo"
medium gold: SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  "Heilo" 

eval_err_num:284
medium pred: SELECT software_platform, COUNT(DISTINCT device_id) AS num_devices FROM device GROUP BY software_platform
medium gold: SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform 

eval_err_num:285
hard pred: SELECT AVG(age) FROM student JOIN member_of_club ON student.student_id = member_of_club.student_id JOIN club ON member_of_club.club_id = club.club_id WHERE club.club_name = "Tennis Club"
hard gold: SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  "Tennis Club" 

eval_err_num:286
extra pred: SELECT address_content FROM addresses WHERE (city = 'East Julianaside' AND state_province_county = 'Texas') OR (city = 'Gleasonmouth' AND state_province_county = 'Arizona')
extra gold: SELECT address_content FROM addresses WHERE city  =  "East Julianaside" AND state_province_county  =  "Texas" UNION SELECT address_content FROM addresses WHERE city  =  "Gleasonmouth" AND state_province_county  =  "Arizona" 

hard pred: SELECT organization_id FROM organizations WHERE organization_id NOT IN (SELECT parent_organization_id FROM organizations)
hard gold: SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations 

easy pred: SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(DISTINCT job_id) >= 2
easy gold: SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2 

eval_err_num:287
medium pred: SELECT count(*) AS number_of_invoices, sum(total) AS invoice_total FROM invoices WHERE billing_state = 'California'
medium gold: SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  "CA"; 

eval_err_num:288
medium pred: SELECT subjects.subject_id, subjects.subject_name, COUNT(courses.course_id) as num_courses FROM subjects LEFT JOIN courses ON subjects.subject_id = courses.subject_id GROUP BY subjects.subject_id, subjects.subject_name
medium gold: SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id 

hard pred: SELECT team FROM elimination WHERE wrestler_id IN ( SELECT wrestler_id FROM elimination WHERE eliminated_by = 'Orton' ) AND wrestler_id IN ( SELECT wrestler_id FROM elimination WHERE eliminated_by = 'Benjamin' )
hard gold: SELECT Team FROM Elimination WHERE Eliminated_By  =  "Orton" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  "Benjamin" 

eval_err_num:289
extra pred: SELECT player.player_name FROM tryout JOIN player ON tryout.player_id = player.player_id JOIN college ON tryout.college_name = college.college_name WHERE college.enrollment = (SELECT MAX(enrollment) FROM college)
extra gold: SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1) 

eval_err_num:290
extra pred: SELECT gender_code, COUNT(*) as count FROM guests GROUP BY gender_code ORDER BY count DESC;
extra gold: SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC 

eval_err_num:291
hard pred: SELECT professor_first_name, professor_office FROM professor WHERE department_code = 'HIS' AND professor_high_degree != 'Ph.D.'
hard gold: SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.' 

eval_err_num:292
extra pred: SELECT instrument FROM instruments JOIN band ON instruments.bandmate_id = band.id JOIN songs ON instruments.song_id = songs.song_id WHERE band.last_name = "Heilo" AND songs.title = "Badlands"
extra gold: SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  "Heilo" AND T3.title  =  "Badlands" 

eval_err_num:293
medium pred: SELECT player, COUNT(DISTINCT years_played) AS years_played_count FROM player GROUP BY player
medium gold: SELECT Player ,  Years_Played FROM player 

extra pred: SELECT document_structure_code FROM documents WHERE access_count = (SELECT MIN(access_count) FROM documents)
extra gold: SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1 

eval_err_num:294
medium pred: SELECT class, COUNT(*) AS num_races FROM race GROUP BY class
medium gold: SELECT CLASS ,  count(*) FROM race GROUP BY CLASS 

eval_err_num:295
extra pred: SELECT name, id FROM station WHERE bikes_available > 14 OR installation_date LIKE '%December%'
extra gold: SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE "12/%" 

eval_err_num:296
extra pred: SELECT statement_id, statement_details FROM statements ORDER BY (SELECT COUNT(*) FROM accounts WHERE accounts.statement_id = statements.statement_id) DESC LIMIT 1
extra gold: SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:297
hard pred: SELECT song_id FROM song WHERE resolution > (SELECT MAX(resolution) FROM song WHERE rating < 8)
hard gold: SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8) 

hard pred: SELECT headquarters FROM company WHERE main_industry = 'banking' AND headquarters IN (SELECT headquarters FROM company WHERE main_industry = 'oil and gas')
hard gold: SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas' 

medium pred: SELECT account_id, account_name FROM accounts WHERE account_id IN (SELECT account_id FROM financial_transactions GROUP BY account_id HAVING COUNT(*) >= 4)
medium gold: SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4 

eval_err_num:298
hard pred: SELECT DISTINCT party FROM party WHERE party_id NOT IN (SELECT party FROM election WHERE delegate IS NOT NULL)
hard gold: SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election) 

eval_err_num:299
medium pred: SELECT a.activity_name, count(fp.faculty_id) FROM activity AS a LEFT JOIN faculty_participates_in AS fp ON a.activity_id = fp.activity_id GROUP BY a.activity_name
medium gold: SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID 

eval_err_num:300
medium pred: SELECT employee_first_name, employee_last_name FROM employee ORDER BY employee_date_of_birth ASC LIMIT 1
medium gold: SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1 

eval_err_num:301
medium pred: SELECT s.author, a.result FROM submission s JOIN acceptance a ON s.submission_id = a.submission_id
medium gold: SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID 

eval_err_num:302
extra pred: SELECT m.name FROM manufacturer m JOIN furniture_manufacte fm1 ON m.manufacturer_id = fm1.manufacturer_id JOIN furniture f1 ON fm1.furniture_id = f1.furniture_id JOIN furniture_manufacte fm2 ON m.manufacturer_id = fm2.manufacturer_id JOIN furniture f2 ON fm2.furniture_id = f2.furniture_id WHERE f1.num_of_component < 6 AND f2.num_of_component > 10
extra gold: SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10 

medium pred: SELECT faculty FROM faculty WHERE campus = (SELECT id FROM campuses WHERE campus = "San Francisco State University") AND year = 2004
medium gold: SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  "San Francisco State University" 

eval_err_num:303
easy pred: SELECT COUNT(*) FROM professor WHERE professor_high_degree = 'Ph.D.'
easy gold: SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' 

eval_err_num:304
medium pred: SELECT AVG(CountSongs) FROM (SELECT COUNT(*) AS CountSongs FROM song WHERE gender = 'Female' GROUP BY artist_name) AS T
medium gold: SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  "Female" 

eval_err_num:305
medium pred: SELECT city, COUNT(*) as number_of_airports FROM airports GROUP BY city HAVING COUNT(*) > 1
medium gold: SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1 

eval_err_num:306
extra pred: SELECT first_name, last_name FROM student WHERE student_id = ( SELECT student_id FROM sports_info GROUP BY student_id ORDER BY count(*) DESC LIMIT 1 )
extra gold: SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT name FROM church JOIN wedding ON church.church_id = wedding.church_id GROUP BY church.church_id HAVING COUNT(wedding.church_id) >= 2
medium gold: SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2 

eval_err_num:307
medium pred: SELECT sex FROM student WHERE first_name = 'Linda' AND last_name = 'Smith'
medium gold: SELECT Sex FROM Student WHERE Fname = "Linda" AND Lname = "Smith"; 

eval_err_num:308
extra pred: SELECT SUM(amount_claimed) FROM claims_documents WHERE created_date = (SELECT MAX(created_date) FROM claims_documents)
extra gold: SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1) 

extra pred: SELECT order_id FROM order_items GROUP BY order_id ORDER BY COUNT(order_item_id) DESC LIMIT 1
extra gold: SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1 

eval_err_num:309
extra pred: SELECT COUNT(*) FROM products JOIN reference_colors ON products.color_code = reference_colors.color_code JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE reference_colors.color_description = 'white' OR characteristics.characteristic_name = 'hot'
extra gold: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  "white" OR t3.characteristic_name  =  "hot" 

eval_err_num:310
extra pred: SELECT MIN(salary) FROM instructor WHERE department_name IN (SELECT department_name FROM instructor GROUP BY department_name HAVING AVG(salary) > (SELECT AVG(salary) FROM instructor))
extra gold: SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor) 

eval_err_num:311
hard pred: SELECT p.location, h.name FROM party p JOIN party_host ph ON p.party_id = ph.party_id JOIN host h ON ph.host_id = h.host_id ORDER BY h.age ASC
hard gold: SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age 

eval_err_num:312
extra pred: SELECT country, count(airline_id) AS num_airlines FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY num_airlines DESC
extra gold: SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1 

eval_err_num:313
extra pred: SELECT professor_first_name FROM professor JOIN class ON professor.employee_number = class.professor_employee_number JOIN course ON class.course_code = course.course_code WHERE course.course_code IN ('CIS-220', 'QM-261')
extra gold: SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261' 

eval_err_num:314
extra pred: SELECT A.amenity_name FROM dorm_amenity AS A JOIN has_amenity AS H ON A.amenity_id = H.amenity_id JOIN dorm AS D ON H.dorm_id = D.dorm_id WHERE D.dorm_name = 'Smith Hall' ORDER BY A.amenity_name
extra gold: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name 

eval_err_num:315
easy pred: SELECT DISTINCT T1.city_code, T2.Name FROM student AS T1 JOIN city AS T2 ON T1.city_code = T2.Code
easy gold: SELECT DISTINCT city_code FROM Student 

extra pred: SELECT date_claim_made, claim_id FROM claims WHERE claim_id IN ( SELECT claim_id FROM settlements GROUP BY claim_id HAVING COUNT(settlement_id) > 2 OR amount_claimed = ( SELECT MAX(amount_claimed) FROM claims ) )
extra gold: SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims ) 

eval_err_num:316
medium pred: SELECT destination, COUNT(*) AS num_of_flights FROM flight GROUP BY destination
medium gold: SELECT destination ,  count(*) FROM Flight GROUP BY destination 

extra pred: SELECT name FROM person WHERE age > (SELECT max(age) FROM person WHERE job = 'engineer') ORDER BY age DESC
extra gold: SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age 

easy pred: SELECT MAX(max_page_size) FROM product WHERE product_id IN (SELECT product_id FROM store_product GROUP BY product_id HAVING COUNT(*) > 3)
easy gold: SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3 

medium pred: SELECT name FROM wine ORDER BY score DESC LIMIT 1
medium gold: SELECT Name FROM WINE ORDER BY Score LIMIT 1 

eval_err_num:317
medium pred: SELECT weight FROM entrepreneur ORDER BY money_requested DESC
medium gold: SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC 

easy pred: SELECT title, credits FROM course ORDER BY title, credits ASC
easy gold: SELECT title FROM course ORDER BY title ,  credits 

eval_err_num:318
hard pred: SELECT DISTINCT first_name FROM student WHERE student_id IN ( SELECT student_id FROM voting_record WHERE vice_president_vote IS NOT NULL ) AND city_code != 'PIT'
hard gold: SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  "PIT" 

eval_err_num:319
medium pred: SELECT count(*) FROM project_staff WHERE (role_code = 'leader' OR date_from < '1989-04-24 23:51:54')
medium gold: SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54' 

eval_err_num:320
medium pred: SELECT yearid, COUNT(player_id) AS num_players FROM hall_of_fame WHERE inducted = 'Y' GROUP BY yearid
medium gold: SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid; 

eval_err_num:321
extra pred: SELECT team_id, team_name FROM team ORDER BY (SELECT AVG(salary) FROM salary WHERE team.team_id = salary.team_id) ASC LIMIT 1
extra gold: SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1; 

eval_err_num:322
medium pred: SELECT song_id FROM song ORDER BY duration DESC LIMIT 1
medium gold: SELECT f_id FROM files ORDER BY duration DESC LIMIT 1 

medium pred: SELECT gdp FROM city WHERE regional_population = (SELECT MAX(regional_population) FROM city)
medium gold: SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1 

medium pred: SELECT title, MAX(price) FROM film JOIN schedule ON film.film_id = schedule.film_id GROUP BY title
medium gold: SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id 

medium pred: SELECT station.name FROM station JOIN train_station ON station.station_id = train_station.station_id GROUP BY station.name HAVING COUNT(train_station.train_id) >= 2
medium gold: SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2 

eval_err_num:323
medium pred: SELECT patient FROM undergoes WHERE date_undergoes = (SELECT MAX(date_undergoes) FROM undergoes)
medium gold: SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1 

eval_err_num:324
extra pred: SELECT name FROM station WHERE bikes_available > 10 AND city <> "San Jose"
extra gold: SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  "San Jose" 

eval_err_num:325
medium pred: SELECT card_type_code, COUNT(*) as transaction_count FROM customers_cards GROUP BY card_type_code
medium gold: SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code 

eval_err_num:326
medium pred: SELECT a.name, count(f.flight_number) FROM aircraft AS a JOIN flight AS f ON a.airline_id = f.airline_id GROUP BY a.name
medium gold: SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid 

eval_err_num:327
medium pred: SELECT COUNT(*) FROM voting_record WHERE sex = 'M' AND election_cycle = 'fall' AND class_senator_vote IS NOT NULL
medium gold: SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  "M" AND T2.Election_Cycle  =  "Fall" 

eval_err_num:328
medium pred: SELECT first_name, last_name FROM authors ORDER BY last_name ASC
medium gold: SELECT fname ,  lname FROM authors ORDER BY lname 

eval_err_num:329
medium pred: SELECT grape, COUNT(*) AS wine_count FROM wine GROUP BY grape
medium gold: SELECT count(*) ,  Grape FROM WINE GROUP BY Grape 

eval_err_num:330
medium pred: SELECT count(*) FROM routes WHERE destination_airport = 'John F Kennedy International Airport'
medium gold: SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport' 

eval_err_num:331
hard pred: SELECT COUNT(*) FROM member_of_club AS moc JOIN student AS s ON moc.student_id = s.student_id JOIN club AS c ON moc.club_id = c.club_id WHERE s.first_name = "Linda" AND s.last_name = "Smith"
hard gold: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  "Linda" AND t3.lname  =  "Smith" 

eval_err_num:332
medium pred: SELECT name FROM musical GROUP BY name HAVING COUNT(DISTINCT actor_id) >= 3
medium gold: SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3 

eval_err_num:333
medium pred: SELECT election.delegate, county.county_name FROM election JOIN county ON election.county_id = county.county_id
medium gold: SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District 

eval_err_num:334
extra pred: SELECT first_name, last_name FROM faculty WHERE faculty_id IN ( SELECT faculty_id FROM faculty_participates_in GROUP BY faculty_id HAVING COUNT(*) = ( SELECT MAX(cnt) FROM ( SELECT COUNT(*) AS cnt FROM faculty_participates_in GROUP BY faculty_id ) AS counts ) )
extra gold: SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1 

eval_err_num:335
easy pred: SELECT minister FROM party WHERE party_name <> "Progress Party"
easy gold: SELECT minister FROM party WHERE party_name != 'Progress Party' 

eval_err_num:336
medium pred: SELECT b.cmi_cross_reference_id, b.source_system_code FROM benefits_overpayments bo JOIN cmi_cross_references b ON bo.cmi_cross_ref_id = b.cmi_cross_reference_id ORDER BY bo.council_tax_id
medium gold: SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id 

eval_err_num:337
extra pred: SELECT customer_name FROM customer WHERE customer_id IN (SELECT customer_id FROM loan WHERE loan_type = 'Mortgages') AND customer_id IN (SELECT customer_id FROM loan WHERE loan_type = 'Auto')
extra gold: SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto' 

eval_err_num:338
medium pred: SELECT time FROM elimination INNER JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id WHERE CAST(wrestler.days_held AS integer) > 50
medium gold: SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50 

eval_err_num:339
hard pred: SELECT rank FROM faculty GROUP BY rank HAVING COUNT(*) = ( SELECT MIN(count) FROM ( SELECT COUNT(*) AS count FROM faculty GROUP BY rank ) AS temp )
hard gold: SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1 

eval_err_num:340
hard pred: SELECT c.course_name, COUNT(scr.student_id) AS registered_students FROM courses c INNER JOIN student_course_registrations scr ON c.course_id = scr.course_id GROUP BY c.course_name
hard gold: SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id 

eval_err_num:341
extra pred: SELECT p1.age FROM person AS p1 JOIN person_friend AS pf ON p1.name = pf.friend JOIN person AS p2 ON pf.name = p2.name WHERE p2.name = "Zach" ORDER BY pf.year DESC LIMIT 1
extra gold: SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach') 

eval_err_num:342
hard pred: SELECT count(*) FROM professor WHERE department_code = 'Accounting' OR department_code = 'Biology'
hard gold: SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology' 

eval_err_num:343
medium pred: SELECT CONCAT(customer_first_name, ' ', customer_last_name) AS full_name FROM customers WHERE customer_id IN (SELECT DISTINCT customer_id FROM accounts)
medium gold: SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id 

hard pred: SELECT phone_number FROM staff UNION SELECT phone_number FROM customers
hard gold: SELECT phone_number FROM customers UNION SELECT phone_number FROM staff 

medium pred: SELECT hardware_model_name FROM phone WHERE company_name = "Nokia Corporation" AND screen_mode NOT IN (SELECT graphics_mode FROM screen_mode WHERE type = "Text")
medium gold: SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  "Nokia Corporation" AND T1.Type != "Text"; 

eval_err_num:344
extra pred: SELECT sr.role_description, ps.staff_id FROM staff_roles sr JOIN project_staff ps ON sr.role_code = ps.role_code JOIN project_outcomes po ON ps.project_id = po.project_id GROUP BY sr.role_description, ps.staff_id HAVING COUNT(po.outcome_code) = (SELECT MAX(outcome_count) FROM (SELECT ps.staff_id, COUNT(po.outcome_code) AS outcome_count FROM project_staff ps JOIN project_outcomes po ON ps.project_id = po.project_id GROUP BY ps.staff_id) AS count_outcomes)
extra gold: SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1 

hard pred: SELECT DISTINCT college FROM submission WHERE author IN (SELECT author FROM submission WHERE scores > 90) AND author IN (SELECT author FROM submission WHERE scores < 80)
hard gold: SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80 

eval_err_num:345
easy pred: SELECT * FROM college ORDER BY enrollment ASC
easy gold: SELECT * FROM College ORDER BY enr 

medium pred: SELECT visit_date, visit_details FROM visits WHERE tourist_id = (SELECT tourist_id FROM visitors WHERE tourist_details = 'Vincent')
medium gold: SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  "Vincent" 

eval_err_num:346
medium pred: SELECT type FROM vocals WHERE song_id = (SELECT song_id FROM songs WHERE title = "Le Pop")
medium gold: SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  "Le Pop" 

eval_err_num:347
easy pred: SELECT count(*) FROM Students
easy gold: SELECT count(*) FROM list 

medium pred: SELECT COUNT(*) FROM enroll WHERE class_code = 'ACCT-211'
medium gold: SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211' 

eval_err_num:348
medium pred: SELECT COUNT(*) FROM project_staff WHERE (role_code = 'leader' OR date_from < '1989-04-24 23:51:54')
medium gold: SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54' 

hard pred: SELECT product_id FROM invoice_items GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:349
hard pred: SELECT last_name FROM customer WHERE customer_id NOT IN (SELECT customer_id FROM invoice WHERE total > 20)
hard gold: SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20 

eval_err_num:350
medium pred: SELECT MIN(seating) AS minimum_seating, MAX(seating) AS maximum_seating, AVG(seating) AS average_seating FROM track
medium gold: SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track 

eval_err_num:351
medium pred: SELECT T1.store_phone, T2.customer_email_address FROM drama_workshop_groups AS T1 JOIN performers AS T2 ON T1.workshop_group_id = T2.workshop_group_id JOIN bookings_services AS T3 ON T1.workshop_group_id = T3.workshop_group_id
medium gold: SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID 

eval_err_num:352
medium pred: SELECT COUNT(DISTINCT c.official_native_language) FROM country c JOIN match_season ms ON c.country_id = ms.country JOIN player p ON ms.player = p.player_id WHERE ms.position = "Defender"
medium gold: SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  "Defender" 

eval_err_num:353
medium pred: SELECT c.course_name FROM courses c INNER JOIN student_course_enrolment sce ON c.course_id = sce.course_id GROUP BY c.course_name HAVING COUNT(sce.registration_id) = 1
medium gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1 

eval_err_num:354
medium pred: SELECT AVG(training_hours) FROM player JOIN tryout ON player.player_id = tryout.player_id WHERE decision = 'no'
medium gold: SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no' 

eval_err_num:355
medium pred: SELECT u.name, AVG(r.rating) as avg_rating FROM useracct u JOIN review r ON u.user_id = r.user_id GROUP BY u.name
medium gold: SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id 

eval_err_num:356
hard pred: SELECT airports.name, COUNT(routes.route_id) as num_routes FROM airports LEFT JOIN routes ON airports.airport_id = routes.source_airport_id GROUP BY airports.name ORDER BY num_routes DESC
hard gold: SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC 

eval_err_num:357
hard pred: SELECT policy_type_code, COUNT(*) AS frequency FROM policies GROUP BY policy_type_code ORDER BY frequency DESC LIMIT 1
hard gold: SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1 

hard pred: SELECT submission_id FROM acceptance WHERE result = "highest score"
hard gold: SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1 

medium pred: SELECT DISTINCT host_city FROM hosting_city WHERE year > 2010
medium gold: SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010 

eval_err_num:358
medium pred: SELECT city_id FROM hosting_city WHERE year = (SELECT MAX(year) FROM hosting_city)
medium gold: SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1 

extra pred: SELECT DISTINCT country_name FROM country WHERE country_id IN ( SELECT country FROM match_season WHERE position = 'Forward' OR position = 'Defender' )
extra gold: SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  "Forward" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  "Defender" 

eval_err_num:359
extra pred: SELECT name, average_attendance, total_attendance FROM stadium WHERE id NOT IN (SELECT stadium_id FROM injury_accident)
extra gold: SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id 

medium pred: SELECT state_province_county FROM addresses WHERE line_1_number_building = '6862 Kaitlyn Knolls'
medium gold: SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE "%6862 Kaitlyn Knolls%" 

eval_err_num:360
medium pred: SELECT MIN(seating) AS minimum_seating, MAX(seating) AS maximum_seating, AVG(seating) AS average_seating FROM track
medium gold: SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track 

eval_err_num:361
hard pred: SELECT Name FROM student WHERE id NOT IN (SELECT id FROM takes_classes WHERE department_name = 'Biology')
hard gold: SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology') 

eval_err_num:362
medium pred: SELECT COUNT(*) AS num_routes, a.name AS airport_name FROM routes AS r JOIN airports AS a ON r.source_airport_id = a.airport_id GROUP BY r.source_airport_id, a.name
medium gold: SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name 

eval_err_num:363
hard pred: SELECT nominee, COUNT(musical_id) as num_nominations FROM musical GROUP BY nominee ORDER BY num_nominations DESC LIMIT 1
hard gold: SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:364
hard pred: SELECT DISTINCT r.region_name FROM region r JOIN affected_region ar ON r.region_id = ar.region_id JOIN storm s ON ar.storm_id = s.storm_id WHERE s.number_deaths >= 10
hard gold: SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10 

medium pred: SELECT name FROM playlists WHERE id IN (SELECT playlist_id FROM playlist_tracks GROUP BY playlist_id HAVING COUNT(track_id) > 100)
medium gold: SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100; 

eval_err_num:365
hard pred: SELECT r.name, r.year FROM races AS r JOIN results AS res ON r.race_id = res.race_id JOIN drivers AS d ON res.driver_id = d.driver_id WHERE d.forename = 'Lewis'
hard gold: SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = "Lewis" 

eval_err_num:366
easy pred: SELECT DISTINCT allergy_name FROM allergy_type
easy gold: SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  "food" 

hard pred: SELECT customer_details FROM customers WHERE customer_id NOT IN(SELECT customer_id FROM policies)
hard gold: SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id 

medium pred: SELECT course_name FROM courses WHERE author_id IN (SELECT author_id FROM course_authors_and_tutors WHERE personal_name = "Julio")
medium gold: SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  "Julio" 

eval_err_num:367
hard pred: SELECT T1.Name FROM country AS T1 JOIN player AS T2 ON T1.Code = T2.birth_country GROUP BY T1.Name ORDER BY COUNT(*) ASC LIMIT 3
hard gold: SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3; 

hard pred: SELECT * FROM albums WHERE title LIKE 'A%' ORDER BY title ASC
hard gold: SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title; 

easy pred: SELECT attribute_data_type FROM attribute_definitions GROUP BY attribute_data_type HAVING COUNT(attribute_id) > 3
easy gold: SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3 

eval_err_num:368
extra pred: SELECT denomination FROM school WHERE school_id IN (SELECT school_id FROM player GROUP BY school_id HAVING COUNT(*) = (SELECT MAX(count_players) FROM (SELECT school_id, COUNT(*) AS count_players FROM player GROUP BY school_id) AS players_counts))
extra gold: SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:369
hard pred: SELECT COUNT(*) FROM member_of_club JOIN student ON member_of_club.student_id = student.student_id JOIN club ON member_of_club.club_id = club.club_id WHERE student.first_name = 'Tracy' AND student.last_name = 'Kim'
hard gold: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  "Tracy" AND t3.lname  =  "Kim" 

eval_err_num:370
easy pred: SELECT * FROM employees WHERE department_id IS NULL
easy gold: SELECT * FROM employees WHERE department_id  =  "null" 

extra pred: SELECT invoice_number, invoice_date FROM invoices WHERE invoice_number = ( SELECT invoice_number FROM financial_transactions GROUP BY invoice_number ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1 

eval_err_num:371
hard pred: SELECT instrument, COUNT(*) AS instrument_count FROM instruments GROUP BY instrument ORDER BY instrument_count DESC LIMIT 1
hard gold: SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1 

eval_err_num:372
medium pred: SELECT city_code, COUNT(*) AS number_of_students FROM student GROUP BY city_code HAVING COUNT(*) > 1
medium gold: SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1 

eval_err_num:373
extra pred: SELECT name FROM person WHERE name IN (SELECT name FROM person_friend WHERE friend IN (SELECT name FROM person WHERE age > 40 AND age < 30))
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30) 

eval_err_num:374
hard pred: SELECT forename, surname FROM drivers WHERE driver_id IN (SELECT driver_id FROM lap_times WHERE milliseconds = (SELECT MIN(milliseconds) FROM lap_times))
hard gold: SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1 

eval_err_num:375
medium pred: SELECT candidate_id FROM candidates WHERE email_address = "stanley.monahan@example.org"
medium gold: SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = "stanley.monahan@example.org" 

eval_err_num:376
hard pred: SELECT name FROM tourist_attractions WHERE how_to_get_there = 'bus' OR address = '254 Ottilie Junction'
hard gold: SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  "254 Ottilie Junction" OR T2.How_to_Get_There  =  "bus" 

easy pred: SELECT title FROM albums WHERE year = 2010
easy gold: SELECT * FROM Albums WHERE YEAR  =  2010 

eval_err_num:377
medium pred: SELECT MIN(order_quantity) as minimum_quantity, AVG(order_quantity) as average_quantity, MAX(order_quantity) as maximum_quantity FROM invoices
medium gold: SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES 

eval_err_num:378
hard pred: SELECT status, COUNT(*) AS count FROM roller_coaster GROUP BY status ORDER BY count DESC LIMIT 1
hard gold: SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:379
extra pred: SELECT c.balance FROM checking c JOIN savings s ON c.customer_id = s.customer_id WHERE s.balance > (SELECT AVG(balance) FROM savings)
extra gold: SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings)) 

eval_err_num:380
extra pred: SELECT first_name, last_name FROM player WHERE weight > 220 OR height < 75
extra gold: SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75 

medium pred: SELECT problem_id FROM problems WHERE reported_by_staff_id IN (SELECT staff_id FROM staff WHERE staff_last_name = "Bosco")
medium gold: SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = "Bosco" 

eval_err_num:381
extra pred: SELECT department_name, budget FROM department WHERE budget > (SELECT AVG(budget) FROM department)
extra gold: SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department) 

eval_err_num:382
extra pred: SELECT MIN(salary) FROM instructor WHERE department_name IN (SELECT department_name FROM instructor GROUP BY department_name HAVING AVG(salary) > (SELECT AVG(salary) FROM instructor))
extra gold: SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor) 

eval_err_num:383
medium pred: SELECT p.name FROM patient p JOIN undergoes u ON p.ssn = u.patient WHERE u.date_undergoes = (SELECT MAX(date_undergoes) FROM undergoes)
medium gold: SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1 

eval_err_num:384
extra pred: SELECT apartment_type_code, COUNT(*) as num_apartments FROM apartments GROUP BY apartment_type_code ORDER BY num_apartments ASC
extra gold: SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC 

eval_err_num:385
medium pred: SELECT product_name FROM products JOIN reference_colors ON products.color_code = reference_colors.color_code WHERE reference_colors.color_description = 'yellow'
medium gold: SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow' 

eval_err_num:386
extra pred: SELECT instrument FROM instruments WHERE song_id = (SELECT song_id FROM songs WHERE title = "Badlands") AND bandmate_id = (SELECT id FROM band WHERE last_name = "Heilo")
extra gold: SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  "Heilo" AND T3.title  =  "Badlands" 

eval_err_num:387
easy pred: SELECT AVG(age) FROM gymnast
easy gold: SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID 

eval_err_num:388
hard pred: SELECT result, COUNT(result) AS frequency FROM music_festival GROUP BY result ORDER BY frequency DESC LIMIT 1
hard gold: SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:389
extra pred: SELECT media_type.name, COUNT(*) AS count FROM track JOIN media_type ON track.media_type_id = media_type.media_type_id GROUP BY media_type.name ORDER BY count ASC LIMIT 1
extra gold: SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1 

eval_err_num:390
hard pred: SELECT s.title FROM songs AS s JOIN track_lists AS t ON s.song_id = t.song_id JOIN albums AS a ON t.album_id = a.aid WHERE a.title = "A Kiss Before You Go: Live in Hamburg"
hard gold: SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  "A Kiss Before You Go: Live in Hamburg" 

eval_err_num:391
hard pred: SELECT document_id, COUNT(*) AS draft_copies_count FROM draft_copies GROUP BY document_id ORDER BY draft_copies_count DESC LIMIT 1
hard gold: SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1; 

eval_err_num:392
hard pred: SELECT campus, SUM(degrees) AS total_degrees FROM degrees GROUP BY campus ORDER BY total_degrees DESC LIMIT 1
hard gold: SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1 

eval_err_num:393
extra pred: SELECT COUNT(*) FROM products JOIN reference_colors ON products.color_code = reference_colors.color_code JOIN characteristics ON products.product_id = product_characteristics.product_id WHERE reference_colors.color_description = 'red' AND characteristics.characteristic_name = 'slow'
extra gold: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  "red" AND t3.characteristic_name  =  "slow" 

eval_err_num:394
extra pred: SELECT C.club_name FROM club AS C INNER JOIN member_of_club AS M ON C.club_id = M.club_id INNER JOIN student AS S ON M.student_id = S.student_id WHERE S.major = '600' GROUP BY C.club_name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  "600" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1 

eval_err_num:395
extra pred: SELECT name FROM accounts WHERE customer_id IN (SELECT customer_id FROM checking WHERE balance < (SELECT AVG(balance) FROM checking))
extra gold: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking) 

eval_err_num:396
extra pred: SELECT name FROM airlines INNER JOIN routes ON airlines.airline_id = routes.airline_id GROUP BY name ORDER BY COUNT(*) DESC LIMIT 10
extra gold: SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10 

eval_err_num:397
medium pred: SELECT m.name, COUNT(DISTINCT a.actor_id) FROM musical m JOIN actor a ON m.musical_id = a.musical_id GROUP BY m.name
medium gold: SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID 

hard pred: SELECT address_line_1 FROM course_authors_and_tutors WHERE author_id IN ( SELECT author_id FROM courses WHERE subject_id IN ( SELECT subject_id FROM subjects WHERE subject_name = 'operating system' OR subject_name = 'data structure' ) )
hard gold: SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  "operating system" OR T2.course_name  =  "data structure" 

eval_err_num:398
medium pred: SELECT T1.store_phone, T1.store_email_address FROM drama_workshop_groups AS T1 JOIN performers_in_bookings AS T2 ON T1.workshop_group_id = T2.performer_id JOIN bookings_services AS T3 ON T2.order_id = T3.order_id WHERE T3.product_id IN (SELECT product_id FROM services)
medium gold: SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID 

eval_err_num:399
medium pred: SELECT count(*) FROM routes WHERE destination_airport_id IN (SELECT airport_id FROM airports WHERE country = 'Italy')
medium gold: SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy' 

hard pred: SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region GROUP BY storm_id HAVING COUNT(DISTINCT region_id) >= 2)
hard gold: SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 

easy pred: SELECT COUNT(*) FROM college
easy gold: SELECT sum(enr) FROM College 

eval_err_num:400
hard pred: SELECT type, COUNT(*) AS frequency FROM vocals GROUP BY type ORDER BY frequency DESC LIMIT 1
hard gold: SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1 

medium pred: SELECT yearid, COUNT(player_id) FROM hall_of_fame WHERE inducted = 'Y' GROUP BY yearid
medium gold: SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid; 

eval_err_num:401
hard pred: SELECT r.name, m.title FROM reviewer r JOIN rating ra ON r.reviewer_id = ra.reviewer_id JOIN movie m ON ra.movie_id = m.movie_id
hard gold: SELECT name FROM Reviewer UNION SELECT title FROM Movie 

eval_err_num:402
medium pred: SELECT party, count(*) as num_of_drivers FROM driver GROUP BY party
medium gold: SELECT party ,  count(*) FROM driver GROUP BY party 

eval_err_num:403
easy pred: SELECT budget_type_description FROM reference_budget_codes WHERE budget_type_code = 'ORG'
easy gold: SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  "ORG" 

eval_err_num:404
extra pred: SELECT c.customer_name FROM customers c JOIN customer_orders co ON c.customer_id = co.customer_id JOIN order_items oi ON co.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE p.product_details = 'Latte' AND c.customer_id IN (SELECT c2.customer_id FROM customers c2 JOIN customer_orders co2 ON c2.customer_id = co2.customer_id JOIN order_items oi2 ON co2.order_id = oi2.order_id JOIN products p2 ON oi2.product_id = p2.product_id WHERE p2.product_details = 'Americano')
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano' 

medium pred: SELECT name, open_year FROM manufacturer WHERE num_of_shops = (SELECT MAX(num_of_shops) FROM manufacturer)
medium gold: SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1 

easy pred: SELECT customer_phone FROM customers_policies JOIN available_policies ON customers_policies.policy_id = available_policies.policy_id WHERE policy_type_code = "Life Insurance"
easy gold: SELECT customer_phone FROM available_policies WHERE policy_type_code  =  "Life Insurance" 

easy pred: SELECT location_code FROM document_locations GROUP BY location_code HAVING COUNT(document_id) >= 3
easy gold: SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3 

extra pred: SELECT B.name FROM browser AS B JOIN accelerator_compatible_browser AS ACB ON B.id = ACB.browser_id JOIN web_client_accelerator AS WCA ON ACB.accelerator_id = WCA.id WHERE WCA.name = 'CACHEbox' AND B.name = 'Fasterfox';
extra gold: SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox' 

eval_err_num:405
medium pred: SELECT p.product_name, p.typical_buying_price, p.typical_selling_price FROM products p JOIN reference_colors c ON p.color_code = c.color_code WHERE c.color_description = 'yellow'
medium gold: SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  "yellow" 

eval_err_num:406
extra pred: SELECT name FROM scientists JOIN assigned_to ON scientists.ssn = assigned_to.scientist JOIN projects ON assigned_to.project = projects.code WHERE projects.name = 'Matter of Time' OR projects.name = 'A Puzzling Pattern'
extra gold: SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax' 

medium pred: SELECT issue_date FROM volume WHERE weeks_on_top = (SELECT MIN(weeks_on_top) FROM volume)
medium gold: SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1 

eval_err_num:407
extra pred: SELECT pf2.friend FROM person_friend AS pf1 JOIN person_friend AS pf2 ON pf1.friend = pf2.name WHERE pf1.name = 'Alice'
extra gold: SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice' 

eval_err_num:408
hard pred: SELECT MAX(training_hours) FROM player WHERE training_hours > 1000 GROUP BY player_position
hard gold: SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos 

eval_err_num:409
extra pred: SELECT r.name, AVG(r.fastest_lap_speed) AS average_fastest_lap_speed FROM races AS r WHERE r.year > 2004 GROUP BY r.name ORDER BY r.year;
extra gold: SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year 

eval_err_num:410
medium pred: SELECT student_id, COUNT(*) AS registered_courses FROM student_course_registrations GROUP BY student_id
medium gold: SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id 

eval_err_num:411
hard pred: SELECT staff_name, staff_gender FROM staff_department_assignments WHERE date_assigned_from >= '2016-01-01' AND date_assigned_from <= '2016-12-31'
hard gold: SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE "2016%" 

hard pred: SELECT zip_code FROM weather GROUP BY zip_code ORDER BY mean_sea_level_pressure_inches ASC LIMIT 1
hard gold: SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1 

medium pred: SELECT COUNT(*) FROM documents WHERE shipping_agent_code = 'USPS'
medium gold: SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS"; 

eval_err_num:412
extra pred: SELECT test_result, count(DISTINCT student_id) FROM student_tests_taken GROUP BY test_result
extra gold: SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC 

eval_err_num:413
medium pred: SELECT builder, COUNT(DISTINCT railway_id) AS num_railways FROM railway GROUP BY builder
medium gold: SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder 

medium pred: SELECT employee_name FROM employees WHERE role_code = 'Editor'
medium gold: SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  "Editor" 

eval_err_num:414
hard pred: SELECT rent_arrears.council_tax_id FROM rent_arrears JOIN cmi_cross_references ON rent_arrears.cmi_cross_reference_id = cmi_cross_references.cmi_cross_reference_id JOIN customer_master_index ON cmi_cross_references.master_customer_id = customer_master_index.master_customer_id WHERE customer_master_index.cmi_details != 'Schmidt, Kertzmann and Lubowitz'
hard gold: SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz' 

eval_err_num:415
medium pred: SELECT customer_first_name || ' ' || customer_middle_initial || ' ' || customer_last_name AS full_name FROM customers WHERE account_name = '900';
medium gold: SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  "900" 

eval_err_num:416
hard pred: SELECT P.product FROM product P JOIN store_product SP ON P.product_id = SP.product_id JOIN store S ON SP.store_id = S.store_id WHERE S.store_name = "Miramichi"
hard gold: SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  "Miramichi" 

eval_err_num:417
extra pred: SELECT P.name, S.name FROM projects AS P JOIN assigned_to AS A ON P.code = A.project JOIN scientists AS S ON A.scientist = S.ssn WHERE P.hours = (SELECT MIN(hours) FROM projects)
extra gold: SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects) 

eval_err_num:418
medium pred: SELECT star_rating_code, AVG(price_range) AS average_price FROM hotels GROUP BY star_rating_code
medium gold: SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code 

eval_err_num:419
medium pred: SELECT DISTINCT E.name FROM editor E JOIN journal_committee JC ON E.editor_id = JC.editor_id GROUP BY E.editor_id HAVING COUNT(DISTINCT JC.journal_id) >= 2
medium gold: SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2 

eval_err_num:420
hard pred: SELECT DISTINCT first_name FROM student JOIN voting_record ON student.student_id = voting_record.student_id WHERE vice_president_vote IS NOT NULL AND city_code != 'PIT'
hard gold: SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  "PIT" 

eval_err_num:421
medium pred: SELECT product_name FROM products_for_hire WHERE availability = 1
medium gold: SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1 

medium pred: SELECT customer_first_name, customer_id FROM customers WHERE customer_id IN (SELECT customer_id FROM accounts GROUP BY customer_id HAVING COUNT(*) >= 2)
medium gold: SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 

eval_err_num:422
extra pred: SELECT s.name FROM station s JOIN train_station ts ON s.station_id = ts.station_id JOIN train t ON ts.train_id = t.train_id WHERE t.name = 'Ananthapuri Express' AND s.name IN ( SELECT s.name FROM station s JOIN train_station ts ON s.station_id = ts.station_id JOIN train t ON ts.train_id = t.train_id WHERE t.name = 'Guruvayur Express' )
extra gold: SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  "Ananthapuri Express" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  "Guruvayur Express" 

eval_err_num:423
easy pred: SELECT * FROM major
easy gold: SELECT DISTINCT Major FROM Student 

extra pred: SELECT pixels FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE phone.accreditation_type = 'full' AND phone.accreditation_type = 'Provisional'
extra gold: SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full' 

eval_err_num:424
medium pred: SELECT count(DISTINCT city) FROM airports WHERE country = 'United States' GROUP BY city HAVING count(distinct airport_id) > 3
medium gold: SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3 

hard pred: SELECT year FROM festival_detail WHERE location = 'United States' AND year IN (SELECT year FROM festival_detail WHERE location != 'United States')
hard gold: SELECT YEAR FROM festival_detail WHERE LOCATION  =  'United States' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION != 'United States' 

eval_err_num:425
medium pred: SELECT SUM(course_credit) FROM course WHERE department_code = [desired department code]
medium gold: SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code 

extra pred: SELECT famous_title FROM artist WHERE artist_id IN (SELECT artist_id FROM volume WHERE weeks_on_top > 2 INTERSECT SELECT artist_id FROM volume WHERE weeks_on_top < 2)
extra gold: SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2 

eval_err_num:426
medium pred: SELECT AVG(age) FROM student AS S JOIN voting_record AS V ON S.student_id = V.student_id WHERE S.sex = "female" AND V.election_cycle = "spring" AND V.secretary_vote IS NOT NULL
medium gold: SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  "F" AND T2.Election_Cycle  =  "Spring" 

eval_err_num:427
hard pred: SELECT s.name FROM captain c JOIN ship s ON c.ship_id = s.ship_id WHERE c.age = (SELECT MIN(age) FROM captain)
hard gold: SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1 

eval_err_num:428
extra pred: SELECT forename, surname FROM drivers WHERE driver_id IN ( SELECT driver_id FROM races WHERE name = 'Australian Grand Prix' ) AND driver_id NOT IN ( SELECT driver_id FROM races WHERE name = 'Chinese Grand Prix' )
extra gold: SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Australian Grand Prix" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Chinese Grand Prix" 

eval_err_num:429
medium pred: SELECT b.building, count(distinct f.faculty_id) FROM faculty f JOIN faculty_participates_in fp ON f.faculty_id = fp.faculty_id JOIN activity a ON a.activity_id = fp.activity_id JOIN building b ON a.building_id = b.building_id GROUP BY b.building;
medium gold: SELECT building ,  count(*) FROM Faculty GROUP BY building 

eval_err_num:430
medium pred: SELECT room_name, COUNT(*) AS num_reservations FROM reservations GROUP BY room_name
medium gold: SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room 

eval_err_num:431
extra pred: SELECT hometown, COUNT(*) as count FROM people JOIN gymnast ON people.people_id = gymnast.gymnast_id GROUP BY hometown ORDER BY count DESC LIMIT 1
extra gold: SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1 

medium pred: SELECT customer_address FROM customers WHERE customer_id = 10
medium gold: SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10 

eval_err_num:432
easy pred: SELECT department_name FROM department ORDER BY department_name ASC
easy gold: SELECT dept_name FROM department ORDER BY dept_name 

eval_err_num:433
medium pred: SELECT T1.employee_name AS destruction_authorizer, T2.employee_name AS destroyer FROM documents_to_be_destroyed AS T3 JOIN employees AS T1 ON T3.destruction_authorised_by_employee_id = T1.employee_id JOIN employees AS T2 ON T3.destroyed_by_employee_id = T2.employee_id
medium gold: SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id; 

eval_err_num:434
medium pred: SELECT statement_id, statement_details, account_details FROM accounts
medium gold: SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id 

eval_err_num:435
extra pred: SELECT customer_first_name || ' ' || customer_last_name AS full_name FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM accounts)
extra gold: SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id 

extra pred: SELECT COUNT(*) FROM faculty WHERE campus = (SELECT campus FROM degrees WHERE year = 2001 ORDER BY degrees LIMIT 1)
extra gold: SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1 

medium pred: SELECT AVG(salary) FROM salary WHERE team_id = 'BOS'
medium gold: SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' 

eval_err_num:436
medium pred: SELECT phone, room, building FROM faculty WHERE first_name = "Jerry" AND last_name = "Prince"
medium gold: SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  "Jerry" AND Lname  =  "Prince" 

medium pred: SELECT tourist_attraction_id, name FROM tourist_attractions WHERE tourist_attraction_id IN (SELECT tourist_attraction_id FROM visits GROUP BY tourist_attraction_id HAVING COUNT(*) >= 2)
medium gold: SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2 

eval_err_num:437
medium pred: SELECT investor, COUNT(*) AS num_entrepreneurs FROM entrepreneur GROUP BY investor
medium gold: SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor 

eval_err_num:438
easy pred: SELECT COUNT(DISTINCT incident_type_code) FROM reference_incident_type
easy gold: SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident 

eval_err_num:439
medium pred: SELECT customer_name, account_balance FROM customer WHERE customer_name LIKE '%a%'
medium gold: SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%' 

easy pred: SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING COUNT(DISTINCT customer_phone) > 4
easy gold: SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4 

eval_err_num:440
extra pred: SELECT artist_name, COUNT(*) AS num_songs FROM song GROUP BY artist_name ORDER BY num_songs DESC LIMIT 3
extra gold: SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3 

eval_err_num:441
extra pred: SELECT instrument FROM instruments AS i JOIN band AS b ON i.bandmate_id = b.id JOIN songs AS s ON i.song_id = s.song_id WHERE b.last_name = "Heilo" AND s.title = "Le Pop"
extra gold: SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  "Heilo" AND T3.title  =  "Le Pop" 

hard pred: SELECT DISTINCT author FROM submission WHERE author NOT IN (SELECT author FROM submission JOIN acceptance ON submission.submission_id = acceptance.submission_id)
hard gold: SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance) 

eval_err_num:442
medium pred: SELECT f.name, fm.price_in_dollar FROM furniture f JOIN furniture_manufacte fm ON f.furniture_id = fm.furniture_id JOIN manufacturer m ON fm.manufacturer_id = m.manufacturer_id WHERE m.num_of_factories > 0 OR m.num_of_shops > 0
medium gold: SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID 

easy pred: SELECT COUNT(*) FROM staff_roles
easy gold: SELECT count(DISTINCT role_code) FROM Project_Staff 

medium pred: SELECT team FROM player WHERE age IN ( SELECT age FROM player ORDER BY age DESC LIMIT 5 )
medium gold: SELECT Team FROM player ORDER BY Age DESC LIMIT 5 

hard pred: SELECT DISTINCT product_type_code FROM products WHERE product_price > 4500 AND product_type_code IN (SELECT DISTINCT product_type_code FROM products WHERE product_price < 3000)
hard gold: SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000 

eval_err_num:443
medium pred: SELECT first_name, last_name, phone FROM faculty WHERE sex = "female"
medium gold: SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F' 

eval_err_num:444
medium pred: SELECT flight_number FROM flight WHERE distance = (SELECT MIN(distance) FROM flight)
medium gold: SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3 

eval_err_num:445
hard pred: SELECT last_name FROM customer WHERE customer_id NOT IN ( SELECT customer_id FROM invoice WHERE total > 20 )
hard gold: SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20 

medium pred: SELECT candidate_id, support_rate, consider_rate, oppose_rate FROM candidate ORDER BY unsure_rate ASC
medium gold: SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate 

eval_err_num:446
hard pred: SELECT c.name, SUM(i.total) AS invoice_size FROM countries AS c JOIN invoices AS i ON c.id = i.country_id GROUP BY c.name ORDER BY invoice_size DESC LIMIT 8
hard gold: SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8; 

hard pred: SELECT DISTINCT official_native_language FROM country WHERE country_id IN ( SELECT country FROM match_season WHERE college LIKE 'Maryland%' OR college LIKE 'Duke%' )
hard gold: SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  "Maryland" OR T2.College  =  "Duke" 

eval_err_num:447
extra pred: SELECT service_type_description, service_type_code FROM reference_service_types WHERE service_type_code = ( SELECT service_type_code FROM services GROUP BY service_type_code ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1 

eval_err_num:448
extra pred: SELECT customer_id, name FROM accounts WHERE balance < (SELECT MAX(balance) FROM checking) AND account_type = 'checking'
extra gold: SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking) 

eval_err_num:449
hard pred: SELECT name FROM useracct WHERE user_id NOT IN (SELECT DISTINCT user_id FROM review)
hard gold: SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review) 

eval_err_num:450
easy pred: SELECT song_id FROM files WHERE formats = 'mp3'
easy gold: SELECT f_id FROM files WHERE formats  =  "mp3" 

hard pred: SELECT branch_id, name FROM branch WHERE branch_id IN (SELECT branch_id FROM membership_register_branch WHERE register_year > '2015')
hard gold: SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id 

eval_err_num:451
hard pred: SELECT payment_method_code, COUNT(payment_method_code) as count FROM payments GROUP BY payment_method_code ORDER BY count ASC LIMIT 1
hard gold: SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1 

hard pred: SELECT AVG(height) FROM player WHERE player_id IN (SELECT player_id FROM player_college WHERE college_id = 'Yale University')
hard gold: SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University'; 

eval_err_num:452
extra pred: SELECT MAX(milliseconds) AS max_length, MIN(milliseconds) AS min_length FROM track WHERE genre_id = (SELECT genre_id FROM genre WHERE name = 'Pop')
extra gold: SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  "Pop" 

eval_err_num:453
hard pred: SELECT staff_name, job_title_code FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE date_assigned_to IS NULL ORDER BY date_assigned_from DESC LIMIT 1
hard gold: SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1 

eval_err_num:454
medium pred: SELECT S.service_name FROM services AS S INNER JOIN first_notification_of_loss AS FNOL ON S.service_id = FNOL.service_id GROUP BY S.service_name HAVING COUNT(*) > 2
medium gold: SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2 

hard pred: SELECT DISTINCT investor FROM entrepreneur WHERE money_requested > 140000 AND entrepreneur_id IN (SELECT entrepreneur_id FROM entrepreneur WHERE money_requested < 120000)
hard gold: SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000 

eval_err_num:455
medium pred: SELECT team, COUNT(*) as num_eliminations FROM elimination GROUP BY team
medium gold: SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team 

extra pred: SELECT name, birth_place FROM people WHERE people_id NOT IN (SELECT people_id FROM body_builder)
extra gold: SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id 

medium pred: SELECT headquarters FROM company WHERE main_industry = "banking" GROUP BY headquarters HAVING COUNT(DISTINCT company_id) >= 2
medium gold: SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2 

eval_err_num:456
hard pred: SELECT papers.title FROM papers JOIN authorship_count ON papers.paper_id = authorship_count.paper_id JOIN authors ON authors.author_id = authorship_count.author_id WHERE authors.first_name = 'Jeremy' AND authors.last_name = 'Gibbons'
hard gold: SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  "Jeremy" AND t1.lname  =  "Gibbons" 

eval_err_num:457
easy pred: SELECT DISTINCT class_room FROM list WHERE grade = 4
easy gold: SELECT DISTINCT classroom FROM list WHERE grade  =  4 

extra pred: SELECT customer_id FROM policies WHERE start_date = (SELECT MAX(start_date) FROM policies)
extra gold: SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies) 

eval_err_num:458
extra pred: SELECT student_id, first_name FROM students JOIN student_addresses ON students.student_id = student_addresses.student_id GROUP BY students.student_id, students.first_name HAVING AVG(monthly_rental) = (SELECT MAX(avg_rental) FROM (SELECT student_id, AVG(monthly_rental) as avg_rental FROM student_addresses GROUP BY student_id) as avg_rentals)
extra gold: SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1 

eval_err_num:459
medium pred: SELECT name FROM representative ORDER BY votes DESC
medium gold: SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC 

hard pred: SELECT * FROM organisations WHERE organisation_type = 'Sponsor' ORDER BY organisation_details ASC
hard gold: SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details 

eval_err_num:460
medium pred: SELECT apartment_type_code, apartment_number FROM apartments WHERE building_id IN (SELECT building_id FROM apartment_buildings WHERE building_manager = "Kyle")
medium gold: SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  "Kyle" 

eval_err_num:461
extra pred: SELECT S.first_name, S.last_name FROM student AS S JOIN lives_in AS L ON S.student_id = L.student_id JOIN has_amenity AS H ON L.dorm_id = H.dorm_id JOIN dorm_amenity AS A ON H.amenity_id = A.amenity_id JOIN dorm AS D ON L.dorm_id = D.dorm_id WHERE A.amenity_name = 'TV Lounge'
extra gold: SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge') 

eval_err_num:462
extra pred: SELECT AVG(age) FROM student WHERE lives_in.dorm_id = (SELECT dorm_id FROM dorm ORDER BY student_capacity DESC LIMIT 1)
extra gold: SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm) 

eval_err_num:463
extra pred: SELECT department_store_id, department_store_name FROM department_stores WHERE department_store_id IN ( SELECT department_store_id FROM departments WHERE department_name = 'marketing' AND department_name = 'managing' )
extra gold: SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  "marketing" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  "managing" 

hard pred: SELECT address_content FROM addresses WHERE address_id IN ( SELECT address_id FROM customer_addresses WHERE customer_id IN ( SELECT customer_id FROM customers WHERE customer_name = "Maudie Kertzmann" ) )
hard gold: SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  "Maudie Kertzmann" 

eval_err_num:464
hard pred: SELECT checking.balance, savings.balance FROM accounts LEFT JOIN checking ON accounts.customer_id = checking.customer_id LEFT JOIN savings ON accounts.customer_id = savings.customer_id WHERE accounts.name = 'Brown'
hard gold: SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown' 

hard pred: SELECT first_name FROM customer WHERE customer_id NOT IN ( SELECT customer_id FROM rental WHERE return_date > '2005-08-23 02:06:01' )
hard gold: SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' ) 

eval_err_num:465
extra pred: SELECT dorm.dorm_name, dorm.student_capacity as capacity FROM dorm JOIN has_amenity ON dorm.dorm_id = has_amenity.dorm_id GROUP BY dorm.dorm_name, dorm.student_capacity ORDER BY COUNT(has_amenity.amenity_id) ASC LIMIT 1;
extra gold: SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1 

eval_err_num:466
hard pred: SELECT department.school_code, count(class.class_code) FROM department LEFT JOIN class ON department.department_code = class.course_code GROUP BY department.school_code
hard gold: SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code 

medium pred: SELECT country FROM airports WHERE elevation = (SELECT MAX(elevation) FROM airports)
medium gold: SELECT country FROM airports ORDER BY elevation DESC LIMIT 1 

extra pred: SELECT problem_id FROM problems WHERE date_problem_reported < (SELECT date_problem_reported FROM staff AS S JOIN problems AS P ON S.staff_id = P.reported_by_staff_id WHERE S.staff_first_name = "Lysanne" AND S.staff_last_name = "Turcotte" ORDER BY date_problem_reported LIMIT 1)
extra gold: SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = "Lysanne" AND T4.staff_last_name = "Turcotte" ) 

easy pred: SELECT COUNT(*) FROM bank WHERE city = 'New York City'
easy gold: SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City' 

medium pred: SELECT catalog_entry_name FROM catalog_contents WHERE price_in_dollars = (SELECT MAX(price_in_dollars) FROM catalog_contents)
medium gold: SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1 

medium pred: SELECT location, winning_aircraft FROM match
medium gold: SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft 

eval_err_num:467
easy pred: SELECT restaurant_type_description FROM restaurant_type WHERE restaurant_type_name = "Sandwich"
easy gold: SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = "Sandwich"; 

eval_err_num:468
hard pred: SELECT DISTINCT c.customer_name FROM customers c JOIN customer_orders co ON c.customer_id = co.customer_id JOIN order_items oi ON co.order_id = oi.order_id GROUP BY c.customer_id HAVING COUNT(DISTINCT oi.product_id) >= 3
hard gold: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3 

eval_err_num:469
medium pred: SELECT party, COUNT(*) as count FROM people GROUP BY party
medium gold: SELECT Party ,  COUNT(*) FROM people GROUP BY Party 

hard pred: SELECT DISTINCT name FROM wine WHERE price > (SELECT MAX(price) FROM wine WHERE winery = 'John Anthony')
hard gold: SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  "John Anthony") 

eval_err_num:470
medium pred: SELECT location, COUNT(railway_id) AS num_of_railways FROM railway GROUP BY location;
medium gold: SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION 

eval_err_num:471
extra pred: SELECT school_code, COUNT(*) as num_professors FROM department JOIN professor ON department.department_code = professor.department_code GROUP BY school_code ORDER BY num_professors ASC LIMIT 1
extra gold: SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1 

eval_err_num:472
hard pred: SELECT c.characteristic_name FROM products p JOIN product_characteristics pc ON p.product_id = pc.product_id JOIN characteristics c ON pc.characteristic_id = c.characteristic_id WHERE p.product_name = "sesame"
hard gold: SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  "sesame" 

eval_err_num:473
extra pred: SELECT address_id, city FROM student_addresses GROUP BY address_id, city ORDER BY AVG(monthly_rental) DESC LIMIT 1
extra gold: SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1 

                     easy                 medium               hard                 extra                all                 
count                226                  392                  211                  170                  999                 
=====================   EXECUTION ACCURACY     =====================
execution            0.712                0.418                0.237                0.165                0.403               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.699                0.337                0.166                0.088                0.340               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.944                0.911                0.882                0.900                0.916               
select(no AGG)       0.955                0.915                0.882                0.900                0.922               
where                0.963                0.538                0.391                0.326                0.549               
where(no OP)         0.963                0.555                0.464                0.435                0.590               
group(no Having)     0.938                0.935                0.875                0.714                0.903               
group                0.562                0.742                0.875                0.714                0.710               
order                1.000                0.917                0.750                0.400                0.856               
and/or               1.000                0.944                0.909                0.860                0.936               
IUEN                 0.000                0.000                0.667                0.000                0.667               
keywords             0.990                0.759                0.571                0.500                0.744               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.743                0.495                0.355                0.265                0.482               
select(no AGG)       0.752                0.497                0.355                0.265                0.485               
where                0.658                0.379                0.233                0.152                0.341               
where(no OP)         0.658                0.391                0.276                0.202                0.367               
group(no Having)     0.789                0.282                0.135                0.071                0.230               
group                0.474                0.223                0.135                0.071                0.180               
order                0.800                0.478                0.169                0.056                0.312               
and/or               0.996                1.000                0.933                0.959                0.979               
IUEN                 0.000                0.000                0.045                0.000                0.024               
keywords             0.729                0.404                0.230                0.149                0.361               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.832                0.641                0.507                0.409                0.632               
select(no AGG)       0.842                0.645                0.507                0.409                0.636               
where                0.782                0.444                0.292                0.207                0.421               
where(no OP)         0.782                0.458                0.346                0.276                0.453               
group(no Having)     0.857                0.433                0.233                0.130                0.366               
group                0.514                0.343                0.233                0.130                0.288               
order                0.889                0.629                0.276                0.098                0.457               
and/or               0.998                0.971                0.921                0.907                0.957               
IUEN                 1.000                1.000                0.085                1.000                0.046               
keywords             0.840                0.527                0.328                0.229                0.486               
*** evaluating for english ***
